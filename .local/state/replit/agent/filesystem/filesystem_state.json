{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a modern full-stack furniture e-commerce application called \"SM Furnishings\" built with React, Express, and PostgreSQL. The application showcases affordable luxury furniture with a sophisticated design system featuring warm terracotta and cream color schemes. It implements a complete e-commerce experience with product catalogs, collections, and user interactions.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for client-side routing with a simple Switch/Route pattern\n- **UI Components**: Shadcn/ui component library built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom CSS variables for theming\n- **State Management**: TanStack Query (React Query) for server state management\n- **Form Handling**: React Hook Form with Zod validation via @hookform/resolvers\n\n## Design System\n- **Typography**: Multiple font families including Playfair Display (serif), Inter (sans-serif), and Dancing Script (script)\n- **Color Palette**: Warm earth tones with terracotta primary colors and cream backgrounds\n- **Component Library**: Complete set of reusable UI components following consistent design patterns\n- **Responsive Design**: Mobile-first approach with comprehensive breakpoint handling\n\n## Backend Architecture\n- **Framework**: Express.js with TypeScript running on Node.js\n- **API Pattern**: RESTful API with /api prefix for all endpoints\n- **Request Handling**: Express middleware for JSON parsing, URL encoding, and logging\n- **Error Handling**: Centralized error handling middleware with proper HTTP status codes\n- **Development Tools**: Hot reloading with Vite integration and custom logging\n\n## Data Storage\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Schema Management**: Drizzle Kit for migrations and schema management\n- **Connection**: Neon Database serverless PostgreSQL connection\n- **Storage Interface**: Abstracted storage layer supporting both memory storage (development) and PostgreSQL (production)\n\n## Authentication & Session Management\n- **Session Storage**: PostgreSQL-backed sessions using connect-pg-simple\n- **User Management**: Basic user schema with username/password authentication\n- **Type Safety**: Zod schemas for request validation and TypeScript interfaces\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL hosting for production data storage\n- **Drizzle ORM**: Type-safe database toolkit with PostgreSQL dialect support\n\n## UI/UX Libraries\n- **Radix UI**: Comprehensive set of low-level UI primitives for accessibility\n- **Tailwind CSS**: Utility-first CSS framework for rapid UI development\n- **Lucide React**: Icon library providing consistent iconography\n- **Embla Carousel**: Carousel/slider functionality for product displays\n\n## Development & Build Tools\n- **Vite**: Fast build tool and development server\n- **TypeScript**: Static type checking across the entire codebase\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **PostCSS**: CSS processing with Tailwind CSS and Autoprefixer\n\n## Third-party Integrations\n- **React Query**: Data fetching and caching layer for API interactions\n- **React Hook Form**: Form state management and validation\n- **Date-fns**: Date manipulation and formatting utilities\n- **Wouter**: Lightweight routing solution for React applications\n\nThe application follows modern full-stack development practices with strong separation of concerns, type safety throughout, and a focus on user experience and performance.","size_bytes":3680},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        terracotta: {\n          DEFAULT: \"var(--terracotta)\",\n          light: \"var(--terracotta-light)\",\n          dark: \"var(--terracotta-dark)\",\n        },\n        cream: {\n          DEFAULT: \"var(--cream)\",\n          light: \"var(--cream-light)\",\n          dark: \"var(--cream-dark)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        script: [\"var(--font-script)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3093},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { users, type User, type InsertUser } from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq } from \"drizzle-orm\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user || undefined;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(insertUser)\n      .returning();\n    return user;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":1025},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { CartProvider } from \"@/lib/cartContext\";\nimport Home from \"@/pages/home\";\nimport Shop from \"@/pages/shop\";\nimport About from \"@/pages/about\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/shop\" component={Shop} />\n      <Route path=\"/about\" component={About} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <CartProvider>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </CartProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":962},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;1,400&family=Inter:wght@300;400;500;600;700&family=Dancing+Script:wght@400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(35, 45%, 95%);\n  --foreground: hsl(25, 25%, 15%);\n  --card: hsl(35, 25%, 98%);\n  --card-foreground: hsl(25, 25%, 15%);\n  --popover: hsl(35, 25%, 98%);\n  --popover-foreground: hsl(25, 25%, 15%);\n  --primary: hsl(22, 40%, 52%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(35, 35%, 85%);\n  --secondary-foreground: hsl(25, 25%, 15%);\n  --muted: hsl(35, 25%, 90%);\n  --muted-foreground: hsl(25, 15%, 45%);\n  --accent: hsl(84, 61%, 52%);\n  --accent-foreground: hsl(25, 25%, 15%);\n  --destructive: hsl(356, 90%, 54%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(35, 25%, 82%);\n  --input: hsl(35, 25%, 90%);\n  --ring: hsl(22, 40%, 52%);\n  --chart-1: hsl(22, 40%, 52%);\n  --chart-2: hsl(84, 61%, 52%);\n  --chart-3: hsl(42, 92%, 56%);\n  --chart-4: hsl(147, 78%, 42%);\n  --chart-5: hsl(341, 75%, 51%);\n  --sidebar: hsl(35, 25%, 98%);\n  --sidebar-foreground: hsl(25, 25%, 15%);\n  --sidebar-primary: hsl(22, 40%, 52%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(35, 35%, 85%);\n  --sidebar-accent-foreground: hsl(25, 25%, 15%);\n  --sidebar-border: hsl(35, 25%, 82%);\n  --sidebar-ring: hsl(22, 40%, 52%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: 'Playfair Display', Georgia, serif;\n  --font-script: 'Dancing Script', cursive;\n  --font-mono: 'JetBrains Mono', monospace;\n  --radius: 8px;\n  --terracotta: hsl(22, 40%, 52%);\n  --terracotta-light: hsl(22, 50%, 65%);\n  --terracotta-dark: hsl(22, 30%, 40%);\n  --cream: hsl(35, 45%, 88%);\n  --cream-light: hsl(35, 55%, 92%);\n  --cream-dark: hsl(35, 35%, 80%);\n}\n\n/* Shop Page Animations */\n@keyframes cartBounce {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes heartPulse {\n  0% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n}\n\n/* About Page Animations */\n@keyframes fade-in-up {\n  from {\n    opacity: 0;\n    transform: translateY(40px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes float-delayed {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-15px); }\n}\n\n.animate-fade-in-up {\n  animation: fade-in-up 0.8s ease-out forwards;\n}\n\n.animation-delay-300 {\n  animation-delay: 0.3s;\n}\n\n.animation-delay-600 {\n  animation-delay: 0.6s;\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n.animate-float-delayed {\n  animation: float-delayed 4s ease-in-out infinite;\n  animation-delay: 1s;\n}\n\n.transform-style-preserve-3d {\n  transform-style: preserve-3d;\n}\n\n.backface-hidden {\n  backface-visibility: hidden;\n}\n\n.rotate-y-180 {\n  transform: rotateY(180deg);\n}\n\n.duration-2000 {\n  transition-duration: 2000ms;\n}\n\n/* Premium Tabs Animations */\n@keyframes slideInFromCenter {\n  from {\n    width: 0;\n    transform: scaleX(0);\n  }\n  to {\n    width: 100%;\n    transform: scaleX(1);\n  }\n}\n\n@keyframes fadeInUpStagger {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Utility classes for animations */\n.animate-underline {\n  animation: slideInFromCenter 0.3s ease-out;\n}\n\n.animate-fade-in-up {\n  animation: fadeInUpStagger 0.5s ease-out forwards;\n}\n\n@keyframes numberFlip {\n  0% { transform: rotateX(0); }\n  50% { transform: rotateX(-90deg); }\n  100% { transform: rotateX(0); }\n}\n\n@keyframes slideInFromLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-100%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideUpModal {\n  from {\n    opacity: 0;\n    transform: translateY(100px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes priceCountUp {\n  from {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n/* Utility classes */\n.animate-fadeInUp {\n  animation: fadeInUp 0.5s ease-out forwards;\n}\n\n.animate-heartPulse {\n  animation: heartPulse 0.6s ease-in-out;\n}\n\n.animate-numberFlip {\n  animation: numberFlip 0.3s ease-in-out;\n}\n\n.animate-slideInFromLeft {\n  animation: slideInFromLeft 0.5s ease-out;\n}\n\n.animate-slideUpModal {\n  animation: slideUpModal 0.4s ease-out;\n}\n\n.animate-priceCountUp {\n  animation: priceCountUp 0.3s ease-out;\n}\n\n.dark {\n  --background: hsl(25, 25%, 8%);\n  --foreground: hsl(35, 45%, 92%);\n  --card: hsl(25, 25%, 10%);\n  --card-foreground: hsl(35, 45%, 92%);\n  --popover: hsl(25, 25%, 8%);\n  --popover-foreground: hsl(35, 45%, 92%);\n  --primary: hsl(22, 40%, 52%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(25, 15%, 20%);\n  --secondary-foreground: hsl(35, 45%, 92%);\n  --muted: hsl(25, 15%, 15%);\n  --muted-foreground: hsl(35, 25%, 65%);\n  --accent: hsl(84, 61%, 52%);\n  --accent-foreground: hsl(25, 25%, 15%);\n  --destructive: hsl(356, 90%, 54%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(25, 15%, 18%);\n  --input: hsl(25, 15%, 15%);\n  --ring: hsl(22, 40%, 52%);\n  --sidebar: hsl(25, 25%, 10%);\n  --sidebar-foreground: hsl(35, 45%, 92%);\n  --sidebar-primary: hsl(22, 40%, 52%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(25, 15%, 20%);\n  --sidebar-accent-foreground: hsl(35, 45%, 92%);\n  --sidebar-border: hsl(25, 15%, 18%);\n  --sidebar-ring: hsl(22, 40%, 52%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-gradient-to-b from-background to-white text-foreground;\n  }\n\n  .font-script {\n    font-family: var(--font-script);\n  }\n}\n\n@layer components {\n  .terracotta {\n    color: var(--terracotta);\n  }\n  \n  .bg-terracotta {\n    background-color: var(--terracotta);\n  }\n  \n  .border-terracotta {\n    border-color: var(--terracotta);\n  }\n  \n  .hover\\:bg-terracotta-dark:hover {\n    background-color: var(--terracotta-dark);\n  }\n  \n  .cream {\n    color: var(--cream);\n  }\n  \n  .bg-cream {\n    background-color: var(--cream);\n  }\n  \n  .hover\\:bg-cream-dark:hover {\n    background-color: var(--cream-dark);\n  }\n}\n","size_bytes":6443},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { ChevronLeft, ChevronRight, Armchair, Table, Sofa, Square, Lightbulb, Flower } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Header } from \"@/components/Header\";\nimport { ProductCard } from \"@/components/ProductCard\";\nimport { PremiumTabs } from \"@/components/PremiumTabs\";\nimport { ServiceFeaturesBar } from \"@/components/ServiceFeaturesBar\";\nimport { bestSellers, luxuryProducts, collections } from \"@/data/products\";\nimport { Footer } from \"@/components/Footer\";\n\nconst categories = [\n  { id: 1, name: \"Rocking Chair\", icon: Armchair },\n  { id: 2, name: \"Side Table\", icon: Table },\n  { id: 3, name: \"Accent Chair\", icon: Sofa },\n  { id: 4, name: \"Ottoman\", icon: Square },\n  { id: 5, name: \"Table Lamp\", icon: Lightbulb },\n  { id: 6, name: \"Decorative Vase\", icon: Flower },\n];\n\n\nexport default function Home() {\n  const [currentCategoryIndex, setCurrentCategoryIndex] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  \n  // Countdown timer state\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  \n  // Number of categories to show at once\n  const categoriesPerView = 6;\n  \n  const nextCategory = () => {\n    setCurrentCategoryIndex((prev) => \n      prev + categoriesPerView >= categories.length ? 0 : prev + 1\n    );\n  };\n\n  const prevCategory = () => {\n    setCurrentCategoryIndex((prev) => \n      prev === 0 ? Math.max(0, categories.length - categoriesPerView) : prev - 1\n    );\n  };\n  \n  // Get visible categories based on current index\n  const getVisibleCategories = () => {\n    const visible = [];\n    for (let i = 0; i < categoriesPerView; i++) {\n      const index = (currentCategoryIndex + i) % categories.length;\n      visible.push(categories[index]);\n    }\n    return visible;\n  };\n\n  // Countdown timer effect\n  useEffect(() => {\n    const targetDate = new Date('2025-09-22T00:00:00');\n    \n    const updateCountdown = () => {\n      const now = new Date();\n      const difference = targetDate.getTime() - now.getTime();\n      \n      if (difference > 0) {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n        \n        setTimeLeft({ days, hours, minutes, seconds });\n      } else {\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      }\n    };\n\n    updateCountdown();\n    const interval = setInterval(updateCountdown, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const handleSubscribe = () => {\n    if (email) {\n      console.log(\"Newsletter subscription:\", email);\n      setEmail(\"\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <Header />\n\n      {/* Hero Section */}\n      <section className=\"relative h-screen flex items-center justify-center\">\n        <div \n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n          style={{\n            backgroundImage: \"url('https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"\n          }}\n        >\n          <div className=\"absolute inset-0 bg-black bg-opacity-30\"></div>\n        </div>\n        \n        <div className=\"relative z-10 text-center text-white px-6\">\n          <h2 className=\"font-serif text-5xl md:text-7xl lg:text-8xl font-bold mb-4 tracking-wide\" data-testid=\"hero-headline\">\n            AFFORDABLE <span className=\"text-cream\">·</span> LUXURY\n          </h2>\n          <p className=\"text-xl md:text-2xl font-light mb-8 tracking-wider\" data-testid=\"hero-subheading\">\n            For Every Home\n          </p>\n          <Button \n            variant=\"outline\" \n            size=\"lg\"\n            className=\"border-2 border-white bg-transparent text-terracotta font-semibold px-8 py-4 text-lg tracking-wide hover:bg-white hover:text-terracotta-dark transition-all duration-300\"\n            data-testid=\"button-explore-collection\"\n          >\n            Explore Collection\n          </Button>\n        </div>\n      </section>\n\n      {/* Shop by Category Section */}\n      <section className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-6\">\n          {/* Section Title with Decorative Lines */}\n          <div className=\"text-center mb-16\">\n            <div className=\"flex items-center justify-center\">\n              <div className=\"flex-1 h-px bg-foreground opacity-30\"></div>\n              <h3 className=\"font-serif text-3xl md:text-4xl font-bold mx-8 text-foreground tracking-wider\" data-testid=\"category-title\">\n                SHOP BY CATEGORY\n              </h3>\n              <div className=\"flex-1 h-px bg-foreground opacity-30\"></div>\n            </div>\n          </div>\n          \n          {/* Category Grid */}\n          <div className=\"relative\">\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8 max-w-6xl mx-auto\">\n              {getVisibleCategories().map((category) => {\n                const IconComponent = category.icon;\n                return (\n                  <div \n                    key={category.id}\n                    className=\"text-center group cursor-pointer\" \n                    data-testid={`category-${category.id}`}\n                  >\n                    <div className=\"w-24 h-24 md:w-32 md:h-32 bg-cream rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-cream-dark transition-colors duration-200\">\n                      <IconComponent className=\"text-terracotta text-2xl md:text-3xl w-8 h-8 md:w-12 md:h-12\" />\n                    </div>\n                    <p className=\"text-foreground font-medium\" data-testid={`category-name-${category.id}`}>\n                      {category.name}\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Navigation Arrows - Both positioned on right side top */}\n            <div className=\"absolute right-0 -top-16 flex gap-4\">\n              <button \n                onClick={prevCategory}\n                className=\"w-12 h-12 bg-terracotta text-white rounded-full flex items-center justify-center hover:bg-terracotta-dark transition-colors duration-200\"\n                data-testid=\"button-prev-category\"\n                aria-label=\"Previous categories\"\n              >\n                <ChevronLeft className=\"w-5 h-5\" />\n              </button>\n              <button \n                onClick={nextCategory}\n                className=\"w-12 h-12 bg-terracotta text-white rounded-full flex items-center justify-center hover:bg-terracotta-dark transition-colors duration-200\"\n                data-testid=\"button-next-category\"\n                aria-label=\"Next categories\"\n              >\n                <ChevronRight className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Designing Luxury Hero Section */}\n      <section className=\"py-16 lg:py-20 bg-[#582308] text-center\">\n        <div className=\"container mx-auto px-6 max-w-5xl\">\n          {/* Primary Headline - \"Designing Luxury\" */}\n          <h1 \n            className=\"text-white font-bold capitalize mb-1\"\n            style={{ \n              fontFamily: '\"DM Serif Display\", serif',\n              fontSize: 'clamp(2.5rem, 6vw, 7rem)',\n              lineHeight: '1.0'\n            }}\n          >\n            Designing Luxury\n          </h1>\n          \n          {/* Secondary Headline - \"affordably\" */}\n          <h2 \n            className=\"text-[#D58A5B] mb-8\"\n            style={{\n              fontFamily: '\"Dancing Script\", cursive',\n              fontSize: 'clamp(2.5rem, 6vw, 7rem)',\n              lineHeight: '1.1',\n              fontStyle: 'italic'\n            }}\n          >\n            affordably\n          </h2>\n          \n          {/* Supporting Text */}\n          <div className=\"max-w-3xl mx-auto\">\n            <p \n              className=\"text-white font-bold leading-relaxed text-base md:text-lg lg:text-xl\"\n              style={{\n                fontFamily: '\"Playfair Display\", serif'\n              }}\n            >\n              Experience the perfect balance of sophistication and accessibility in our curated collection.\n              <br />\n              Where luxury meets affordability, creating timeless elegance for every home.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Best Sellers Section */}\n      <section className=\"py-12 bg-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"border border-cream-dark rounded-2xl p-8 md:p-12\">\n              <div className=\"flex flex-col lg:flex-row gap-12 items-center\">\n                {/* Left Content Area - 30% */}\n                <div className=\"lg:w-[30%] space-y-6\">\n                  <h3 className=\"font-serif text-3xl md:text-4xl font-bold text-foreground\" data-testid=\"bestsellers-title\">\n                    BEST SELLERS\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\" data-testid=\"bestsellers-description\">\n                    Pizza Ipsum Dolor Meat Lovers Buffalo, Pepperoni Olives Steak Roll Pork Hawaiian, Philly Meatball Green Parmesan Philly.\n                  </p>\n                  <Button \n                    variant=\"outline\"\n                    className=\"border-2 border-terracotta bg-transparent text-terracotta font-semibold px-5 py-2.5 rounded-md hover:bg-terracotta hover:text-white transition-all duration-200\"\n                    data-testid=\"button-explore-more\"\n                  >\n                    Explore More\n                  </Button>\n                </div>\n                \n                {/* Right Product Showcase - 70% */}\n                <div className=\"lg:w-[70%]\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    {bestSellers.map((product) => (\n                      <ProductCard \n                        key={product.id}\n                        product={product}\n                        variant=\"bestseller\"\n                        testIdPrefix=\"product\"\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Luxury Choice Section */}\n      <section className=\"py-8 bg-gradient-to-br from-background to-cream\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"border-2 border-terracotta rounded-2xl p-6 md:p-8 bg-gradient-to-r from-cream to-background shadow-xl\">\n              <div className=\"flex flex-col lg:flex-row gap-8 items-center\">\n                {/* Left Product Showcase - 70% */}\n                <div className=\"lg:w-[70%] order-2 lg:order-1\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {luxuryProducts.map((product) => (\n                      <div key={product.id} className=\"relative group cursor-pointer\">\n                        <div className=\"bg-white rounded-lg p-4 shadow-md hover:shadow-lg transition-shadow duration-200\">\n                          <div className=\"aspect-square mb-3 overflow-hidden rounded-md\">\n                            <img \n                              src={product.image}\n                              alt={product.alt}\n                              className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-200\"\n                            />\n                          </div>\n                          <div className=\"text-xs bg-terracotta text-white px-2 py-1 rounded-full inline-block mb-2\">\n                            LUXURY\n                          </div>\n                          <h4 className=\"font-serif font-semibold text-sm mb-1\">{product.name}</h4>\n                          <p className=\"text-terracotta font-bold text-lg\">{product.price}</p>\n                          <Button size=\"sm\" className=\"w-full mt-2 bg-terracotta hover:bg-terracotta-dark text-xs\">\n                            VIEW LUXURY PIECE\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                {/* Right Content Area - 30% */}\n                <div className=\"lg:w-[30%] space-y-4 order-1 lg:order-2\">\n                  <h3 className=\"font-serif text-3xl md:text-4xl font-bold text-foreground tracking-wider\" data-testid=\"luxury-choice-title\">\n                    LUXURY CHOICE\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\" data-testid=\"luxury-choice-description\">\n                    Discover our exclusive luxury collection featuring handpicked pieces that embody sophistication and elegance. Each item represents the pinnacle of craftsmanship and design excellence.\n                  </p>\n                  <Button \n                    className=\"bg-gradient-to-r from-terracotta to-terracotta-dark text-white font-semibold px-6 py-3 rounded-lg hover:shadow-lg transition-all duration-300\"\n                    data-testid=\"button-luxury-explore-more\"\n                  >\n                    EXPLORE LUXURY\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Mission Section */}\n      <section className=\"py-20 bg-terracotta text-white\">\n        <div className=\"container mx-auto px-6 text-center max-w-4xl\">\n          <h3 className=\"font-serif text-4xl md:text-5xl font-bold mb-6\" data-testid=\"mission-title\">\n            Our <span className=\"font-script italic\">one</span> Mission\n          </h3>\n          <p className=\"text-xl md:text-2xl font-light mb-8 leading-relaxed\" data-testid=\"mission-tagline\">\n            Redefining how people experience luxury living.\n          </p>\n          <p className=\"text-lg leading-relaxed opacity-90 max-w-3xl mx-auto\" data-testid=\"mission-description\">\n            At SM Furnishings, we believe that luxury should be accessible to everyone. Our carefully curated collection combines timeless design with contemporary comfort, bringing affordable elegance to every home. We source the finest materials and work with skilled artisans to create furniture that doesn't just fill a space—it transforms it into a sanctuary of style and sophistication.\n          </p>\n        </div>\n      </section>\n\n      {/* Luxury Content Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-6\">\n          {/* Section Header */}\n          <div className=\"text-center mb-16\">\n            <h3 className=\"font-serif text-3xl md:text-4xl font-bold text-foreground\" data-testid=\"luxury-title\">\n              <span className=\"text-terracotta\">·</span> LUXURY <span className=\"text-terracotta\">·</span>\n            </h3>\n          </div>\n          \n          {/* Content Rows */}\n          <div className=\"max-w-7xl mx-auto space-y-20\">\n            {collections.map((collection) => (\n              <div \n                key={collection.id}\n                className={`grid lg:grid-cols-2 gap-12 items-center ${\n                  collection.imagePosition === \"left\" ? \"\" : \"lg:grid-cols-2\"\n                }`}\n              >\n                {collection.imagePosition === \"left\" ? (\n                  <>\n                    <div>\n                      <img \n                        src={collection.image}\n                        alt={collection.alt}\n                        className=\"w-full h-96 object-cover rounded-lg shadow-lg\"\n                        data-testid={`collection-image-${collection.id}`}\n                      />\n                    </div>\n                    <div className=\"space-y-6\">\n                      <h4 className=\"font-serif text-3xl font-bold text-foreground\" data-testid={`collection-title-${collection.id}`}>\n                        {collection.title}\n                      </h4>\n                      <p className=\"text-lg text-muted-foreground leading-relaxed\" data-testid={`collection-description-${collection.id}`}>\n                        {collection.description}\n                      </p>\n                      <Button \n                        className=\"bg-terracotta text-white px-8 py-3 font-semibold hover:bg-terracotta-dark transition-colors duration-200\"\n                        data-testid={`button-view-collection-${collection.id}`}\n                      >\n                        {collection.buttonText}\n                      </Button>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"space-y-6\">\n                      <h4 className=\"font-serif text-3xl font-bold text-foreground\" data-testid={`collection-title-${collection.id}`}>\n                        {collection.title}\n                      </h4>\n                      <p className=\"text-lg text-muted-foreground leading-relaxed\" data-testid={`collection-description-${collection.id}`}>\n                        {collection.description}\n                      </p>\n                      <Button \n                        className=\"bg-terracotta text-white px-8 py-3 font-semibold hover:bg-terracotta-dark transition-colors duration-200\"\n                        data-testid={`button-view-collection-${collection.id}`}\n                      >\n                        {collection.buttonText}\n                      </Button>\n                    </div>\n                    <div className=\"order-first lg:order-last\">\n                      <img \n                        src={collection.image}\n                        alt={collection.alt}\n                        className=\"w-full h-96 object-cover rounded-lg shadow-lg\"\n                        data-testid={`collection-image-${collection.id}`}\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Flash Sale Section */}\n      <section className=\"py-12 lg:py-16 bg-background\">\n        <div className=\"container mx-auto px-4 lg:px-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"flex flex-col lg:flex-row gap-4 lg:gap-6 items-stretch\">\n              {/* Left Section - Flash Sale Container */}\n              <div \n                className=\"w-full lg:w-[751px] min-h-[400px] lg:h-[474px] bg-[#FFEBCE] rounded-[30px] flex flex-col items-center justify-center p-6 lg:p-8 shadow-lg\"\n              >\n                {/* Flash Sale Title */}\n                <div className=\"text-center mb-4\">\n                  <span \n                    className=\"text-[#582308] font-bold\"\n                    style={{\n                      fontSize: 'clamp(2.5rem, 6vw, 5rem)',\n                      fontFamily: 'serif',\n                      lineHeight: '1.1'\n                    }}\n                  >\n                    Flash\n                  </span>{\" \"}\n                  <span \n                    className=\"text-black font-bold\"\n                    style={{\n                      fontSize: 'clamp(2.5rem, 6vw, 5rem)',\n                      fontFamily: 'serif',\n                      lineHeight: '1.1'\n                    }}\n                  >\n                    Sale\n                  </span>\n                </div>\n                \n                {/* Subtitle */}\n                <p \n                  className=\"text-black text-center mb-6 px-4\"\n                  style={{\n                    fontSize: 'clamp(1rem, 2.5vw, 1.5rem)',\n                    fontFamily: 'serif',\n                    fontWeight: '600'\n                  }}\n                >\n                  🎉 Get 25% off! Limited Time Offer! ⏰\n                </p>\n                \n                {/* Countdown Timer */}\n                <div className=\"flex items-center justify-center gap-2 lg:gap-4 mb-6\">\n                  <div className=\"text-center\">\n                    <div \n                      className=\"text-black font-bold bg-white rounded-lg px-2 py-1 shadow-sm\"\n                      style={{ \n                        fontSize: 'clamp(1.5rem, 4vw, 3rem)',\n                        minWidth: 'clamp(3rem, 6vw, 5rem)',\n                        fontFamily: 'monospace'\n                      }}\n                    >\n                      {String(timeLeft.days).padStart(2, '0')}\n                    </div>\n                    <div className=\"text-black text-xs lg:text-sm font-medium mt-1\">Days</div>\n                  </div>\n                  <div className=\"text-black font-bold\" style={{ fontSize: 'clamp(1.5rem, 4vw, 3rem)' }}>:</div>\n                  <div className=\"text-center\">\n                    <div \n                      className=\"text-black font-bold bg-white rounded-lg px-2 py-1 shadow-sm\"\n                      style={{ \n                        fontSize: 'clamp(1.5rem, 4vw, 3rem)',\n                        minWidth: 'clamp(3rem, 6vw, 5rem)',\n                        fontFamily: 'monospace'\n                      }}\n                    >\n                      {String(timeLeft.hours).padStart(2, '0')}\n                    </div>\n                    <div className=\"text-black text-xs lg:text-sm font-medium mt-1\">Hours</div>\n                  </div>\n                  <div className=\"text-black font-bold\" style={{ fontSize: 'clamp(1.5rem, 4vw, 3rem)' }}>:</div>\n                  <div className=\"text-center\">\n                    <div \n                      className=\"text-black font-bold bg-white rounded-lg px-2 py-1 shadow-sm\"\n                      style={{ \n                        fontSize: 'clamp(1.5rem, 4vw, 3rem)',\n                        minWidth: 'clamp(3rem, 6vw, 5rem)',\n                        fontFamily: 'monospace'\n                      }}\n                    >\n                      {String(timeLeft.minutes).padStart(2, '0')}\n                    </div>\n                    <div className=\"text-black text-xs lg:text-sm font-medium mt-1\">Minutes</div>\n                  </div>\n                  <div className=\"text-black font-bold\" style={{ fontSize: 'clamp(1.5rem, 4vw, 3rem)' }}>:</div>\n                  <div className=\"text-center\">\n                    <div \n                      className=\"text-black font-bold bg-white rounded-lg px-2 py-1 shadow-sm\"\n                      style={{ \n                        fontSize: 'clamp(1.5rem, 4vw, 3rem)',\n                        minWidth: 'clamp(3rem, 6vw, 5rem)',\n                        fontFamily: 'monospace'\n                      }}\n                    >\n                      {String(timeLeft.seconds).padStart(2, '0')}\n                    </div>\n                    <div className=\"text-black text-xs lg:text-sm font-medium mt-1\">Seconds</div>\n                  </div>\n                </div>\n                \n                {/* CTA Button */}\n                <Button \n                  className=\"bg-[#AF4C0F] hover:bg-[#8B3A0C] text-white font-bold px-6 lg:px-8 py-2 lg:py-3 rounded-full border-4 border-[#AF4C0F] shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105\"\n                  style={{ fontSize: 'clamp(1rem, 2vw, 1.25rem)' }}\n                >\n                  🛍️ Explore Deal\n                </Button>\n              </div>\n              \n              {/* Right Section - Product Images */}\n              <div className=\"grid grid-cols-2 lg:flex lg:flex-row gap-3 lg:gap-4 w-full lg:w-auto justify-center\">\n                {/* Product Image 1 */}\n                <div className=\"relative w-full max-w-[140px] lg:w-[168px] h-[400px] lg:h-[474px] rounded-[20px] lg:rounded-[30px] overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=800\"\n                    alt=\"Modern chair\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <div className=\"absolute inset-[5px] lg:inset-[7px] border-3 lg:border-4 border-[#FFEBCE] rounded-[20px] lg:rounded-[30px] pointer-events-none\"></div>\n                </div>\n                \n                {/* Product Image 2 */}\n                <div className=\"relative w-full max-w-[140px] lg:w-[168px] h-[400px] lg:h-[474px] rounded-[20px] lg:rounded-[30px] overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1549497538-303791108f95?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=800\"\n                    alt=\"Accent chair\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <div className=\"absolute inset-[5px] lg:inset-[7px] border-3 lg:border-4 border-[#FFEBCE] rounded-[20px] lg:rounded-[30px] pointer-events-none\"></div>\n                </div>\n                \n                {/* Product Image 3 */}\n                <div className=\"relative w-full max-w-[140px] lg:w-[168px] h-[400px] lg:h-[474px] rounded-[20px] lg:rounded-[30px] overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=800\"\n                    alt=\"Papasan chair\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <div className=\"absolute inset-[5px] lg:inset-[7px] border-3 lg:border-4 border-[#FFEBCE] rounded-[20px] lg:rounded-[30px] pointer-events-none\"></div>\n                </div>\n                \n                {/* Product Image 4 */}\n                <div className=\"relative w-full max-w-[140px] lg:w-[168px] h-[400px] lg:h-[474px] rounded-[20px] lg:rounded-[30px] overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1567538096630-e0c55bd6374c?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=800\"\n                    alt=\"Modern sofa\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <div className=\"absolute inset-[5px] lg:inset-[7px] border-3 lg:border-4 border-[#FFEBCE] rounded-[20px] lg:rounded-[30px] pointer-events-none\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Premium Collection Section with Interactive Tabs */}\n      <PremiumTabs />\n\n      {/* Service Features Bar */}\n      <ServiceFeaturesBar />\n\n      {/* Newsletter Section */}\n      <section className=\"py-16 bg-cream\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h3 className=\"font-serif text-3xl font-bold text-foreground mb-4\" data-testid=\"newsletter-title\">\n            Stay Connected\n          </h3>\n          <p className=\"text-muted-foreground mb-8 max-w-2xl mx-auto\" data-testid=\"newsletter-description\">\n            Be the first to know about new collections, exclusive offers, and design inspiration.\n          </p>\n          <div className=\"max-w-md mx-auto flex gap-4\">\n            <Input \n              type=\"email\" \n              placeholder=\"Enter your email\" \n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"flex-1 px-4 py-3 border border-border rounded-none focus:outline-none focus:border-terracotta\"\n              data-testid=\"input-newsletter-email\"\n            />\n            <Button \n              onClick={handleSubscribe}\n              className=\"bg-terracotta text-white px-8 py-3 font-semibold hover:bg-terracotta-dark transition-colors duration-200\"\n              data-testid=\"button-subscribe-newsletter\"\n            >\n              Subscribe\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":28467},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/shop.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\nimport { Link } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Slider } from '@/components/ui/slider';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Dialog, DialogContent, DialogTrigger } from '@/components/ui/dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { shopProducts } from '@/data/products';\nimport { Footer } from '@/components/Footer';\nimport { Header } from '@/components/Header';\nimport { useCart } from '@/lib/cartContext';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  Heart, \n  Eye, \n  ShoppingCart, \n  Star, \n  Filter, \n  Grid3X3, \n  List, \n  ChevronDown,\n  ChevronUp,\n  X,\n  Minus,\n  Plus,\n  ZoomIn,\n  Search,\n  User,\n  ShoppingBag,\n  Menu,\n  Package,\n  Sofa,\n  Bed,\n  UtensilsCrossed,\n  MonitorSpeaker\n} from 'lucide-react';\n\ninterface Product {\n  id: number;\n  name: string;\n  price: number;\n  originalPrice?: number;\n  images: string[];\n  category: string;\n  material: string;\n  color: string;\n  rating: number;\n  reviews: number;\n  inStock: boolean;\n  discount?: number;\n  badge?: string;\n}\n\n// Use shared products data from our central module\nconst allShopProducts = shopProducts;\n\nconst categories = [\n  { name: \"Living Room\", count: 45 },\n  { name: \"Bedroom\", count: 38 },\n  { name: \"Dining Room\", count: 32 },\n  { name: \"Office\", count: 28 }\n];\n\nconst materials = [\n  { name: \"Wood\", count: 45 },\n  { name: \"Metal\", count: 28 },\n  { name: \"Fabric\", count: 52 },\n  { name: \"Leather\", count: 18 },\n  { name: \"Glass\", count: 12 },\n  { name: \"Marble\", count: 8 }\n];\n\nconst colors = [\n  { name: \"Brown\", color: \"#8B4513\" },\n  { name: \"Blue\", color: \"#4169E1\" },\n  { name: \"Black\", color: \"#000000\" },\n  { name: \"Green\", color: \"#228B22\" },\n  { name: \"Red\", color: \"#DC143C\" },\n  { name: \"White\", color: \"#FFFFFF\" },\n  { name: \"Yellow\", color: \"#FFD700\" },\n  { name: \"Purple\", color: \"#8A2BE2\" },\n  { name: \"Orange\", color: \"#FF8C00\" }\n];\n\nexport default function ShopPage() {\n  const [products, setProducts] = useState<Product[]>(allShopProducts);\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>(allShopProducts);\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [selectedMaterials, setSelectedMaterials] = useState<string[]>([]);\n  const [selectedColors, setSelectedColors] = useState<string[]>([]);\n  const [priceRange, setPriceRange] = useState<[number, number]>([1000, 100000]);\n  const [sortBy, setSortBy] = useState<\"featured\" | \"price-low\" | \"price-high\" | \"rating\" | \"newest\">(\"featured\");\n  const [viewMode, setViewMode] = useState<\"grid\" | \"list\">(\"grid\");\n  const [wishlist, setWishlist] = useState<number[]>([]);\n  const [hoveredProduct, setHoveredProduct] = useState<number | null>(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState<{[key: number]: number}>({});\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [isQuickViewOpen, setIsQuickViewOpen] = useState(false);\n  const [animatingProducts, setAnimatingProducts] = useState<Set<number>>(new Set());\n  const [quantity, setQuantity] = useState(1);\n  const [isQuantityAnimating, setIsQuantityAnimating] = useState(false);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [isPriceAnimating, setIsPriceAnimating] = useState(false);\n  \n  // Use global cart context\n  const { addToCart: addToGlobalCart, cart: globalCart, cartCount, updateQuantity, removeFromCart, isCartOpen, setIsCartOpen } = useCart();\n  const { toast } = useToast();\n  \n  // Update total price when quantity or selected product changes\n  useEffect(() => {\n    if (selectedProduct) {\n      setIsPriceAnimating(true);\n      setTotalPrice(selectedProduct.price * quantity);\n      setTimeout(() => setIsPriceAnimating(false), 300);\n    }\n  }, [quantity, selectedProduct]);\n\n  const cartRef = useRef<HTMLButtonElement>(null);\n  const productRefs = useRef<{[key: number]: HTMLDivElement | null}>({});\n\n  // Auto-play image carousel on hover\n  useEffect(() => {\n    let interval: number;\n    if (hoveredProduct !== null) {\n      const product = products.find(p => p.id === hoveredProduct);\n      if (product && product.images.length > 1) {\n        interval = window.setInterval(() => {\n          setCurrentImageIndex(prev => ({\n            ...prev,\n            [hoveredProduct]: ((prev[hoveredProduct] || 0) + 1) % product.images.length\n          }));\n        }, 1000);\n      }\n    }\n    return () => window.clearInterval(interval);\n  }, [hoveredProduct, products]);\n\n  // Removed local cart count management - now handled by global cart context\n\n  // Filter products based on selections\n  useEffect(() => {\n    let filtered = products.filter(product => {\n      const categoryMatch = selectedCategories.length === 0 || selectedCategories.includes(product.category);\n      const materialMatch = selectedMaterials.length === 0 || selectedMaterials.includes(product.material);\n      const colorMatch = selectedColors.length === 0 || selectedColors.includes(product.color);\n      const priceMatch = product.price >= priceRange[0] && product.price <= priceRange[1];\n      \n      return categoryMatch && materialMatch && colorMatch && priceMatch;\n    });\n\n    // Apply sorting\n    switch (sortBy) {\n      case \"price-low\":\n        filtered.sort((a, b) => a.price - b.price);\n        break;\n      case \"price-high\":\n        filtered.sort((a, b) => b.price - a.price);\n        break;\n      case \"rating\":\n        filtered.sort((a, b) => b.rating - a.rating);\n        break;\n      case \"newest\":\n        filtered.sort((a, b) => b.id - a.id);\n        break;\n      default:\n        // featured - keep original order\n        break;\n    }\n\n    setFilteredProducts(filtered);\n  }, [products, selectedCategories, selectedMaterials, selectedColors, priceRange, sortBy]);\n\n  // Add to Cart with Animation\n  const addToCart = (productId: number, event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const product = products.find(p => p.id === productId);\n    if (!product) return;\n    \n    // Add to global cart context first (always works)\n    addToGlobalCart({\n      id: product.id,\n      name: product.name,\n      price: product.price,\n      image: product.images[0]\n    });\n\n    // Show success toast\n    toast({\n      title: \"Added to cart\",\n      description: `${product.name} has been added to your cart`,\n    });\n    \n    // Animation (optional, only if product element exists)\n    const productElement = productRefs.current[productId];\n    \n    if (productElement) {\n      setAnimatingProducts(prev => new Set(Array.from(prev).concat([productId])));\n      \n      // Create a smaller flying element (thumbnail instead of full card)\n      const flyingElement = document.createElement('div');\n      flyingElement.style.position = 'fixed';\n      flyingElement.style.zIndex = '9999';\n      flyingElement.style.pointerEvents = 'none';\n      flyingElement.style.width = '60px';\n      flyingElement.style.height = '60px';\n      flyingElement.style.borderRadius = '8px';\n      flyingElement.style.backgroundColor = '#B8734C';\n      flyingElement.style.transition = 'all 1s cubic-bezier(0.2, 0.8, 0.2, 1)';\n      flyingElement.style.boxShadow = '0 4px 12px rgba(184, 115, 76, 0.3)';\n      \n      // Add cart icon to flying element\n      flyingElement.innerHTML = `<div style=\"display: flex; align-items: center; justify-content: center; height: 100%; color: white;\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><path d=\"m16 10l-4 4l-4-4\"></path></svg></div>`;\n      \n      const productRect = productElement.getBoundingClientRect();\n      \n      flyingElement.style.left = (productRect.left + productRect.width / 2 - 30) + 'px';\n      flyingElement.style.top = (productRect.top + productRect.height / 2 - 30) + 'px';\n      \n      document.body.appendChild(flyingElement);\n      \n      // Simple upward animation\n      setTimeout(() => {\n        flyingElement.style.top = (productRect.top - 100) + 'px';\n        flyingElement.style.opacity = '0';\n        flyingElement.style.transform = 'scale(0.5)';\n      }, 100);\n      \n      // Clean up after animation\n      setTimeout(() => {\n        if (document.body.contains(flyingElement)) {\n          document.body.removeChild(flyingElement);\n        }\n        setAnimatingProducts(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(productId);\n          return newSet;\n        });\n      }, 1000);\n    }\n    \n    // Cart update is handled by global context through addToGlobalCart\n  };\n\n  // Toggle Wishlist with Pulse Effect\n  const toggleWishlist = (productId: number, event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    setWishlist(prev => {\n      if (prev.includes(productId)) {\n        return prev.filter(id => id !== productId);\n      } else {\n        return [...prev, productId];\n      }\n    });\n  };\n\n  // Quick View Modal\n  const openQuickView = (product: Product, event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setSelectedProduct(product);\n    setIsQuickViewOpen(true);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Use shared header component */}\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n\n      {/* Hero Section */}\n      <section \n        className=\"relative h-80 flex items-center justify-center bg-cover bg-center\"\n        style={{ \n          backgroundImage: 'url(https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=1600&h=800)'\n        }}\n        data-testid=\"hero-section\"\n      >\n        <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n        <div className=\"relative z-10 text-center text-white\">\n          <h1 className=\"font-serif text-4xl md:text-6xl font-bold mb-6\" data-testid=\"hero-title\">\n            Our Collections\n          </h1>\n          <p className=\"text-xl md:text-2xl font-light max-w-2xl mx-auto leading-relaxed\" data-testid=\"hero-subtitle\">\n            Discover furniture that transforms spaces into sanctuaries of style and comfort\n          </p>\n        </div>\n      </section>\n\n      <div className=\"container mx-auto px-6 py-8\">\n        <div className=\"flex gap-8\">\n          {/* Category Sidebar */}\n          <div className=\"w-80\">\n            <Card className=\"sticky top-4\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"font-semibold text-lg mb-6\">Categories</h3>\n\n                {/* Categories */}\n                <div className=\"space-y-4\">\n                  {/* All Products - Full Width */}\n                  <Button\n                    variant={selectedCategories.length === 0 ? \"default\" : \"outline\"}\n                    className=\"w-full justify-start text-left h-16 p-3\"\n                    onClick={() => setSelectedCategories([])}\n                    data-testid=\"category-all\"\n                  >\n                    <div className=\"w-10 h-10 rounded-lg overflow-hidden mr-3 flex-shrink-0\">\n                      <img \n                        src=\"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=80&h=80\" \n                        alt=\"All Products\"\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">All Products</div>\n                      <div className=\"text-xs text-muted-foreground\">View everything</div>\n                    </div>\n                  </Button>\n\n                  {/* Main Categories - 2x2 Grid */}\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {categories.map((category) => {\n                      let categoryImage = \"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=120&h=120\";\n                      let description = \"Browse collection\";\n                      \n                      if (category.name === \"Living Room\") {\n                        categoryImage = \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=120&h=120\";\n                        description = \"Sofas & chairs\";\n                      } else if (category.name === \"Bedroom\") {\n                        categoryImage = \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=120&h=120\";\n                        description = \"Beds & storage\";\n                      } else if (category.name === \"Dining Room\") {\n                        categoryImage = \"https://images.unsplash.com/photo-1449247709967-d4461a6a6103?ixlib=rb-4.0.3&auto=format&fit=crop&w=120&h=120\";\n                        description = \"Tables & chairs\";\n                      } else if (category.name === \"Office\") {\n                        categoryImage = \"https://images.unsplash.com/photo-1497366216548-37526070297c?ixlib=rb-4.0.3&auto=format&fit=crop&w=120&h=120\";\n                        description = \"Desks & chairs\";\n                      }\n                      \n                      return (\n                        <Button\n                          key={category.name}\n                          variant={selectedCategories.includes(category.name) ? \"default\" : \"outline\"}\n                          className=\"h-24 p-2 flex flex-col items-center justify-center text-center\"\n                          onClick={() => {\n                            if (selectedCategories.includes(category.name)) {\n                              setSelectedCategories(prev => prev.filter(c => c !== category.name));\n                            } else {\n                              setSelectedCategories([category.name]);\n                            }\n                          }}\n                          data-testid={`category-${category.name}`}\n                        >\n                          <div className=\"w-12 h-12 rounded-lg overflow-hidden mb-2\">\n                            <img \n                              src={categoryImage}\n                              alt={category.name}\n                              className=\"w-full h-full object-cover transition-transform duration-200 hover:scale-110\"\n                            />\n                          </div>\n                          <div>\n                            <div className=\"font-medium text-xs\">{category.name}</div>\n                            <div className=\"text-xs text-muted-foreground\">({category.count})</div>\n                          </div>\n                        </Button>\n                      );\n                    })}\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n\n                {/* Price Range */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3\">Price Range</h4>\n                  <Slider\n                    value={priceRange}\n                    onValueChange={(value) => setPriceRange(value as [number, number])}\n                    max={100000}\n                    min={1000}\n                    step={1000}\n                    className=\"mb-3\"\n                    data-testid=\"price-range-slider\"\n                  />\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <Input\n                      type=\"number\"\n                      value={priceRange[0]}\n                      onChange={(e) => setPriceRange([parseInt(e.target.value) || 0, priceRange[1]])}\n                      className=\"h-8\"\n                      data-testid=\"price-min-input\"\n                    />\n                    <span>—</span>\n                    <Input\n                      type=\"number\"\n                      value={priceRange[1]}\n                      onChange={(e) => setPriceRange([priceRange[0], parseInt(e.target.value) || 0])}\n                      className=\"h-8\"\n                      data-testid=\"price-max-input\"\n                    />\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n\n                {/* Colors */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3\">Colors</h4>\n                  <div className=\"grid grid-cols-3 gap-2\">\n                    {colors.map((color) => (\n                      <div\n                        key={color.name}\n                        className={`\n                          w-8 h-8 rounded-full border-2 cursor-pointer relative transition-transform hover:scale-110\n                          ${selectedColors.includes(color.name) ? 'border-terracotta scale-110' : 'border-gray-300'}\n                        `}\n                        style={{ backgroundColor: color.color }}\n                        onClick={() => {\n                          if (selectedColors.includes(color.name)) {\n                            setSelectedColors(prev => prev.filter(c => c !== color.name));\n                          } else {\n                            setSelectedColors(prev => [...prev, color.name]);\n                          }\n                        }}\n                        data-testid={`color-${color.name}`}\n                      >\n                        {selectedColors.includes(color.name) && (\n                          <div className=\"absolute inset-0 flex items-center justify-center\">\n                            <div className=\"w-2 h-2 bg-white rounded-full\" />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n\n                {/* Materials */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3\">Materials</h4>\n                  <div className=\"space-y-2\">\n                    {materials.map((material) => (\n                      <div key={material.name} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={`material-${material.name}`}\n                          checked={selectedMaterials.includes(material.name)}\n                          onCheckedChange={(checked) => {\n                            if (checked) {\n                              setSelectedMaterials(prev => [...prev, material.name]);\n                            } else {\n                              setSelectedMaterials(prev => prev.filter(m => m !== material.name));\n                            }\n                          }}\n                          data-testid={`checkbox-material-${material.name}`}\n                        />\n                        <label \n                          htmlFor={`material-${material.name}`}\n                          className=\"text-sm cursor-pointer flex-1\"\n                        >\n                          {material.name} ({material.count})\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Clear Filters */}\n                <Button\n                  variant=\"outline\"\n                  className=\"w-full\"\n                  onClick={() => {\n                    setSelectedCategories([]);\n                    setSelectedMaterials([]);\n                    setSelectedColors([]);\n                    setPriceRange([1000, 100000]);\n                  }}\n                  data-testid=\"clear-filters\"\n                >\n                  Clear All Filters\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1\">\n            {/* Top Controls */}\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-4\">\n                <Select value={sortBy} onValueChange={(value) => setSortBy(value as typeof sortBy)}>\n                  <SelectTrigger className=\"w-48\" data-testid=\"sort-select\">\n                    <SelectValue placeholder=\"Sort by\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"featured\">Featured</SelectItem>\n                    <SelectItem value=\"price-low\">Price: Low to High</SelectItem>\n                    <SelectItem value=\"price-high\">Price: High to Low</SelectItem>\n                    <SelectItem value=\"newest\">Newest First</SelectItem>\n                    <SelectItem value=\"rating\">Best Rating</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant={viewMode === \"grid\" ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setViewMode(\"grid\")}\n                  data-testid=\"view-grid\"\n                >\n                  <Grid3X3 className=\"w-4 h-4\" />\n                </Button>\n                <Button\n                  variant={viewMode === \"list\" ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setViewMode(\"list\")}\n                  data-testid=\"view-list\"\n                >\n                  <List className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n\n            {/* Product Grid */}\n            <div className={`\n              grid gap-6 transition-all duration-300\n              ${viewMode === \"grid\" ? \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3\" : \"grid-cols-1\"}\n            `}>\n              {filteredProducts.map((product, index) => (\n                <Card \n                  key={product.id}\n                  ref={(el) => productRefs.current[product.id] = el}\n                  className={`\n                    group cursor-pointer transition-all duration-300 hover:shadow-xl hover:-translate-y-2\n                    ${animatingProducts.has(product.id) ? 'animate-pulse' : ''}\n                  `}\n                  style={{\n                    animationDelay: `${index * 0.1}s`\n                  }}\n                  onMouseEnter={() => {\n                    setHoveredProduct(product.id);\n                    setCurrentImageIndex(prev => ({ ...prev, [product.id]: 0 }));\n                  }}\n                  onMouseLeave={() => {\n                    setHoveredProduct(null);\n                    setCurrentImageIndex(prev => ({ ...prev, [product.id]: 0 }));\n                  }}\n                  data-testid={`product-card-${product.id}`}\n                >\n                  <div className=\"relative overflow-hidden\">\n                    {/* Product Image with Carousel */}\n                    <div className=\"aspect-square overflow-hidden relative group\">\n                      <img\n                        src={product.images[currentImageIndex[product.id] || 0]}\n                        alt={product.name}\n                        className=\"w-full h-full object-cover transition-transform duration-700 group-hover:scale-110\"\n                        data-testid={`product-image-${product.id}`}\n                      />\n                      \n                      {/* Image Gallery Indicators */}\n                      {product.images.length > 1 && (\n                        <div className=\"absolute bottom-2 left-1/2 transform -translate-x-1/2 flex space-x-1\">\n                          {product.images.map((_, imgIndex) => (\n                            <div\n                              key={imgIndex}\n                              className={`w-2 h-2 rounded-full transition-all duration-300 ${\n                                (currentImageIndex[product.id] || 0) === imgIndex ? 'bg-white' : 'bg-white/50'\n                              }`}\n                            />\n                          ))}\n                        </div>\n                      )}\n\n                      {/* Quick Actions - Slide in on hover */}\n                      <div className=\"absolute top-4 right-4 flex flex-col space-y-2 opacity-0 translate-y-4 group-hover:opacity-100 group-hover:translate-y-0 transition-all duration-300\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"secondary\"\n                          className={`\n                            w-10 h-10 rounded-full p-0 backdrop-blur-sm bg-white/80 hover:bg-white transition-all duration-300\n                            ${wishlist.includes(product.id) ? 'text-red-500' : 'text-gray-600'}\n                          `}\n                          onClick={(e) => toggleWishlist(product.id, e)}\n                          data-testid={`wishlist-${product.id}`}\n                        >\n                          <Heart \n                            className={`w-4 h-4 transition-all duration-300 ${\n                              wishlist.includes(product.id) ? 'fill-current animate-heartPulse' : ''\n                            }`} \n                          />\n                        </Button>\n                        \n                        <Button\n                          size=\"sm\"\n                          variant=\"secondary\"\n                          className=\"w-10 h-10 rounded-full p-0 backdrop-blur-sm bg-white/80 hover:bg-white transition-all duration-300\"\n                          onClick={(e) => openQuickView(product, e)}\n                          data-testid={`quick-view-${product.id}`}\n                        >\n                          <Eye className=\"w-4 h-4 text-gray-600\" />\n                        </Button>\n                        \n                        <Button\n                          size=\"sm\"\n                          variant=\"secondary\"\n                          className=\"w-10 h-10 rounded-full p-0 backdrop-blur-sm bg-white/80 hover:bg-white transition-all duration-300\"\n                          data-testid={`zoom-${product.id}`}\n                        >\n                          <ZoomIn className=\"w-4 h-4 text-gray-600\" />\n                        </Button>\n                      </div>\n\n                      {/* Badge */}\n                      {product.badge && (\n                        <Badge \n                          className={`\n                            absolute top-4 left-4 \n                            ${product.badge === \"20% OFF\" ? 'bg-red-500' : \n                              product.badge === \"OUT OF STOCK\" ? 'bg-gray-500' : \n                              'bg-terracotta'}\n                          `}\n                          data-testid={`badge-${product.id}`}\n                        >\n                          {product.badge}\n                        </Badge>\n                      )}\n                    </div>\n\n                    {/* Product Info */}\n                    <CardContent className=\"p-4\">\n                      <h3 className=\"font-serif text-lg font-semibold mb-2 group-hover:text-terracotta transition-colors duration-200\" data-testid={`product-name-${product.id}`}>\n                        {product.name}\n                      </h3>\n                      \n                      {/* Rating */}\n                      <div className=\"flex items-center space-x-1 mb-2\">\n                        <div className=\"flex\">\n                          {[...Array(5)].map((_, i) => (\n                            <Star\n                              key={i}\n                              className={`w-4 h-4 ${\n                                i < Math.floor(product.rating) ? 'text-yellow-400 fill-current' : 'text-gray-300'\n                              }`}\n                            />\n                          ))}\n                        </div>\n                        <span className=\"text-sm text-muted-foreground\" data-testid={`rating-${product.id}`}>\n                          {product.rating} ({product.reviews})\n                        </span>\n                      </div>\n\n                      {/* Price */}\n                      <div className=\"flex items-center space-x-2 mb-4\">\n                        <span className=\"text-lg font-bold text-terracotta animate-priceCountUp\" data-testid={`price-${product.id}`}>\n                          ₹{product.price.toLocaleString()}\n                        </span>\n                        {product.originalPrice && (\n                          <span className=\"text-sm text-muted-foreground line-through\" data-testid={`original-price-${product.id}`}>\n                            ₹{product.originalPrice.toLocaleString()}\n                          </span>\n                        )}\n                      </div>\n\n                      {/* Add to Cart Button */}\n                      <Button\n                        className=\"w-full bg-terracotta hover:bg-terracotta-dark transition-all duration-300 transform hover:-translate-y-1\"\n                        onClick={(e) => addToCart(product.id, e)}\n                        disabled={!product.inStock || animatingProducts.has(product.id)}\n                        data-testid={`add-to-cart-${product.id}`}\n                      >\n                        {animatingProducts.has(product.id) ? (\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                            <span>Adding...</span>\n                          </div>\n                        ) : (\n                          <>\n                            <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                            {product.inStock ? 'Add to Cart' : 'Out of Stock'}\n                          </>\n                        )}\n                      </Button>\n                    </CardContent>\n                  </div>\n                </Card>\n              ))}\n            </div>\n\n            {/* Product Count - Bottom */}\n            <div className=\"text-center mt-8 pt-6 border-t\">\n              <div className=\"text-sm text-muted-foreground\">\n                Showing {filteredProducts.length} of {products.length} products\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick View Modal */}\n      <Dialog open={isQuickViewOpen} onOpenChange={setIsQuickViewOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto animate-in slide-in-from-bottom-10 duration-500\">\n          {selectedProduct && (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {/* Image Gallery */}\n              <div className=\"space-y-4\">\n                <div className=\"aspect-square overflow-hidden rounded-lg group\">\n                  <img\n                    src={selectedProduct.images[0]}\n                    alt={selectedProduct.name}\n                    className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-4 gap-2\">\n                  {selectedProduct.images.slice(1).map((image, index) => (\n                    <div key={index} className=\"aspect-square overflow-hidden rounded-lg\">\n                      <img\n                        src={image}\n                        alt={`${selectedProduct.name} ${index + 2}`}\n                        className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-200\"\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Product Details */}\n              <div className=\"space-y-4\">\n                <div>\n                  <h2 className=\"font-serif text-2xl font-bold mb-2\">{selectedProduct.name}</h2>\n                  <div className=\"flex items-center space-x-2 mb-4\">\n                    <div className=\"flex\">\n                      {[...Array(5)].map((_, i) => (\n                        <Star\n                          key={i}\n                          className={`w-4 h-4 ${\n                            i < Math.floor(selectedProduct.rating) ? 'text-yellow-400 fill-current' : 'text-gray-300'\n                          }`}\n                        />\n                      ))}\n                    </div>\n                    <span className=\"text-sm text-muted-foreground\">\n                      {selectedProduct.rating} ({selectedProduct.reviews} reviews)\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`text-2xl font-bold text-terracotta transition-all duration-300 ${\n                    isPriceAnimating ? 'animate-priceCountUp' : ''\n                  }`}>\n                    ₹{totalPrice.toLocaleString()}\n                  </span>\n                  {selectedProduct.originalPrice && (\n                    <span className=\"text-lg text-muted-foreground line-through\">\n                      ₹{(selectedProduct.originalPrice * quantity).toLocaleString()}\n                    </span>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <p><strong>Category:</strong> {selectedProduct.category}</p>\n                  <p><strong>Material:</strong> {selectedProduct.material}</p>\n                  <p><strong>Color:</strong> {selectedProduct.color}</p>\n                  <p><strong>Availability:</strong> \n                    <span className={selectedProduct.inStock ? 'text-green-600' : 'text-red-600'}>\n                      {selectedProduct.inStock ? ' In Stock' : ' Out of Stock'}\n                    </span>\n                  </p>\n                </div>\n\n                {/* Quantity Selector with Animation */}\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex items-center border rounded-lg\">\n                    <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                      <Minus className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"w-12 h-8 flex items-center justify-center font-mono text-lg\">\n                      1\n                    </div>\n                    <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                      <Plus className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"flex space-x-2\">\n                  <Button\n                    className=\"flex-1 bg-terracotta hover:bg-terracotta-dark\"\n                    onClick={(e) => {\n                      addToCart(selectedProduct.id, e);\n                      setIsQuickViewOpen(false);\n                    }}\n                    disabled={!selectedProduct.inStock}\n                  >\n                    <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                    Add to Cart\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    className={wishlist.includes(selectedProduct.id) ? 'text-red-500 border-red-500' : ''}\n                    onClick={(e) => toggleWishlist(selectedProduct.id, e)}\n                    data-testid={`wishlist-modal-${selectedProduct.id}`}\n                  >\n                    <Heart className={`w-4 h-4 transition-all duration-300 ${wishlist.includes(selectedProduct.id) ? 'fill-current animate-heartPulse' : ''}`} />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Cart Modal */}\n      <Dialog open={isCartOpen} onOpenChange={setIsCartOpen}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <div className=\"space-y-6\">\n            {/* Cart Header */}\n            <div className=\"flex items-center justify-between border-b pb-4\">\n              <h2 className=\"text-2xl font-serif font-bold\">Shopping Cart ({cartCount} items)</h2>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\"\n                onClick={() => setIsCartOpen(false)}\n                data-testid=\"close-cart\"\n              >\n                <X className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            {/* Cart Items */}\n            {cartCount === 0 ? (\n              <div className=\"text-center py-12\">\n                <ShoppingBag className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                <h3 className=\"text-lg font-medium mb-2\">Your cart is empty</h3>\n                <p className=\"text-muted-foreground mb-6\">Let's fill it with beautiful furniture!</p>\n                <Button \n                  onClick={() => setIsCartOpen(false)}\n                  className=\"bg-primary hover:bg-primary/90\"\n                >\n                  Continue Shopping\n                </Button>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {globalCart.map((item) => {\n                  const product = products.find(p => p.id === item.id);\n                  if (!product) return null;\n                  \n                  return (\n                    <div key={item.id} className=\"flex items-center space-x-4 border-b pb-4\">\n                      {/* Product Image */}\n                      <div className=\"w-20 h-20 rounded-lg overflow-hidden flex-shrink-0\">\n                        <img \n                          src={product.images[0]} \n                          alt={product.name}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                      \n                      {/* Product Details */}\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-medium\">{product.name}</h3>\n                        <p className=\"text-sm text-muted-foreground\">{product.category}</p>\n                        <p className=\"text-lg font-bold text-primary\">\n                          ₹{(product.price * item.quantity).toLocaleString()}\n                        </p>\n                      </div>\n                      \n                      {/* Quantity Controls */}\n                      <div className=\"flex items-center space-x-2\">\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                        >\n                          <Minus className=\"w-3 h-3\" />\n                        </Button>\n                        <span className=\"w-8 text-center\">{item.quantity}</span>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                        >\n                          <Plus className=\"w-3 h-3\" />\n                        </Button>\n                      </div>\n                      \n                      {/* Remove Button */}\n                      <Button \n                        variant=\"ghost\" \n                        size=\"sm\"\n                        onClick={() => removeFromCart(item.id)}\n                        className=\"text-red-500 hover:text-red-700\"\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  );\n                })}\n                \n                {/* Cart Total */}\n                <div className=\"border-t pt-4 space-y-4\">\n                  <div className=\"flex justify-between items-center text-lg font-bold\">\n                    <span>Total:</span>\n                    <span className=\"text-primary\">\n                      ₹{globalCart.reduce((total, item) => {\n                        return total + (item.price * item.quantity);\n                      }, 0).toLocaleString()}\n                    </span>\n                  </div>\n                  \n                  {/* Action Buttons */}\n                  <div className=\"flex space-x-3\">\n                    <Button \n                      variant=\"outline\" \n                      className=\"flex-1\"\n                      onClick={() => setIsCartOpen(false)}\n                    >\n                      Continue Shopping\n                    </Button>\n                    <Button \n                      className=\"flex-1 bg-primary hover:bg-primary/90\"\n                      onClick={() => {\n                        // Checkout functionality would go here\n                        alert(\"Proceeding to checkout...\");\n                      }}\n                    >\n                      Checkout\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","size_bytes":41355},"client/src/components/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Facebook, Instagram, Twitter, Mail, Phone, MapPin } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Separator } from \"@/components/ui/separator\";\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-terracotta text-white py-16\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Main Footer Content */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-12 mb-12\">\n            {/* Brand & About */}\n            <div className=\"space-y-6\">\n              <h3 className=\"font-serif text-2xl font-bold tracking-wider\" data-testid=\"footer-brand\">\n                SM FURNISHINGS\n              </h3>\n              <p className=\"text-cream leading-relaxed\" data-testid=\"footer-description\">\n                Transforming homes with affordable luxury furniture. Each piece is carefully curated to bring elegance and comfort to every space.\n              </p>\n              <div className=\"flex space-x-4\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"p-2 text-cream hover:text-white hover:bg-terracotta-dark transition-colors duration-200\"\n                  data-testid=\"footer-social-facebook\"\n                >\n                  <Facebook className=\"w-5 h-5\" />\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"p-2 text-cream hover:text-white hover:bg-terracotta-dark transition-colors duration-200\"\n                  data-testid=\"footer-social-instagram\"\n                >\n                  <Instagram className=\"w-5 h-5\" />\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"p-2 text-cream hover:text-white hover:bg-terracotta-dark transition-colors duration-200\"\n                  data-testid=\"footer-social-twitter\"\n                >\n                  <Twitter className=\"w-5 h-5\" />\n                </Button>\n              </div>\n            </div>\n\n            {/* Quick Links */}\n            <div className=\"space-y-6\">\n              <h4 className=\"font-semibold text-lg\" data-testid=\"footer-links-title\">Quick Links</h4>\n              <ul className=\"space-y-3\">\n                <li>\n                  <Link \n                    href=\"/\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-link-home\"\n                  >\n                    Home\n                  </Link>\n                </li>\n                <li>\n                  <Link \n                    href=\"/shop\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-link-shop\"\n                  >\n                    Shop\n                  </Link>\n                </li>\n                <li>\n                  <Link \n                    href=\"/about\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-link-about\"\n                  >\n                    About Us\n                  </Link>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-link-contact\"\n                  >\n                    Contact\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-link-faq\"\n                  >\n                    FAQ\n                  </a>\n                </li>\n              </ul>\n            </div>\n\n            {/* Categories */}\n            <div className=\"space-y-6\">\n              <h4 className=\"font-semibold text-lg\" data-testid=\"footer-categories-title\">Categories</h4>\n              <ul className=\"space-y-3\">\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-category-living\"\n                  >\n                    Living Room\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-category-bedroom\"\n                  >\n                    Bedroom\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-category-dining\"\n                  >\n                    Dining Room\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-category-office\"\n                  >\n                    Office\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"text-cream hover:text-white transition-colors duration-200\"\n                    data-testid=\"footer-category-outdoor\"\n                  >\n                    Outdoor\n                  </a>\n                </li>\n              </ul>\n            </div>\n\n            {/* Contact & Newsletter */}\n            <div className=\"space-y-6\">\n              <h4 className=\"font-semibold text-lg\" data-testid=\"footer-contact-title\">Contact Us</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center space-x-3 text-cream\">\n                  <Phone className=\"w-4 h-4\" />\n                  <span data-testid=\"footer-phone\">+1 (555) 123-4567</span>\n                </div>\n                <div className=\"flex items-center space-x-3 text-cream\">\n                  <Mail className=\"w-4 h-4\" />\n                  <span data-testid=\"footer-email\">hello@smfurnishings.com</span>\n                </div>\n                <div className=\"flex items-start space-x-3 text-cream\">\n                  <MapPin className=\"w-4 h-4 mt-1\" />\n                  <span data-testid=\"footer-address\">\n                    123 Furniture Ave<br />\n                    Design District, NY 10001\n                  </span>\n                </div>\n              </div>\n              \n              {/* Newsletter Signup */}\n              <div className=\"space-y-3\">\n                <h5 className=\"font-medium\" data-testid=\"footer-newsletter-title\">Stay Updated</h5>\n                <div className=\"flex space-x-2\">\n                  <Input\n                    type=\"email\"\n                    placeholder=\"Enter your email\"\n                    className=\"bg-cream text-foreground border-cream-dark placeholder:text-muted-foreground\"\n                    data-testid=\"footer-newsletter-input\"\n                  />\n                  <Button\n                    className=\"bg-cream text-terracotta hover:bg-cream-dark transition-colors duration-200 font-semibold\"\n                    data-testid=\"footer-newsletter-button\"\n                  >\n                    Subscribe\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <Separator className=\"bg-cream-dark opacity-30 mb-8\" />\n\n          {/* Bottom Footer */}\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <div className=\"text-cream text-sm\" data-testid=\"footer-copyright\">\n              © 2024 SM Furnishings. All rights reserved.\n            </div>\n            <div className=\"flex space-x-6 text-sm\">\n              <a \n                href=\"#\" \n                className=\"text-cream hover:text-white transition-colors duration-200\"\n                data-testid=\"footer-privacy\"\n              >\n                Privacy Policy\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-cream hover:text-white transition-colors duration-200\"\n                data-testid=\"footer-terms\"\n              >\n                Terms of Service\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-cream hover:text-white transition-colors duration-200\"\n                data-testid=\"footer-returns\"\n              >\n                Returns & Exchanges\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":9014},"client/src/components/ProductCard.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { HomeProduct } from \"@/data/products\";\n\ninterface ProductCardProps {\n  product: HomeProduct;\n  variant: \"bestseller\" | \"luxury\";\n  testIdPrefix?: string;\n}\n\nexport function ProductCard({ product, variant, testIdPrefix = \"product\" }: ProductCardProps) {\n  if (variant === \"luxury\") {\n    return (\n      <div \n        className=\"bg-gradient-to-br from-cream to-cream-dark rounded-xl overflow-hidden shadow-lg hover:shadow-2xl hover:ring-2 hover:ring-terracotta transition-all duration-300 group cursor-pointer transform hover:scale-105\"\n        data-testid={`${testIdPrefix}-card-${product.id}`}\n      >\n        <div className=\"aspect-[3/4] overflow-hidden relative\">\n          <img \n            src={product.image}\n            alt={product.alt}\n            className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n            data-testid={`${testIdPrefix}-image-${product.id}`}\n          />\n          {/* Luxury Badge */}\n          <div className=\"absolute top-3 right-3 bg-gradient-to-r from-terracotta to-terracotta-dark text-white px-3 py-1 rounded-full text-xs font-bold tracking-wide shadow-md\">\n            LUXURY\n          </div>\n          {/* Overlay Gradient */}\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n        </div>\n        <div className=\"p-6\">\n          <h4 className=\"font-serif text-xl font-bold text-foreground mb-3 tracking-wide\" data-testid={`${testIdPrefix}-name-${product.id}`}>\n            {product.name}\n          </h4>\n          <p className=\"text-terracotta font-bold text-xl mb-4\" data-testid={`${testIdPrefix}-price-${product.id}`}>\n            {product.price}\n          </p>\n          <Button \n            className=\"w-full bg-gradient-to-r from-terracotta to-terracotta-dark text-white font-semibold py-3 rounded-lg hover:from-terracotta-dark hover:to-terracotta transition-all duration-300 shadow-md hover:shadow-lg\"\n            data-testid={`${testIdPrefix}-button-${product.id}`}\n          >\n            VIEW LUXURY PIECE\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  // Default bestseller variant\n  return (\n    <div \n      className=\"bg-cream rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-200 group cursor-pointer\"\n      data-testid={`${testIdPrefix}-card-${product.id}`}\n    >\n      <div className=\"aspect-[4/3] overflow-hidden\">\n        <img \n          src={product.image}\n          alt={product.alt}\n          className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n          data-testid={`${testIdPrefix}-image-${product.id}`}\n        />\n      </div>\n      <div className=\"p-4\">\n        <h4 className=\"font-serif text-lg font-semibold text-foreground mb-2\" data-testid={`${testIdPrefix}-name-${product.id}`}>\n          {product.name}\n        </h4>\n        <p className=\"text-terracotta font-semibold text-lg\" data-testid={`${testIdPrefix}-price-${product.id}`}>\n          {product.price}\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":3174},"client/src/data/products.ts":{"content":"// Import clean furniture images with no background using @assets alias\nimport premiumImg1 from \"@assets/1.png\";\nimport premiumImg2 from \"@assets/2.png\";\nimport premiumImg3 from \"@assets/3.png\";\nimport premiumImg4 from \"@assets/4.png\";\nimport premiumImg5 from \"@assets/5.png\";\n\n// Interface for home page products (simpler structure)\nexport interface HomeProduct {\n  id: number;\n  name: string;\n  price: string;\n  image: string;\n  alt: string;\n  category?: string;\n  badge?: string;\n}\n\n// Interface for shop page products (comprehensive structure)\nexport interface ShopProduct {\n  id: number;\n  name: string;\n  price: number;\n  originalPrice?: number;\n  images: string[];\n  category: string;\n  material: string;\n  color: string;\n  rating: number;\n  reviews: number;\n  inStock: boolean;\n  discount?: number;\n  badge?: string;\n}\n\n// Best Sellers dataset - maintains current home page styling\nexport const bestSellers: HomeProduct[] = [\n  {\n    id: 1,\n    name: \"Tufted Leather Sofa\",\n    price: \"$2,499\",\n    image: \"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Burnt orange tufted leather sofa\"\n  },\n  {\n    id: 2,\n    name: \"Papasan Chair\",\n    price: \"$899\",\n    image: \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Cream papasan chair with rattan base\"\n  },\n  {\n    id: 3,\n    name: \"Modern Accent Chair\",\n    price: \"$649\",\n    image: \"https://images.unsplash.com/photo-1549497538-303791108f95?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Powder blue modern accent chair with wooden legs\"\n  }\n];\n\n// Luxury Choice dataset - distinct high-end products\nexport const luxuryProducts: HomeProduct[] = [\n  {\n    id: 4,\n    name: \"Royal Throne Chair\",\n    price: \"$2,199\",\n    image: premiumImg4,\n    alt: \"Luxury red velvet throne chair with gold frame\",\n    category: \"Luxury\"\n  },\n  {\n    id: 5,\n    name: \"Artisan Velvet Sofa\",\n    price: \"$3,499\",\n    image: \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Luxurious beige velvet sofa with brass legs\"\n  },\n  {\n    id: 6,\n    name: \"Designer Ottoman Set\",\n    price: \"$1,299\",\n    image: \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Premium leather ottoman collection\"\n  }\n];\n\n// Premium Collection dataset - using clean background-free images\nexport const premiumProducts: HomeProduct[] = [\n  {\n    id: 7,\n    name: \"Modern Accent Chair\",\n    category: \"Seating\",\n    price: \"$899\",\n    image: premiumImg1,\n    alt: \"Modern accent chair with clean design\"\n  },\n  {\n    id: 8,\n    name: \"Classic Sofa\",\n    category: \"Seating\",\n    price: \"$1459\",\n    image: premiumImg2,\n    alt: \"Classic sofa with elegant styling\"\n  },\n  {\n    id: 9,\n    name: \"Comfort Chair\",\n    category: \"Seating\",\n    price: \"$629\",\n    image: premiumImg3,\n    alt: \"Comfortable chair with modern design\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    category: \"Luxury\",\n    price: \"$2199\",\n    image: premiumImg4,\n    alt: \"Luxury throne chair with premium finish\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    category: \"Tables\",\n    price: \"$899\",\n    image: premiumImg5,\n    alt: \"Vintage side table with ornate details\"\n  }\n];\n\n// Shop page products - comprehensive dataset combining all sources\nexport const shopProducts: ShopProduct[] = [\n  // From Best Sellers collection\n  {\n    id: 1,\n    name: \"Tufted Leather Sofa\",\n    price: 28000,\n    originalPrice: 35000,\n    images: [\n      \"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1556228453-efd6c1ff04f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Leather\",\n    color: \"Brown\",\n    rating: 4.8,\n    reviews: 124,\n    inStock: true,\n    discount: 20,\n    badge: \"BEST SELLER\"\n  },\n  {\n    id: 2,\n    name: \"Papasan Chair\",\n    price: 22000,\n    images: [\n      \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Rattan\",\n    color: \"Brown\",\n    rating: 4.7,\n    reviews: 89,\n    inStock: true,\n    badge: \"BEST SELLER\"\n  },\n  {\n    id: 3,\n    name: \"Modern Accent Chair\",\n    price: 16000,\n    originalPrice: 18000,\n    images: [\n      \"https://images.unsplash.com/photo-1549497538-303791108f95?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Fabric\",\n    color: \"Blue\",\n    rating: 4.6,\n    reviews: 156,\n    inStock: true,\n    discount: 11,\n    badge: \"BEST SELLER\"\n  },\n  // From Premium Collection with local assets\n  {\n    id: 7,\n    name: \"Modern Gray Accent Chair\",\n    price: 32000,\n    images: [premiumImg1],\n    category: \"Living Room\",\n    material: \"Fabric\",\n    color: \"Blue\",\n    rating: 4.8,\n    reviews: 92,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  {\n    id: 8,\n    name: \"Classic Brown Sofa\",\n    price: 52000,\n    images: [premiumImg2],\n    category: \"Living Room\",\n    material: \"Fabric\",\n    color: \"Brown\",\n    rating: 4.9,\n    reviews: 78,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  {\n    id: 9,\n    name: \"Comfort Dining Chair\",\n    price: 18000,\n    images: [premiumImg3],\n    category: \"Dining Room\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.7,\n    reviews: 143,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    price: 75000,\n    originalPrice: 85000,\n    images: [premiumImg4],\n    category: \"Living Room\",\n    material: \"Velvet\",\n    color: \"Red\",\n    rating: 5.0,\n    reviews: 34,\n    inStock: true,\n    discount: 12,\n    badge: \"LUXURY\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    price: 28000,\n    images: [premiumImg5],\n    category: \"Living Room\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.8,\n    reviews: 67,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  // From Luxury Collection\n  {\n    id: 4,\n    name: \"Artisan Velvet Sofa\",\n    price: 95000,\n    originalPrice: 110000,\n    images: [\n      \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Velvet\",\n    color: \"Brown\",\n    rating: 4.9,\n    reviews: 45,\n    inStock: true,\n    discount: 14,\n    badge: \"LUXURY\"\n  },\n  {\n    id: 6,\n    name: \"Designer Ottoman Set\",\n    price: 35000,\n    images: [\n      \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1505693416388-ac5ce068fe85?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Leather\",\n    color: \"Black\",\n    rating: 4.8,\n    reviews: 56,\n    inStock: true,\n    badge: \"LUXURY\"\n  },\n  // Additional shop-specific products\n  {\n    id: 12,\n    name: \"Elegant Dining Table\",\n    price: 45000,\n    images: [\n      \"https://images.unsplash.com/photo-1449247709967-d4461a6a6103?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Dining Room\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.6,\n    reviews: 89,\n    inStock: true\n  },\n  {\n    id: 13,\n    name: \"Comfortable Office Chair\",\n    price: 15000,\n    originalPrice: 18000,\n    images: [\n      \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Office\",\n    material: \"Leather\",\n    color: \"Black\",\n    rating: 4.9,\n    reviews: 156,\n    inStock: false,\n    discount: 17,\n    badge: \"OUT OF STOCK\"\n  },\n  {\n    id: 14,\n    name: \"Luxury King Bed\",\n    price: 55000,\n    images: [\n      \"https://images.unsplash.com/photo-1505693416388-ac5ce068fe85?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Bedroom\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.7,\n    reviews: 67,\n    inStock: true,\n    badge: \"PREMIUM\"\n  }\n];\n\n// Premium Collection Tab Datasets for Interactive Tabs\n\n// ALL COLLECTION - Mixed furniture items (4 products)\nexport const premiumAll: HomeProduct[] = [\n  {\n    id: 7,\n    name: \"Modern Accent Chair\",\n    category: \"Seating\",\n    price: \"$899\",\n    image: premiumImg1,\n    alt: \"Modern accent chair with clean design\"\n  },\n  {\n    id: 8,\n    name: \"Classic Sofa\",\n    category: \"Seating\",\n    price: \"$1,459\",\n    image: premiumImg2,\n    alt: \"Classic sofa with elegant styling\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    category: \"Tables\",\n    price: \"$899\",\n    image: premiumImg5,\n    alt: \"Vintage side table with ornate details\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    category: \"Luxury\",\n    price: \"$2,199\",\n    image: premiumImg4,\n    alt: \"Luxury throne chair with premium finish\"\n  }\n];\n\n// BEST SELLER - Top-selling products with badges (4 products)\nexport const premiumBestSellers: HomeProduct[] = [\n  {\n    id: 1,\n    name: \"Tufted Leather Sofa\",\n    price: \"$2,499\",\n    image: \"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Burnt orange tufted leather sofa\",\n    badge: \"BESTSELLER\"\n  },\n  {\n    id: 8,\n    name: \"Classic Sofa\",\n    category: \"Seating\",\n    price: \"$1,459\",\n    image: premiumImg2,\n    alt: \"Classic sofa with elegant styling\",\n    badge: \"20% OFF\"\n  },\n  {\n    id: 2,\n    name: \"Papasan Chair\",\n    price: \"$899\",\n    image: \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Cream papasan chair with rattan base\",\n    badge: \"BESTSELLER\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    category: \"Luxury\",\n    price: \"$2,199\",\n    image: premiumImg4,\n    alt: \"Luxury throne chair with premium finish\",\n    badge: \"15% OFF\"\n  }\n];\n\n// NEW ARRIVALS - Newest products with NEW badges (4 products)\nexport const premiumNewArrivals: HomeProduct[] = [\n  {\n    id: 9,\n    name: \"Comfort Chair\",\n    category: \"Seating\",\n    price: \"$629\",\n    image: premiumImg3,\n    alt: \"Comfortable chair with modern design\",\n    badge: \"NEW\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    category: \"Tables\",\n    price: \"$899\",\n    image: premiumImg5,\n    alt: \"Vintage side table with ornate details\",\n    badge: \"NEW\"\n  },\n  {\n    id: 3,\n    name: \"Modern Accent Chair\",\n    price: \"$649\",\n    image: \"https://images.unsplash.com/photo-1549497538-303791108f95?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Powder blue modern accent chair with wooden legs\",\n    badge: \"NEW\"\n  },\n  {\n    id: 7,\n    name: \"Designer Accent Chair\",\n    category: \"Seating\",\n    price: \"$899\",\n    image: premiumImg1,\n    alt: \"Modern accent chair with clean design\",\n    badge: \"NEW\"\n  }\n];\n\n// Collection data for home page luxury section\nexport const collections = [\n  {\n    id: 1,\n    title: \"Contemporary Living Collection\",\n    description: \"Discover our signature collection of contemporary furniture designed for modern living. Each piece is meticulously crafted to blend comfort with sophistication, creating spaces that inspire and delight. From plush sofas to elegant dining sets, our collection embodies the perfect balance of luxury and livability.\",\n    image: \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Contemporary living room with beige sofa\",\n    buttonText: \"View Collection\",\n    imagePosition: \"right\" as const\n  },\n  {\n    id: 2,\n    title: \"Bedroom Sanctuary Series\",\n    description: \"Transform your bedroom into a personal retreat with our Sanctuary Series. Featuring handcrafted bed frames, luxurious textiles, and thoughtfully designed storage solutions, this collection creates a harmonious environment where rest and relaxation take center stage.\",\n    image: \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Minimalist bedroom with neutral decor\",\n    buttonText: \"Explore Bedrooms\",\n    imagePosition: \"left\" as const\n  },\n  {\n    id: 3,\n    title: \"Artisan Dining Collection\",\n    description: \"Elevate your dining experience with our Artisan Collection. Each table, chair, and accent piece is crafted by skilled artisans who understand that dining is about more than just meals—it's about creating memories. Our pieces bring family and friends together in spaces that celebrate both form and function.\",\n    image: \"https://images.unsplash.com/photo-1449247709967-d4461a6a6103?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Modern dining room with wooden table\",\n    buttonText: \"Shop Dining\",\n    imagePosition: \"right\" as const\n  }\n];","size_bytes":13732},"client/src/components/PremiumTabs.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { HomeProduct, premiumAll, premiumBestSellers, premiumNewArrivals } from \"@/data/products\";\n\ntype TabType = 'all' | 'best' | 'new';\n\ninterface TabData {\n  id: TabType;\n  label: string;\n  products: HomeProduct[];\n}\n\nconst tabs: TabData[] = [\n  { id: 'all', label: 'ALL COLLECTION', products: premiumAll },\n  { id: 'best', label: 'BEST SELLER', products: premiumBestSellers },\n  { id: 'new', label: 'NEW ARRIVALS', products: premiumNewArrivals }\n];\n\nexport function PremiumTabs() {\n  const [activeTab, setActiveTab] = useState<TabType>('all');\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentProducts, setCurrentProducts] = useState<HomeProduct[]>(premiumAll);\n\n  const handleTabChange = (tabId: TabType) => {\n    if (tabId === activeTab) return;\n    \n    setIsLoading(true);\n    \n    // Fade out animation delay\n    setTimeout(() => {\n      const newProducts = tabs.find(tab => tab.id === tabId)?.products || [];\n      setCurrentProducts(newProducts);\n      setActiveTab(tabId);\n      \n      // Brief loading state, then fade in\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 200);\n    }, 300);\n  };\n\n  return (\n    <section className=\"py-20 bg-background\">\n      <div className=\"container mx-auto px-6\">\n        {/* Section Header with Decorative Lines */}\n        <div className=\"text-center mb-16\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"flex-1 h-px bg-foreground opacity-30\"></div>\n            <h3 className=\"font-serif text-3xl md:text-4xl font-bold mx-8 text-foreground tracking-wider\">\n              PREMIUM COLLECTIONS\n            </h3>\n            <div className=\"flex-1 h-px bg-foreground opacity-30\"></div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex justify-center mb-12\">\n          <div className=\"relative flex space-x-12\" role=\"tablist\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                role=\"tab\"\n                aria-selected={activeTab === tab.id}\n                aria-controls={`tabpanel-${tab.id}`}\n                className={`relative pb-2 font-medium tracking-wide transition-colors duration-300 ${\n                  activeTab === tab.id \n                    ? 'text-terracotta' \n                    : 'text-foreground hover:text-terracotta/70'\n                }`}\n                onClick={() => handleTabChange(tab.id)}\n                data-testid={`tab-${tab.id}`}\n              >\n                {tab.label}\n                \n                {/* Animated Underline */}\n                {activeTab === tab.id && (\n                  <div \n                    className=\"absolute bottom-0 left-0 w-full h-0.5 bg-terracotta transform origin-center animate-underline\"\n                    style={{\n                      animation: 'slideInFromCenter 0.3s ease-out'\n                    }}\n                  />\n                )}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Products Grid */}\n        <div className=\"max-w-5xl mx-auto\">\n          <div \n            role=\"tabpanel\" \n            id={`tabpanel-${activeTab}`}\n            className={`grid grid-cols-2 md:grid-cols-4 gap-6 transition-all duration-500 ${\n              isLoading ? 'opacity-0 translate-y-4' : 'opacity-100 translate-y-0'\n            }`}\n            data-testid=\"premium-grid\"\n          >\n            {isLoading ? (\n              // Skeleton Loading Cards\n              Array.from({ length: 4 }).map((_, index) => (\n                <div \n                  key={`skeleton-${index}`}\n                  className=\"bg-cream rounded-2xl p-6 aspect-square animate-pulse\"\n                  data-testid={`skeleton-card-${index}`}\n                >\n                  <div className=\"w-full h-3/4 bg-gray-200 rounded-lg mb-4\"></div>\n                  <div className=\"space-y-2\">\n                    <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-1/3\"></div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              // Product Cards\n              currentProducts.map((product, index) => (\n                <div\n                  key={product.id}\n                  className=\"group cursor-pointer transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg\"\n                  style={{\n                    animationDelay: `${index * 100}ms`\n                  }}\n                  data-testid={`card-product-${product.id}`}\n                >\n                  <div className=\"bg-cream rounded-2xl p-6 aspect-square flex flex-col justify-center items-center relative overflow-hidden\">\n                    {/* Product Badge */}\n                    {product.badge && (\n                      <div className={`absolute top-3 right-3 px-2 py-1 rounded-full text-xs font-bold tracking-wide text-white z-10 ${\n                        product.badge === 'BESTSELLER' \n                          ? 'bg-terracotta animate-pulse' \n                          : product.badge === 'NEW'\n                          ? 'bg-green-600'\n                          : 'bg-orange-500'\n                      }`}>\n                        {product.badge}\n                      </div>\n                    )}\n                    \n                    {/* Product Image */}\n                    <div className=\"w-full h-3/4 flex items-center justify-center mb-4\">\n                      <img \n                        src={product.image}\n                        alt={product.alt}\n                        className=\"max-w-full max-h-full object-contain group-hover:scale-105 transition-transform duration-300\"\n                      />\n                    </div>\n                    \n                    {/* Product Info */}\n                    <div className=\"text-center space-y-1\">\n                      <p className=\"text-xs font-medium text-muted-foreground uppercase tracking-wide\">\n                        {product.category || 'CATEGORY'}\n                      </p>\n                      <h4 className=\"font-serif font-bold text-sm text-foreground\">\n                        {product.name}\n                      </h4>\n                      <p className=\"font-bold text-terracotta\">\n                        {product.price}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Explore Shop Button */}\n        <div className=\"text-center mt-12\">\n          <Button \n            variant=\"outline\"\n            className=\"px-16 py-3 font-medium tracking-wide border-2 border-foreground text-foreground hover:bg-foreground hover:text-background transition-all duration-300\"\n            data-testid=\"explore-shop-button\"\n          >\n            Explore Shop\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7117},"client/src/components/ServiceFeaturesBar.tsx":{"content":"import React from 'react';\nimport { Globe, Wallet, Headphones } from 'lucide-react';\n\ninterface Feature {\n  id: number;\n  icon: React.ComponentType<{ className?: string }>;\n  title: string;\n  description: string;\n}\n\nconst features: Feature[] = [\n  {\n    id: 1,\n    icon: Globe,\n    title: \"Free Shipping\",\n    description: \"Free shipping for order above ₹3000\"\n  },\n  {\n    id: 2,\n    icon: Wallet,\n    title: \"Flexible Prices\",\n    description: \"Secure payment options\"\n  },\n  {\n    id: 3,\n    icon: Headphones,\n    title: \"24 x 7 Support\",\n    description: \"We support online all days\"\n  }\n];\n\nexport function ServiceFeaturesBar() {\n  return (\n    <section \n      className=\"w-full h-[120px]\"\n      style={{ \n        backgroundColor: '#D4A39C'\n      }}\n      aria-label=\"Service Features\"\n      role=\"region\"\n    >\n      <div className=\"container mx-auto px-6 h-full\">\n        <div className=\"grid grid-cols-3 md:divide-x divide-white/20 h-full place-items-center\">\n          {features.map((feature) => {\n            const IconComponent = feature.icon;\n            return (\n              <div \n                key={feature.id}\n                className=\"flex flex-col items-center justify-center text-center text-white h-full px-4\"\n                data-testid={`feature-${feature.id}`}\n              >\n                {/* Icon */}\n                <div className=\"mb-2\">\n                  <IconComponent \n                    className=\"w-8 h-8 text-white\" \n                  />\n                </div>\n                \n                {/* Feature Title */}\n                <h4 className=\"font-semibold text-base mb-1\" data-testid={`feature-title-${feature.id}`}>\n                  {feature.title}\n                </h4>\n                \n                {/* Feature Description */}\n                <p \n                  className=\"text-xs opacity-90 leading-relaxed\"\n                  data-testid={`feature-description-${feature.id}`}\n                >\n                  {feature.description}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":2113},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool\n[x] 4. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool","size_bytes":298},"client/src/components/Header.tsx":{"content":"import { Link } from \"wouter\";\nimport { Search, User, ShoppingBag, Menu, X, Minus, Plus } from \"lucide-react\";\nimport { useCart } from \"@/lib/cartContext\";\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface HeaderProps {\n  className?: string;\n  variant?: \"transparent\" | \"solid\";\n}\n\nexport function Header({ className = \"absolute top-0 left-0 right-0 z-50 bg-transparent\", variant = \"transparent\" }: HeaderProps) {\n  const { cartCount, isCartOpen, setIsCartOpen, cart, updateQuantity, removeFromCart } = useCart();\n  const { toast } = useToast();\n\n  const getTotalPrice = () => {\n    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);\n  };\n\n  const handleCheckout = () => {\n    toast({\n      title: \"Checkout\",\n      description: \"Checkout functionality coming soon!\",\n    });\n  };\n\n  return (\n    <>\n      <header className={className}>\n        <div className=\"container mx-auto px-6 py-6\">\n          {/* Brand Name */}\n          <div className=\"text-center mb-6\">\n            <Link href=\"/\">\n              <h1 className={`font-serif text-3xl md:text-4xl font-bold tracking-wider cursor-pointer transition-colors duration-200 ${\n                variant === \"solid\" \n                  ? \"text-foreground hover:text-terracotta\" \n                  : \"text-white hover:text-cream\"\n              }`} data-testid=\"brand-logo\">\n                SM FURNISHINGS\n              </h1>\n            </Link>\n          </div>\n          \n          {/* Navigation Container */}\n          <div className=\"flex items-center justify-between\">\n            {/* Main Navigation */}\n            <nav className=\"hidden md:flex flex-1 justify-center\">\n              <ul className={`flex space-x-12 font-medium ${\n                variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n              }`}>\n                <li><Link href=\"/\" className={`transition-colors duration-200 ${\n                  variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                }`} data-testid=\"nav-home\">HOME</Link></li>\n                <li><a href=\"#\" className={`transition-colors duration-200 ${\n                  variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                }`} data-testid=\"nav-category\">CATEGORY</a></li>\n                <li><Link href=\"/shop\" className={`transition-colors duration-200 ${\n                  variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                }`} data-testid=\"nav-shop\">SHOP</Link></li>\n                <li><Link href=\"/about\" className={`transition-colors duration-200 ${\n                  variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                }`} data-testid=\"nav-about\">ABOUT US</Link></li>\n              </ul>\n            </nav>\n            \n            {/* Right Icons */}\n            <div className={`flex items-center space-x-6 ${\n              variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n            }`}>\n              <button className={`transition-colors duration-200 ${\n                variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n              }`} data-testid=\"button-search\">\n                <Search className=\"w-5 h-5\" />\n              </button>\n              <button className={`transition-colors duration-200 ${\n                variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n              }`} data-testid=\"button-account\">\n                <User className=\"w-5 h-5\" />\n              </button>\n              <button \n                className={`relative transition-colors duration-200 ${\n                  variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                }`}\n                data-testid=\"button-cart\"\n                onClick={() => setIsCartOpen(true)}\n              >\n                <ShoppingBag className=\"w-5 h-5\" />\n                {cartCount > 0 && (\n                  <span className=\"absolute -top-2 -right-2 bg-terracotta text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\" data-testid=\"cart-count\">\n                    {cartCount}\n                  </span>\n                )}\n              </button>\n            </div>\n            \n            {/* Mobile Menu Button */}\n            <button className={`md:hidden ${\n              variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n            }`} data-testid=\"button-mobile-menu\">\n              <Menu className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Cart Modal */}\n      <Dialog open={isCartOpen} onOpenChange={setIsCartOpen}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <div className=\"space-y-6\">\n            {/* Cart Header */}\n            <div className=\"flex items-center justify-between border-b pb-4\">\n              <h2 className=\"text-2xl font-serif font-bold\">Shopping Cart ({cartCount} items)</h2>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\"\n                onClick={() => setIsCartOpen(false)}\n                data-testid=\"close-cart\"\n              >\n                <X className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            {/* Cart Items */}\n            {cart.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <ShoppingBag className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                <h3 className=\"text-lg font-medium mb-2\">Your cart is empty</h3>\n                <p className=\"text-muted-foreground mb-6\">Let's fill it with beautiful furniture!</p>\n                <Button \n                  onClick={() => setIsCartOpen(false)}\n                  className=\"bg-terracotta hover:bg-terracotta-dark text-white\"\n                >\n                  Continue Shopping\n                </Button>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {cart.map((item) => (\n                  <div key={item.id} className=\"flex items-center space-x-4 border-b pb-4\">\n                    {/* Product Image */}\n                    <div className=\"w-20 h-20 rounded-lg overflow-hidden flex-shrink-0\">\n                      <img \n                        src={item.image} \n                        alt={item.name}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"flex-1\">\n                      <h3 className=\"font-medium\">{item.name}</h3>\n                      <p className=\"text-lg font-bold text-terracotta\">\n                        ₹{(item.price * item.quantity).toLocaleString()}\n                      </p>\n                    </div>\n                    \n                    {/* Quantity Controls */}\n                    <div className=\"flex items-center space-x-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                        className=\"h-8 w-8 p-0\"\n                      >\n                        <Minus className=\"w-3 h-3\" />\n                      </Button>\n                      <span className=\"w-8 text-center font-medium\">{item.quantity}</span>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                        className=\"h-8 w-8 p-0\"\n                      >\n                        <Plus className=\"w-3 h-3\" />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => removeFromCart(item.id)}\n                        className=\"ml-2 text-red-500 hover:text-red-700\"\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n\n                {/* Cart Total */}\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center text-xl font-bold\">\n                    <span>Total:</span>\n                    <span className=\"text-terracotta\">₹{getTotalPrice().toLocaleString()}</span>\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex space-x-4 pt-4\">\n                  <Button \n                    variant=\"outline\" \n                    className=\"flex-1\"\n                    onClick={() => setIsCartOpen(false)}\n                  >\n                    Continue Shopping\n                  </Button>\n                  <Button \n                    className=\"flex-1 bg-terracotta hover:bg-terracotta-dark text-white\"\n                    onClick={handleCheckout}\n                  >\n                    Checkout\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}","size_bytes":9296},"client/src/pages/about.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Heart, \n  Users, \n  Globe, \n  Award, \n  Leaf, \n  Star, \n  Play, \n  ChevronLeft, \n  ChevronRight,\n  ArrowRight,\n  Target,\n  Eye,\n  Zap,\n  Shield,\n  Recycle,\n  TreePine,\n  CheckCircle\n} from \"lucide-react\";\n\nconst timelineData = [\n  {\n    year: \"2010\",\n    title: \"Founded\",\n    description: \"Started with a vision to make luxury furniture accessible to everyone\",\n    side: \"left\"\n  },\n  {\n    year: \"2015\",\n    title: \"First Showroom\",\n    description: \"Opened our flagship store in the heart of the design district\",\n    side: \"right\"\n  },\n  {\n    year: \"2018\",\n    title: \"Online Expansion\", \n    description: \"Launched our e-commerce platform, reaching customers nationwide\",\n    side: \"left\"\n  },\n  {\n    year: \"2020\",\n    title: \"Sustainability Focus\",\n    description: \"Committed to eco-friendly materials and sustainable practices\",\n    side: \"right\"\n  },\n  {\n    year: \"2024\",\n    title: \"1M+ Happy Customers\",\n    description: \"Celebrating over a million satisfied customers worldwide\",\n    side: \"left\"\n  }\n];\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Sarah Martinez\",\n    role: \"Founder & CEO\",\n    image: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"With 15+ years in furniture design, Sarah leads SM Furnishings with passion for accessible luxury and sustainable practices.\"\n  },\n  {\n    id: 2,\n    name: \"Michael Chen\",\n    role: \"Head of Design\",\n    image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"Award-winning designer who brings contemporary elegance to every piece, ensuring our furniture meets the highest aesthetic standards.\"\n  },\n  {\n    id: 3,\n    name: \"Emily Johnson\",\n    role: \"Sustainability Director\",\n    image: \"https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"Environmental advocate leading our green initiatives, making sure every piece is responsibly sourced and environmentally conscious.\"\n  },\n  {\n    id: 4,\n    name: \"David Rodriguez\",\n    role: \"Customer Experience Lead\",\n    image: \"https://images.unsplash.com/photo-1560250097-0b93528c311a?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"Dedicated to ensuring every customer has an exceptional experience from browsing to delivery and beyond.\"\n  }\n];\n\nconst testimonials = [\n  {\n    id: 1,\n    name: \"Jennifer Adams\",\n    text: \"SM Furnishings transformed my living room into a luxurious haven without breaking the bank. The quality is exceptional!\",\n    rating: 5\n  },\n  {\n    id: 2,\n    name: \"Robert Kim\",\n    text: \"Outstanding customer service and beautiful furniture. Every piece arrived perfectly and the quality exceeded my expectations.\",\n    rating: 5\n  },\n  {\n    id: 3,\n    name: \"Maria Santos\",\n    text: \"I love how sustainable their practices are. Beautiful furniture that's also environmentally responsible - perfect!\",\n    rating: 5\n  }\n];\n\nconst uspPoints = [\n  \"Handpicked by interior design experts\",\n  \"Sustainable materials and ethical sourcing\",\n  \"30-day satisfaction guarantee\",\n  \"White-glove delivery service\",\n  \"Lifetime customer support\"\n];\n\nconst awards = [\n  { name: \"Best Furniture Retailer 2024\", icon: Award },\n  { name: \"Sustainability Excellence\", icon: Leaf },\n  { name: \"Customer Choice Award\", icon: Star }\n];\n\nexport default function About() {\n  const [currentTestimonial, setCurrentTestimonial] = useState(0);\n  const [flippedCards, setFlippedCards] = useState<Set<number>>(new Set());\n  const [visibleSections, setVisibleSections] = useState<Set<string>>(new Set());\n  const [counters, setCounters] = useState({ customers: 0, products: 0, satisfaction: 0 });\n\n  // Auto-rotate testimonials\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Animate counters when section becomes visible\n  useEffect(() => {\n    if (visibleSections.has('testimonials')) {\n      const animateCounter = (target: number, setter: (value: number) => void) => {\n        let current = 0;\n        const increment = target / 50;\n        const timer = setInterval(() => {\n          current += increment;\n          if (current >= target) {\n            setter(target);\n            clearInterval(timer);\n          } else {\n            setter(Math.floor(current));\n          }\n        }, 50);\n      };\n\n      animateCounter(1000000, (value) => setCounters(prev => ({ ...prev, customers: value })));\n      animateCounter(5000, (value) => setCounters(prev => ({ ...prev, products: value })));\n      animateCounter(98, (value) => setCounters(prev => ({ ...prev, satisfaction: value })));\n    }\n  }, [visibleSections]);\n\n  const toggleCardFlip = (id: number) => {\n    setFlippedCards(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(id)) {\n        newSet.delete(id);\n      } else {\n        newSet.add(id);\n      }\n      return newSet;\n    });\n  };\n\n  // Intersection Observer effect for scroll animations\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setVisibleSections(prev => {\n              const newSet = new Set(prev);\n              newSet.add(entry.target.id);\n              return newSet;\n            });\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    document.querySelectorAll('[id]').forEach((el) => observer.observe(el));\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <Header />\n\n      {/* Hero Section */}\n      <section className=\"relative h-screen flex items-center justify-center overflow-hidden\">\n        <div \n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n          style={{\n            backgroundImage: \"url('https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"\n          }}\n        >\n          <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n        </div>\n        \n        <div className=\"relative z-10 text-center text-white px-6 max-w-4xl\">\n          <h1 className=\"font-serif text-5xl md:text-7xl lg:text-8xl font-bold mb-6 tracking-wide animate-fade-in-up\">\n            OUR <span className=\"text-cream italic font-script\">story</span>\n          </h1>\n          <p className=\"text-xl md:text-2xl font-light mb-8 tracking-wider animate-fade-in-up animation-delay-300\">\n            Crafting beautiful homes, one piece at a time\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center animate-fade-in-up animation-delay-600\">\n            <Button \n              size=\"lg\"\n              className=\"bg-terracotta text-white px-8 py-4 text-lg tracking-wide hover:bg-terracotta-dark transition-all duration-300 hover:scale-105\"\n            >\n              Join Our Journey\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"lg\"\n              className=\"border-2 border-white bg-transparent text-white font-semibold px-8 py-4 text-lg tracking-wide hover:bg-white hover:text-terracotta transition-all duration-300\"\n            >\n              Shop Now\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Story Timeline */}\n      <section id=\"timeline\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Our <span className=\"text-terracotta\">Journey</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              From a small dream to a furniture revolution - discover the milestones that shaped SM Furnishings\n            </p>\n          </div>\n\n          <div className=\"relative max-w-4xl mx-auto\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-terracotta opacity-30\"></div>\n            <div \n              className={`absolute left-1/2 transform -translate-x-1/2 w-1 bg-terracotta transition-all duration-2000 ${\n                visibleSections.has('timeline') ? 'h-full' : 'h-0'\n              }`}\n            ></div>\n\n            {/* Timeline Items */}\n            <div className=\"space-y-16\">\n              {timelineData.map((item, index) => (\n                <div \n                  key={index}\n                  className={`flex items-center ${item.side === 'left' ? 'flex-row' : 'flex-row-reverse'}`}\n                >\n                  <div className={`w-1/2 ${item.side === 'left' ? 'pr-8' : 'pl-8'}`}>\n                    <div \n                      className={`transform transition-all duration-700 ${\n                        visibleSections.has('timeline') \n                          ? 'translate-x-0 opacity-100' \n                          : item.side === 'left' ? '-translate-x-10 opacity-0' : 'translate-x-10 opacity-0'\n                      }`}\n                      style={{ transitionDelay: `${index * 200}ms` }}\n                    >\n                      <Card className=\"p-6 hover:shadow-lg transition-shadow duration-300\">\n                        <CardContent className=\"p-0\">\n                          <div className=\"text-terracotta font-bold text-2xl mb-2\">{item.year}</div>\n                          <h3 className=\"font-serif text-xl font-bold mb-2\">{item.title}</h3>\n                          <p className=\"text-muted-foreground\">{item.description}</p>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </div>\n                  \n                  <div className=\"relative z-10\">\n                    <div \n                      className={`w-4 h-4 bg-terracotta rounded-full border-4 border-background transform transition-all duration-500 ${\n                        visibleSections.has('timeline') ? 'scale-100' : 'scale-0'\n                      }`}\n                      style={{ transitionDelay: `${index * 200 + 100}ms` }}\n                    ></div>\n                  </div>\n                  \n                  <div className=\"w-1/2\"></div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission, Vision & Values */}\n      <section id=\"values\" className=\"py-20 bg-gradient-to-br from-cream to-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Our <span className=\"text-terracotta\">Foundation</span>\n            </h2>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('values') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n            >\n              <div className=\"bg-terracotta text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Target className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Mission</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                To democratize luxury furniture by making high-quality, beautifully designed pieces accessible to every home, regardless of budget.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('values') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '200ms' }}\n            >\n              <div className=\"bg-terracotta text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Eye className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Vision</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                To become the world's leading sustainable furniture brand, inspiring homes and protecting our planet for future generations.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('values') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '400ms' }}\n            >\n              <div className=\"bg-terracotta text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Heart className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Values</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                Quality, sustainability, accessibility, and exceptional customer experience guide every decision we make and every piece we create.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Meet the Team */}\n      <section id=\"team\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Meet Our <span className=\"text-terracotta\">Team</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              The passionate individuals behind SM Furnishings' success\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto\">\n            {teamMembers.map((member, index) => (\n              <div \n                key={member.id}\n                className={`transform transition-all duration-700 ${\n                  visibleSections.has('team') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n                }`}\n                style={{ transitionDelay: `${index * 150}ms` }}\n              >\n                <div \n                  className=\"relative w-full h-80 cursor-pointer group\"\n                  onClick={() => toggleCardFlip(member.id)}\n                >\n                  <div className={`relative w-full h-full transition-transform duration-700 transform-style-preserve-3d ${\n                    flippedCards.has(member.id) ? 'rotate-y-180' : ''\n                  }`}>\n                    {/* Front of card */}\n                    <Card className=\"absolute inset-0 backface-hidden group-hover:shadow-lg transition-shadow duration-300\">\n                      <CardContent className=\"p-0\">\n                        <div className=\"aspect-square overflow-hidden rounded-t-lg\">\n                          <img \n                            src={member.image}\n                            alt={member.name}\n                            className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                          />\n                        </div>\n                        <div className=\"p-6 text-center\">\n                          <h3 className=\"font-serif text-xl font-bold mb-2\">{member.name}</h3>\n                          <p className=\"text-terracotta font-medium\">{member.role}</p>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    {/* Back of card */}\n                    <Card className=\"absolute inset-0 backface-hidden rotate-y-180 bg-terracotta text-white\">\n                      <CardContent className=\"p-6 flex flex-col justify-center h-full\">\n                        <h3 className=\"font-serif text-xl font-bold mb-4 text-center\">{member.name}</h3>\n                        <p className=\"text-center leading-relaxed\">{member.bio}</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* What Makes Us Different */}\n      <section id=\"usp\" className=\"py-20 bg-cream\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center max-w-6xl mx-auto\">\n            <div \n              className={`transform transition-all duration-700 ${\n                visibleSections.has('usp') ? 'translate-x-0 opacity-100' : '-translate-x-10 opacity-0'\n              }`}\n            >\n              <img \n                src=\"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Our Difference\"\n                className=\"w-full h-96 object-cover rounded-lg shadow-xl\"\n              />\n            </div>\n            \n            <div \n              className={`space-y-8 transform transition-all duration-700 ${\n                visibleSections.has('usp') ? 'translate-x-0 opacity-100' : 'translate-x-10 opacity-0'\n              }`}\n            >\n              <div>\n                <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n                  What Makes Us <span className=\"text-terracotta\">Different</span>\n                </h2>\n                <p className=\"text-xl text-muted-foreground mb-8\">\n                  Experience the SM Furnishings advantage\n                </p>\n              </div>\n\n              <div className=\"space-y-4\">\n                {uspPoints.map((point, index) => (\n                  <div \n                    key={index}\n                    className={`flex items-center space-x-3 transform transition-all duration-500 ${\n                      visibleSections.has('usp') ? 'translate-x-0 opacity-100' : 'translate-x-5 opacity-0'\n                    }`}\n                    style={{ transitionDelay: `${index * 100 + 300}ms` }}\n                  >\n                    <CheckCircle className=\"w-6 h-6 text-terracotta flex-shrink-0\" />\n                    <span className=\"text-lg\">{point}</span>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"flex flex-wrap gap-4 mt-8\">\n                {awards.map((award, index) => (\n                  <Badge \n                    key={index}\n                    variant=\"secondary\"\n                    className={`px-4 py-2 bg-terracotta text-white hover:bg-terracotta-dark transition-all duration-300 transform ${\n                      visibleSections.has('usp') ? 'scale-100' : 'scale-0'\n                    }`}\n                    style={{ transitionDelay: `${index * 100 + 600}ms` }}\n                  >\n                    <award.icon className=\"w-4 h-4 mr-2\" />\n                    {award.name}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Customer Love & Testimonials */}\n      <section id=\"testimonials\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Customer <span className=\"text-terracotta\">Love</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              See what our customers say about their SM Furnishings experience\n            </p>\n          </div>\n\n          {/* Stats Counter */}\n          <div className=\"grid md:grid-cols-3 gap-8 mb-16 max-w-4xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-bold text-terracotta mb-2\">\n                {counters.customers.toLocaleString()}+\n              </div>\n              <div className=\"text-xl text-muted-foreground\">Happy Customers</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-bold text-terracotta mb-2\">\n                {counters.products.toLocaleString()}+\n              </div>\n              <div className=\"text-xl text-muted-foreground\">Products Delivered</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-bold text-terracotta mb-2\">\n                {counters.satisfaction}%\n              </div>\n              <div className=\"text-xl text-muted-foreground\">Satisfaction Rate</div>\n            </div>\n          </div>\n\n          {/* Testimonial Carousel */}\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"relative overflow-hidden rounded-lg bg-cream p-8\">\n              {testimonials.map((testimonial, index) => (\n                <div \n                  key={testimonial.id}\n                  className={`transition-all duration-700 ${\n                    index === currentTestimonial ? 'opacity-100 translate-x-0' : 'opacity-0 absolute inset-0 translate-x-full'\n                  }`}\n                >\n                  <div className=\"text-center\">\n                    <div className=\"flex justify-center mb-4\">\n                      {[...Array(testimonial.rating)].map((_, i) => (\n                        <Star key={i} className=\"w-6 h-6 text-yellow-400 fill-current\" />\n                      ))}\n                    </div>\n                    <blockquote className=\"text-xl md:text-2xl text-foreground mb-6 italic\">\n                      \"{testimonial.text}\"\n                    </blockquote>\n                    <div className=\"font-semibold text-terracotta text-lg\">\n                      {testimonial.name}\n                    </div>\n                  </div>\n                </div>\n              ))}\n              \n              {/* Navigation dots */}\n              <div className=\"flex justify-center mt-8 space-x-2\">\n                {testimonials.map((_, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentTestimonial(index)}\n                    className={`w-3 h-3 rounded-full transition-colors duration-300 ${\n                      index === currentTestimonial ? 'bg-terracotta' : 'bg-terracotta/30'\n                    }`}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Sustainability */}\n      <section id=\"sustainability\" className=\"py-20 bg-gradient-to-br from-green-50 to-cream relative overflow-hidden\">\n        {/* Floating decorative elements */}\n        <div className=\"absolute inset-0\">\n          <Leaf className=\"absolute top-20 left-10 w-8 h-8 text-green-300 opacity-50 animate-float\" />\n          <TreePine className=\"absolute top-40 right-20 w-6 h-6 text-green-400 opacity-40 animate-float-delayed\" />\n          <Globe className=\"absolute bottom-20 left-20 w-10 h-10 text-green-200 opacity-30 animate-float\" />\n        </div>\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Sustainability & <span className=\"text-green-600\">Responsibility</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Our commitment to the planet and future generations\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('sustainability') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n            >\n              <div className=\"bg-green-500 text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Leaf className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Eco Materials</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                We source only sustainable, certified materials that minimize environmental impact while maintaining exceptional quality and durability.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('sustainability') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '200ms' }}\n            >\n              <div className=\"bg-green-500 text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Recycle className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Recyclable Packaging</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                100% recyclable and biodegradable packaging materials ensure your furniture arrives safely while protecting our environment.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('sustainability') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '400ms' }}\n            >\n              <div className=\"bg-green-500 text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Users className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Community Work</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                We partner with local communities and artisans, supporting fair trade practices and giving back through furniture donation programs.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Trust & Recognition */}\n      <section id=\"recognition\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Trust & <span className=\"text-terracotta\">Recognition</span>\n            </h2>\n          </div>\n\n          {/* Press Logos */}\n          <div className=\"mb-12\">\n            <div className=\"flex flex-wrap justify-center items-center gap-8 opacity-60 hover:opacity-100 transition-opacity duration-300\">\n              <div className=\"text-2xl font-bold text-muted-foreground\">Featured in:</div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Design Weekly\n              </div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Home & Living\n              </div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Furniture Today\n              </div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Interior Design\n              </div>\n            </div>\n          </div>\n\n          {/* Certificates */}\n          <div className=\"grid md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n            {awards.map((award, index) => (\n              <Card \n                key={index}\n                className={`p-6 text-center hover:shadow-lg transition-all duration-300 transform ${\n                  visibleSections.has('recognition') ? 'scale-100 opacity-100' : 'scale-95 opacity-0'\n                }`}\n                style={{ transitionDelay: `${index * 150}ms` }}\n              >\n                <CardContent className=\"p-0\">\n                  <award.icon className=\"w-12 h-12 text-terracotta mx-auto mb-4\" />\n                  <h3 className=\"font-semibold text-lg\">{award.name}</h3>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call-to-Action Section */}\n      <section className=\"py-20 bg-terracotta text-white\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h2 className=\"font-serif text-4xl md:text-5xl font-bold mb-6\">\n            Be Part of Our <span className=\"font-script italic\">Journey</span>\n          </h2>\n          <p className=\"text-xl mb-12 max-w-2xl mx-auto\">\n            Join thousands of satisfied customers who have transformed their homes with SM Furnishings\n          </p>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-4xl mx-auto\">\n            <Card className=\"bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105\">\n              <CardContent className=\"p-8 text-center\">\n                <Users className=\"w-12 h-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold mb-4\">Careers</h3>\n                <p className=\"mb-6\">Join our passionate team and help shape the future of furniture</p>\n                <Button className=\"bg-white text-terracotta hover:bg-cream hover:text-terracotta-dark font-semibold\">\n                  View Openings\n                </Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105\">\n              <CardContent className=\"p-8 text-center\">\n                <Globe className=\"w-12 h-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold mb-4\">Collaborations</h3>\n                <p className=\"mb-6\">Partner with us for exciting projects and mutual growth</p>\n                <Button className=\"bg-white text-terracotta hover:bg-cream hover:text-terracotta-dark font-semibold\">\n                  Get in Touch\n                </Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105\">\n              <CardContent className=\"p-8 text-center\">\n                <Zap className=\"w-12 h-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold mb-4\">Newsletter</h3>\n                <p className=\"mb-6\">Stay updated with our latest collections and exclusive offers</p>\n                <Button className=\"bg-white text-terracotta hover:bg-cream hover:text-terracotta-dark font-semibold\">\n                  Subscribe Now\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Fun & Interactive Section */}\n      <section className=\"py-20 bg-cream\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Behind the <span className=\"text-terracotta\">Scenes</span>\n            </h2>\n          </div>\n\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-16\">\n              <div className=\"relative\">\n                <div className=\"aspect-video bg-gray-200 rounded-lg overflow-hidden shadow-xl\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1556909918-f9ae5ba9a9de?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\"\n                    alt=\"Behind the scenes\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <Button \n                      size=\"lg\"\n                      className=\"bg-white/90 text-terracotta hover:bg-white rounded-full w-16 h-16 p-0 hover:scale-110 transition-transform duration-300\"\n                    >\n                      <Play className=\"w-8 h-8\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <h3 className=\"font-serif text-3xl font-bold\">Our Craftsmanship Process</h3>\n                <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                  Get an exclusive look at how our expert artisans craft each piece with meticulous attention to detail, \n                  from selecting the finest materials to the final quality check.\n                </p>\n                <Button className=\"bg-terracotta text-white hover:bg-terracotta-dark\">\n                  Watch Full Documentary\n                  <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </Button>\n              </div>\n            </div>\n\n            {/* Did You Know Cards */}\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              {[\n                { \n                  front: \"Did You Know?\", \n                  back: \"Each piece goes through 47 quality checks before reaching your home\",\n                  icon: Shield\n                },\n                { \n                  front: \"Fun Fact!\", \n                  back: \"We've planted over 10,000 trees to offset our carbon footprint\",\n                  icon: TreePine\n                },\n                { \n                  front: \"Amazing!\", \n                  back: \"Our fastest delivery was completed in just 2 hours across the city\",\n                  icon: Zap\n                }\n              ].map((card, index) => (\n                <div \n                  key={index}\n                  className=\"relative h-48 cursor-pointer group\"\n                  onClick={() => toggleCardFlip(index + 100)}\n                >\n                  <div className={`relative w-full h-full transition-transform duration-700 transform-style-preserve-3d ${\n                    flippedCards.has(index + 100) ? 'rotate-y-180' : ''\n                  }`}>\n                    {/* Front */}\n                    <Card className=\"absolute inset-0 backface-hidden bg-terracotta text-white group-hover:shadow-xl transition-shadow duration-300\">\n                      <CardContent className=\"p-6 flex flex-col items-center justify-center h-full text-center\">\n                        <card.icon className=\"w-12 h-12 mb-4\" />\n                        <h3 className=\"text-xl font-bold\">{card.front}</h3>\n                      </CardContent>\n                    </Card>\n\n                    {/* Back */}\n                    <Card className=\"absolute inset-0 backface-hidden rotate-y-180 bg-cream border-terracotta border-2\">\n                      <CardContent className=\"p-6 flex items-center justify-center h-full\">\n                        <p className=\"text-center text-lg font-medium\">{card.back}</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","size_bytes":36218},"client/src/lib/cartContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface CartItem {\n  id: number;\n  name: string;\n  price: number;\n  image: string;\n  quantity: number;\n}\n\ninterface CartContextType {\n  cart: CartItem[];\n  cartCount: number;\n  addToCart: (item: Omit<CartItem, 'quantity'>) => void;\n  removeFromCart: (id: number) => void;\n  updateQuantity: (id: number, quantity: number) => void;\n  clearCart: () => void;\n  isCartOpen: boolean;\n  setIsCartOpen: (open: boolean) => void;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport function CartProvider({ children }: { children: ReactNode }) {\n  const [cart, setCart] = useState<CartItem[]>([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  // Update cart count whenever cart changes\n  useEffect(() => {\n    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\n    setCartCount(totalItems);\n  }, [cart]);\n\n  const addToCart = (newItem: Omit<CartItem, 'quantity'>) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === newItem.id);\n      if (existingItem) {\n        return prevCart.map(item =>\n          item.id === newItem.id \n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      } else {\n        return [...prevCart, { ...newItem, quantity: 1 }];\n      }\n    });\n  };\n\n  const removeFromCart = (id: number) => {\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\n  };\n\n  const updateQuantity = (id: number, quantity: number) => {\n    if (quantity <= 0) {\n      removeFromCart(id);\n      return;\n    }\n    setCart(prevCart =>\n      prevCart.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      )\n    );\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cart,\n      cartCount,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      isCartOpen,\n      setIsCartOpen\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}","size_bytes":2305},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483}},"version":1}