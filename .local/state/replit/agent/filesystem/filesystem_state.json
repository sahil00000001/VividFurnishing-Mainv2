{"file_contents":{"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a modern full-stack furniture e-commerce application called \"SM Furnishings\" built with React and Express. The application showcases affordable luxury furniture with a sophisticated design system featuring warm terracotta and cream color schemes. It implements a complete e-commerce experience with product catalogs, collections, user interactions, and payment processing.\n\n**Last Updated**: September 23, 2025 - Successfully imported and configured for Replit environment\n\n# Recent Changes\n\n- **September 23, 2025**: Project imported from GitHub and configured for Replit\n  - Set up development workflow on port 5000 with webview output\n  - Configured Vite server with `allowedHosts: true` for Replit proxy compatibility\n  - Verified all dependencies installed correctly\n  - Set up deployment configuration for autoscale deployment target\n  - Application running successfully with external API integration\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for client-side routing with multiple pages (home, shop, product, cart, etc.)\n- **UI Components**: Shadcn/ui component library built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom color schemes (terracotta/cream theme)\n- **State Management**: \n  - TanStack Query (React Query) for server state management\n  - Context API for cart and wishlist state\n  - Local storage for persistent cart and wishlist data\n\n## Backend Architecture\n- **Framework**: Express.js with TypeScript (minimal backend)\n- **Primary Function**: Payment processing via Razorpay integration\n- **API Integration**: Uses external API at `https://sm-furnishing-backend.onrender.com` for:\n  - Product catalog and data\n  - User authentication\n  - Cart management (when authenticated)\n  - Form submissions (bulk orders, newsletter)\n- **Local Features**: \n  - Razorpay payment order creation and verification\n  - Request logging middleware\n  - Vite development server integration\n\n## Data Sources\n- **Products**: External API providing comprehensive product catalog\n- **Cart**: Hybrid approach - localStorage for guests, API for authenticated users\n- **Wishlist**: localStorage-based with context state management\n- **Forms**: External API for bulk order submissions and newsletter signups\n\n## Payment Integration\n- **Provider**: Razorpay (Indian payment gateway)\n- **Features**: Order creation, payment verification, secure signature validation\n- **Configuration**: Requires `RAZORPAY_KEY_ID` and `RAZORPAY_KEY_SECRET` environment variables\n\n## Key Features\n- **Product Catalog**: Full e-commerce product browsing with filtering and search\n- **Shopping Cart**: Add/remove/modify items with quantity management\n- **Wishlist**: Save favorite products for later\n- **User Authentication**: Login/signup with JWT token management\n- **Checkout Process**: Complete payment flow with Razorpay integration\n- **Responsive Design**: Mobile-first approach optimized for all devices\n\n# External Dependencies\n\n## API Services\n- **SM Furnishing Backend**: External API at `sm-furnishing-backend.onrender.com` provides product data, user auth, and cart management\n- **Razorpay**: Payment gateway for secure transaction processing\n\n## Frontend Libraries\n- **Radix UI**: Comprehensive set of accessible UI primitives\n- **Tailwind CSS**: Utility-first CSS framework for rapid UI development\n- **Lucide React**: Icon library providing consistent iconography\n- **React Query**: Data fetching, caching, and synchronization\n- **React Hook Form**: Form state management with Zod validation\n\n## Development Tools\n- **Vite**: Fast build tool and development server with HMR\n- **TypeScript**: Static type checking across the entire codebase\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **Replit Integration**: Vite plugins for Replit-specific development features\n\n# Project Structure\n\n```\n├── client/src/\n│   ├── components/     # Reusable React components\n│   ├── pages/         # Route-level page components\n│   ├── lib/           # Utilities, API functions, contexts\n│   └── data/          # Static data and configurations\n├── server/            # Express backend (minimal)\n├── attached_assets/   # Static assets and images\n└── package.json       # Dependencies and scripts\n```\n\n# Running the Application\n\n- **Development**: `npm run dev` - Starts both frontend and backend on port 5000\n- **Production Build**: `npm run build` - Creates optimized production bundle\n- **Production**: `npm run start` - Runs built application\n- **Type Checking**: `npm run check` - Validates TypeScript types\n\nThe application is configured for Replit environment with proper host settings and proxy compatibility.","size_bytes":4872},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        terracotta: {\n          DEFAULT: \"var(--terracotta)\",\n          light: \"var(--terracotta-light)\",\n          dark: \"var(--terracotta-dark)\",\n        },\n        cream: {\n          DEFAULT: \"var(--cream)\",\n          light: \"var(--cream-light)\",\n          dark: \"var(--cream-dark)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        script: [\"var(--font-script)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3093},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { createServer } from \"http\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport Razorpay from \"razorpay\";\nimport crypto from \"crypto\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Initialize Razorpay only if keys are provided\nlet razorpay: Razorpay | null = null;\nif (process.env.RAZORPAY_KEY_ID && process.env.RAZORPAY_KEY_SECRET) {\n  razorpay = new Razorpay({\n    key_id: process.env.RAZORPAY_KEY_ID,\n    key_secret: process.env.RAZORPAY_KEY_SECRET,\n  });\n}\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Razorpay API endpoints\napp.post(\"/api/razorpay/create-order\", async (req: Request, res: Response) => {\n  try {\n    if (!razorpay) {\n      return res.status(503).json({ \n        success: false, \n        error: \"Razorpay is not configured. Please set RAZORPAY_KEY_ID and RAZORPAY_KEY_SECRET environment variables.\" \n      });\n    }\n\n    const { amount, currency = 'INR', receipt } = req.body;\n    \n    if (!amount || amount <= 0) {\n      return res.status(400).json({ error: \"Invalid amount\" });\n    }\n\n    const options = {\n      amount: Math.round(amount * 100), // Razorpay expects amount in paise\n      currency,\n      receipt: receipt || `receipt_${Date.now()}`,\n    };\n\n    console.log(\"Creating Razorpay order with options:\", options);\n    const order = await razorpay.orders.create(options);\n    console.log(\"Razorpay order created:\", order);\n\n    res.json({\n      success: true,\n      order,\n      key_id: process.env.RAZORPAY_KEY_ID,\n    });\n  } catch (error) {\n    console.error(\"Razorpay order creation failed:\", error);\n    res.status(500).json({\n      success: false,\n      error: \"Failed to create Razorpay order\",\n      details: error instanceof Error ? error.message : \"Unknown error\"\n    });\n  }\n});\n\napp.post(\"/api/razorpay/verify-payment\", async (req: Request, res: Response) => {\n  try {\n    if (!razorpay || !process.env.RAZORPAY_KEY_SECRET) {\n      return res.status(503).json({ \n        success: false, \n        error: \"Razorpay is not configured. Please set RAZORPAY_KEY_ID and RAZORPAY_KEY_SECRET environment variables.\" \n      });\n    }\n\n    const { \n      razorpay_order_id,\n      razorpay_payment_id,\n      razorpay_signature,\n      orderData\n    } = req.body;\n\n    console.log(\"Verifying Razorpay payment:\", {\n      razorpay_order_id,\n      razorpay_payment_id,\n      razorpay_signature,\n      orderData\n    });\n\n    // Create signature for verification\n    const body = razorpay_order_id + \"|\" + razorpay_payment_id;\n    const expectedSignature = crypto\n      .createHmac(\"sha256\", process.env.RAZORPAY_KEY_SECRET)\n      .update(body.toString())\n      .digest(\"hex\");\n\n    const isAuthentic = expectedSignature === razorpay_signature;\n    \n    const verificationResult = {\n      success: true,\n      verified: isAuthentic,\n      razorpay_order_id,\n      razorpay_payment_id,\n      razorpay_signature,\n      expected_signature: expectedSignature,\n      orderData\n    };\n\n    console.log(\"Payment verification result:\", verificationResult);\n\n    if (isAuthentic) {\n      // Here you would typically:\n      // 1. Update order status in database\n      // 2. Send confirmation email\n      // 3. Update inventory\n      // For now, we'll just return success\n      \n      res.json({\n        ...verificationResult,\n        message: \"Payment verified successfully!\"\n      });\n    } else {\n      res.status(400).json({\n        ...verificationResult,\n        error: \"Payment verification failed - signature mismatch\"\n      });\n    }\n  } catch (error) {\n    console.error(\"Payment verification error:\", error);\n    res.status(500).json({\n      success: false,\n      verified: false,\n      error: \"Payment verification failed\",\n      details: error instanceof Error ? error.message : \"Unknown error\"\n    });\n  }\n});\n\n(async () => {\n  // Using external APIs at https://sm-furnishing-backend.onrender.com\n  const server = createServer(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":5704},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { CartProvider } from \"@/lib/cartContext\";\nimport { AuthProvider } from \"@/lib/authContext\";\nimport { WishlistProvider } from \"@/lib/wishlistContext\";\nimport { WishlistSidebar } from \"@/components/WishlistSidebar\";\nimport { ScrollToTop } from \"@/components/ScrollToTop\";\nimport Home from \"@/pages/home\";\nimport Shop from \"@/pages/shop\";\nimport Product from \"@/pages/product\";\nimport About from \"@/pages/about\";\nimport Blog from \"@/pages/blog\";\nimport Category from \"@/pages/category\";\nimport Login from \"@/pages/login\";\nimport Signup from \"@/pages/signup\";\nimport Profile from \"@/pages/profile\";\nimport Checkout from \"@/pages/checkout\";\nimport Success from \"@/pages/success\";\nimport Privacy from \"@/pages/privacy\";\nimport Terms from \"@/pages/terms\";\nimport Returns from \"@/pages/returns\";\nimport FAQs from \"@/pages/faqs\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/shop\" component={Shop} />\n      <Route path=\"/product/:id\" component={Product} />\n      <Route path=\"/category/:category\" component={Category} />\n      <Route path=\"/blog\" component={Blog} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/profile\" component={Profile} />\n      <Route path=\"/checkout\" component={Checkout} />\n      <Route path=\"/success\" component={Success} />\n      <Route path=\"/privacy\" component={Privacy} />\n      <Route path=\"/terms\" component={Terms} />\n      <Route path=\"/returns\" component={Returns} />\n      <Route path=\"/faqs\" component={FAQs} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <CartProvider>\n          <WishlistProvider>\n            <TooltipProvider>\n              <Toaster />\n              <ScrollToTop />\n              <Router />\n              <WishlistSidebar />\n            </TooltipProvider>\n          </WishlistProvider>\n        </CartProvider>\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2446},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;1,400&family=Inter:wght@300;400;500;600;700&family=Dancing+Script:wght@400;500;600&family=Prata:wght@400&family=Anonymous+Pro:wght@400;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(35, 45%, 95%);\n  --foreground: hsl(25, 25%, 15%);\n  --card: hsl(35, 25%, 98%);\n  --card-foreground: hsl(25, 25%, 15%);\n  --popover: hsl(35, 25%, 98%);\n  --popover-foreground: hsl(25, 25%, 15%);\n  --primary: hsl(22, 40%, 52%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(35, 35%, 85%);\n  --secondary-foreground: hsl(25, 25%, 15%);\n  --muted: hsl(35, 25%, 90%);\n  --muted-foreground: hsl(25, 15%, 45%);\n  --accent: hsl(84, 61%, 52%);\n  --accent-foreground: hsl(25, 25%, 15%);\n  --destructive: hsl(356, 90%, 54%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(35, 25%, 82%);\n  --input: hsl(35, 25%, 90%);\n  --ring: hsl(22, 40%, 52%);\n  --chart-1: hsl(22, 40%, 52%);\n  --chart-2: hsl(84, 61%, 52%);\n  --chart-3: hsl(42, 92%, 56%);\n  --chart-4: hsl(147, 78%, 42%);\n  --chart-5: hsl(341, 75%, 51%);\n  --sidebar: hsl(35, 25%, 98%);\n  --sidebar-foreground: hsl(25, 25%, 15%);\n  --sidebar-primary: hsl(22, 40%, 52%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(35, 35%, 85%);\n  --sidebar-accent-foreground: hsl(25, 25%, 15%);\n  --sidebar-border: hsl(35, 25%, 82%);\n  --sidebar-ring: hsl(22, 40%, 52%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: 'Playfair Display', Georgia, serif;\n  --font-script: 'Dancing Script', cursive;\n  --font-mono: 'Anonymous Pro', monospace;\n  --font-prata: 'Prata', serif;\n  --font-quiche: 'Josefin Sans', 'Arial Black', sans-serif;\n  --radius: 8px;\n  --terracotta: hsl(22, 40%, 52%);\n  --terracotta-light: hsl(22, 50%, 65%);\n  --terracotta-dark: hsl(22, 30%, 40%);\n  --cream: hsl(35, 45%, 88%);\n  --cream-light: hsl(35, 55%, 92%);\n  --cream-dark: hsl(35, 35%, 80%);\n}\n\n/* Shop Page Animations */\n@keyframes cartBounce {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes heartPulse {\n  0% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n}\n\n/* Testimonials Marquee Animations - Seamless Loop */\n@keyframes scrollTestimonials1 {\n  0% { transform: translateX(0); }\n  100% { transform: translateX(-50%); }\n}\n\n@keyframes scrollTestimonials2 {\n  0% { transform: translateX(0); }\n  100% { transform: translateX(-50%); }\n}\n\n@keyframes scrollTestimonials3 {\n  0% { transform: translateX(0); }\n  100% { transform: translateX(-50%); }\n}\n\n@keyframes scrollTestimonials4 {\n  0% { transform: translateX(0); }\n  100% { transform: translateX(-50%); }\n}\n\n@keyframes scrollTestimonials5 {\n  0% { transform: translateX(0); }\n  100% { transform: translateX(-50%); }\n}\n\n/* About Page Animations */\n@keyframes fade-in-up {\n  from {\n    opacity: 0;\n    transform: translateY(40px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes float-delayed {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-15px); }\n}\n\n.animate-fade-in-up {\n  animation: fade-in-up 0.8s ease-out forwards;\n}\n\n.animation-delay-300 {\n  animation-delay: 0.3s;\n}\n\n.animation-delay-600 {\n  animation-delay: 0.6s;\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n.animate-float-delayed {\n  animation: float-delayed 4s ease-in-out infinite;\n  animation-delay: 1s;\n}\n\n.transform-style-preserve-3d {\n  transform-style: preserve-3d;\n}\n\n.backface-hidden {\n  backface-visibility: hidden;\n}\n\n.rotate-y-180 {\n  transform: rotateY(180deg);\n}\n\n.duration-2000 {\n  transition-duration: 2000ms;\n}\n\n/* Premium Tabs Animations */\n@keyframes slideInFromCenter {\n  from {\n    width: 0;\n    transform: scaleX(0);\n  }\n  to {\n    width: 100%;\n    transform: scaleX(1);\n  }\n}\n\n@keyframes fadeInUpStagger {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Utility classes for animations */\n.animate-underline {\n  animation: slideInFromCenter 0.3s ease-out;\n}\n\n.animate-fade-in-up {\n  animation: fadeInUpStagger 0.5s ease-out forwards;\n}\n\n@keyframes numberFlip {\n  0% { transform: rotateX(0); }\n  50% { transform: rotateX(-90deg); }\n  100% { transform: rotateX(0); }\n}\n\n/* Profile Page Background Animations */\n@keyframes floatAround1 {\n  0%, 100% { \n    transform: translate(0px, 0px) rotate(0deg);\n    opacity: 0.4;\n  }\n  25% { \n    transform: translate(30px, -20px) rotate(90deg);\n    opacity: 0.6;\n  }\n  50% { \n    transform: translate(-10px, -30px) rotate(180deg);\n    opacity: 0.3;\n  }\n  75% { \n    transform: translate(-25px, 10px) rotate(270deg);\n    opacity: 0.5;\n  }\n}\n\n@keyframes floatAround2 {\n  0%, 100% { \n    transform: translate(0px, 0px) rotate(0deg) scale(1);\n    opacity: 0.3;\n  }\n  33% { \n    transform: translate(-40px, 25px) rotate(120deg) scale(1.2);\n    opacity: 0.5;\n  }\n  66% { \n    transform: translate(20px, -15px) rotate(240deg) scale(0.8);\n    opacity: 0.4;\n  }\n}\n\n@keyframes floatAround3 {\n  0%, 100% { \n    transform: translate(0px, 0px) rotate(0deg);\n    opacity: 0.5;\n  }\n  50% { \n    transform: translate(25px, 35px) rotate(180deg);\n    opacity: 0.2;\n  }\n}\n\n@keyframes gentleFloat {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg);\n    opacity: 0.3;\n  }\n  50% { \n    transform: translateY(-20px) rotate(180deg);\n    opacity: 0.6;\n  }\n}\n\n@keyframes slowDrift {\n  0%, 100% { \n    transform: translate(0px, 0px) scale(1);\n    opacity: 0.4;\n  }\n  25% { \n    transform: translate(15px, -10px) scale(1.1);\n    opacity: 0.2;\n  }\n  50% { \n    transform: translate(-5px, -25px) scale(0.9);\n    opacity: 0.5;\n  }\n  75% { \n    transform: translate(-20px, 5px) scale(1.05);\n    opacity: 0.3;\n  }\n}\n\n/* Floating shapes styles */\n.floating-shape {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.floating-shape-1 {\n  width: 80px;\n  height: 80px;\n  background: linear-gradient(135deg, rgba(181, 131, 90, 0.15), rgba(181, 131, 90, 0.05));\n  top: 10%;\n  left: 15%;\n  animation: floatAround1 25s ease-in-out infinite;\n}\n\n.floating-shape-2 {\n  width: 120px;\n  height: 120px;\n  background: linear-gradient(45deg, rgba(208, 165, 132, 0.12), rgba(208, 165, 132, 0.03));\n  top: 70%;\n  right: 20%;\n  animation: floatAround2 30s ease-in-out infinite;\n  animation-delay: -5s;\n}\n\n.floating-shape-3 {\n  width: 60px;\n  height: 60px;\n  background: linear-gradient(225deg, rgba(181, 131, 90, 0.18), rgba(181, 131, 90, 0.08));\n  top: 40%;\n  right: 10%;\n  animation: gentleFloat 20s ease-in-out infinite;\n  animation-delay: -10s;\n}\n\n.floating-shape-4 {\n  width: 100px;\n  height: 100px;\n  background: linear-gradient(315deg, rgba(208, 165, 132, 0.1), rgba(208, 165, 132, 0.02));\n  bottom: 20%;\n  left: 25%;\n  animation: slowDrift 35s ease-in-out infinite;\n  animation-delay: -15s;\n}\n\n.floating-shape-5 {\n  width: 70px;\n  height: 70px;\n  background: linear-gradient(180deg, rgba(181, 131, 90, 0.14), rgba(181, 131, 90, 0.06));\n  top: 25%;\n  left: 65%;\n  animation: floatAround3 22s ease-in-out infinite;\n  animation-delay: -8s;\n}\n\n.floating-shape-6 {\n  width: 90px;\n  height: 90px;\n  background: linear-gradient(90deg, rgba(208, 165, 132, 0.13), rgba(208, 165, 132, 0.04));\n  bottom: 40%;\n  right: 35%;\n  animation: gentleFloat 28s ease-in-out infinite;\n  animation-delay: -18s;\n}\n\n@keyframes slideInFromLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-100%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideUpModal {\n  from {\n    opacity: 0;\n    transform: translateY(100px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes priceCountUp {\n  from {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n/* Utility classes */\n.animate-fadeInUp {\n  animation: fadeInUp 0.5s ease-out forwards;\n}\n\n.animate-heartPulse {\n  animation: heartPulse 0.6s ease-in-out;\n}\n\n.animate-numberFlip {\n  animation: numberFlip 0.3s ease-in-out;\n}\n\n.animate-slideInFromLeft {\n  animation: slideInFromLeft 0.5s ease-out;\n}\n\n.animate-slideUpModal {\n  animation: slideUpModal 0.4s ease-out;\n}\n\n.animate-priceCountUp {\n  animation: priceCountUp 0.3s ease-out;\n}\n\n.dark {\n  --background: hsl(25, 25%, 8%);\n  --foreground: hsl(35, 45%, 92%);\n  --card: hsl(25, 25%, 10%);\n  --card-foreground: hsl(35, 45%, 92%);\n  --popover: hsl(25, 25%, 8%);\n  --popover-foreground: hsl(35, 45%, 92%);\n  --primary: hsl(22, 40%, 52%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(25, 15%, 20%);\n  --secondary-foreground: hsl(35, 45%, 92%);\n  --muted: hsl(25, 15%, 15%);\n  --muted-foreground: hsl(35, 25%, 65%);\n  --accent: hsl(84, 61%, 52%);\n  --accent-foreground: hsl(25, 25%, 15%);\n  --destructive: hsl(356, 90%, 54%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(25, 15%, 18%);\n  --input: hsl(25, 15%, 15%);\n  --ring: hsl(22, 40%, 52%);\n  --sidebar: hsl(25, 25%, 10%);\n  --sidebar-foreground: hsl(35, 45%, 92%);\n  --sidebar-primary: hsl(22, 40%, 52%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(25, 15%, 20%);\n  --sidebar-accent-foreground: hsl(35, 45%, 92%);\n  --sidebar-border: hsl(25, 15%, 18%);\n  --sidebar-ring: hsl(22, 40%, 52%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-gradient-to-b from-background to-white text-foreground;\n  }\n\n  .font-script {\n    font-family: var(--font-script);\n  }\n}\n\n@layer components {\n  .terracotta {\n    color: var(--terracotta);\n  }\n  \n  .bg-terracotta {\n    background-color: var(--terracotta);\n  }\n  \n  .border-terracotta {\n    border-color: var(--terracotta);\n  }\n  \n  .hover\\:bg-terracotta-dark:hover {\n    background-color: var(--terracotta-dark);\n  }\n  \n  .cream {\n    color: var(--cream);\n  }\n  \n  .bg-cream {\n    background-color: var(--cream);\n  }\n  \n  .hover\\:bg-cream-dark:hover {\n    background-color: var(--cream-dark);\n  }\n\n  /* Hide scrollbar while maintaining functionality */\n  .scrollbar-hide {\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n  }\n  \n  .scrollbar-hide::-webkit-scrollbar {\n    display: none; /* Safari and Chrome */\n  }\n}\n","size_bytes":10621},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\nimport { apiUrl } from \"./config\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const fullUrl = url.startsWith('http') ? url : apiUrl(url);\n  // Get auth token from localStorage for authenticated requests\n  const authToken = localStorage.getItem(\"authToken\");\n  const headers: Record<string, string> = {};\n  if (data) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n  if (authToken) {\n    headers[\"Authorization\"] = `Bearer ${authToken}`;\n  }\n\n  const res = await fetch(fullUrl, {\n    method,\n    headers,\n    body: data ? JSON.stringify(data) : undefined,\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const url = queryKey.join(\"/\") as string;\n    const fullUrl = url.startsWith('http') ? url : apiUrl(url);\n    // Get auth token from localStorage for authenticated requests\n    const authToken = localStorage.getItem(\"authToken\");\n    const headers: Record<string, string> = {};\n    if (authToken) {\n      headers[\"Authorization\"] = `Bearer ${authToken}`;\n    }\n\n    const res = await fetch(fullUrl, {\n      headers,\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":2046},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { ChevronLeft, ChevronRight, Armchair, Table, Sofa, Square, Lightbulb, Flower } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Header } from \"@/components/Header\";\nimport { ProductCard } from \"@/components/ProductCard\";\nimport { PremiumTabs } from \"@/components/PremiumTabs\";\nimport { ServiceFeaturesBar } from \"@/components/ServiceFeaturesBar\";\nimport { bestSellers, luxuryProducts } from \"@/data/products\";\nimport { Footer } from \"@/components/Footer\";\nimport newsletterBgImage from \"@assets/Group 48_1758371284588.png\";\nimport heroBgImage from \"@assets/delicious-breakfast-bed-concept_1758535580577.jpg\";\nimport bulkOrderImage from \"@assets/minimal-linen-cushion-covers-sofa_1758535928415.jpg\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { submitBulkOrder, submitNewsletter } from \"@/lib/api\";\n\nconst categories = [\n  { id: 1, name: \"Rocking Chair\", icon: Armchair },\n  { id: 2, name: \"Side Table\", icon: Table },\n  { id: 3, name: \"Accent Chair\", icon: Sofa },\n  { id: 4, name: \"Ottoman\", icon: Square },\n  { id: 5, name: \"Table Lamp\", icon: Lightbulb },\n  { id: 6, name: \"Decorative Vase\", icon: Flower },\n];\n\n// Bulk Order Form Schema\nconst bulkOrderSchema = z.object({\n  name: z.string().min(2, \"Full name must be at least 2 characters\").max(50, \"Full name must be less than 50 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  phoneNumber: z.string().min(10, \"Phone number must be at least 10 digits\").regex(/^[\\+]?[\\d\\s\\-\\(\\)]+$/, \"Please enter a valid phone number\"),\n  orderDescription: z.string().min(10, \"Please provide at least 10 characters describing your order\").max(500, \"Description must be less than 500 characters\")\n});\n\n\nexport default function Home() {\n  const [currentCategoryIndex, setCurrentCategoryIndex] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const { toast } = useToast();\n  const [, setLocation] = useLocation();\n  \n  // Bulk Order Form with react-hook-form and zod\n  const bulkOrderForm = useForm<z.infer<typeof bulkOrderSchema>>({\n    resolver: zodResolver(bulkOrderSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      orderDescription: \"\"\n    }\n  });\n  \n  // Loading states\n  const [isBulkOrderSubmitting, setIsBulkOrderSubmitting] = useState(false);\n  const [isNewsletterSubmitting, setIsNewsletterSubmitting] = useState(false);\n  \n  // Countdown timer state\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  \n  // Number of categories to show at once\n  const categoriesPerView = 6;\n  \n  const nextCategory = () => {\n    setCurrentCategoryIndex((prev) => \n      prev + categoriesPerView >= categories.length ? 0 : prev + 1\n    );\n  };\n\n  const prevCategory = () => {\n    setCurrentCategoryIndex((prev) => \n      prev === 0 ? Math.max(0, categories.length - categoriesPerView) : prev - 1\n    );\n  };\n  \n  // Get visible categories based on current index\n  const getVisibleCategories = () => {\n    const visible = [];\n    for (let i = 0; i < categoriesPerView; i++) {\n      const index = (currentCategoryIndex + i) % categories.length;\n      visible.push(categories[index]);\n    }\n    return visible;\n  };\n\n  // Countdown timer effect\n  useEffect(() => {\n    const targetDate = new Date('2025-09-22T00:00:00');\n    \n    const updateCountdown = () => {\n      const now = new Date();\n      const difference = targetDate.getTime() - now.getTime();\n      \n      if (difference > 0) {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n        \n        setTimeLeft({ days, hours, minutes, seconds });\n      } else {\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      }\n    };\n\n    updateCountdown();\n    const interval = setInterval(updateCountdown, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const handleSubscribe = async () => {\n    if (email && !isNewsletterSubmitting) {\n      setIsNewsletterSubmitting(true);\n      try {\n        const result = await submitNewsletter({ email });\n        if (result.success) {\n          toast({\n            title: \"Success!\",\n            description: result.message,\n          });\n          setEmail(\"\");\n        } else {\n          toast({\n            title: \"Subscription failed\",\n            description: result.message,\n            variant: \"destructive\",\n          });\n        }\n      } catch (error) {\n        toast({\n          title: \"Subscription failed\",\n          description: \"Please try again later or contact support if the problem persists.\",\n          variant: \"destructive\",\n        });\n      } finally {\n        setIsNewsletterSubmitting(false);\n      }\n    }\n  };\n\n  const handleBulkOrderSubmit = async (values: z.infer<typeof bulkOrderSchema>) => {\n    setIsBulkOrderSubmitting(true);\n    try {\n      await submitBulkOrder(values);\n      toast({\n        title: \"Thank you for your inquiry!\",\n        description: \"We'll get back to you within 24 hours regarding your bulk order.\",\n      });\n      bulkOrderForm.reset();\n    } catch (error) {\n      toast({\n        title: \"Submission failed\",\n        description: \"Please try again later or contact support if the problem persists.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsBulkOrderSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <Header />\n\n      {/* Hero Section */}\n      <section className=\"relative h-screen flex items-center justify-center\">\n        <div \n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n          style={{\n            backgroundImage: `url(${heroBgImage})`\n          }}\n        >\n          <div \n            className=\"absolute inset-0\"\n            style={{\n              background: 'linear-gradient(180deg, #582308 -3.91%, rgba(175, 76, 15, 0.7) 11.73%, rgba(169, 142, 128, 0.708654) 41.34%, rgba(255, 255, 255, 0) 100%)'\n            }}\n          ></div>\n        </div>\n        \n        <div className=\"relative z-10 text-center text-white px-6\">\n          <h2 className=\"text-5xl md:text-7xl lg:text-8xl font-bold mb-4 tracking-wide\" style={{ fontFamily: '\"Prata\", serif' }} data-testid=\"hero-headline\">\n            AFFORDABLE LUXURY\n          </h2>\n          <p className=\"text-xl md:text-2xl font-light mb-8 tracking-wider\" data-testid=\"hero-subheading\">\n            Where Comfort Meets Elegance\n          </p>\n          <Button \n            variant=\"outline\" \n            size=\"lg\"\n            onClick={() => setLocation('/shop')}\n            style={{\n              background: 'rgba(255, 255, 255, 0.47)',\n              border: '9px solid #FFFFFF'\n            }}\n            className=\"text-terracotta font-semibold px-8 py-4 text-lg tracking-wide hover:bg-white hover:text-terracotta-dark transition-all duration-300\"\n            data-testid=\"button-explore-collection\"\n          >\n            Explore Collection\n          </Button>\n        </div>\n      </section>\n\n\n      {/* Designing Luxury Hero Section */}\n      <section \n        className=\"py-16 lg:py-20 text-center\"\n        style={{\n          backgroundColor: '#582308'\n        }}\n      >\n        <div className=\"container mx-auto px-6 max-w-5xl\">\n          {/* Primary Headline - \"Designing Luxury\" */}\n          <h1 \n            className=\"text-white font-bold capitalize mb-1\"\n            style={{ \n              fontFamily: '\"DM Serif Display\", serif',\n              fontSize: 'clamp(2.5rem, 6vw, 7rem)',\n              lineHeight: '1.0'\n            }}\n          >\n            Designing Luxury\n          </h1>\n          \n          {/* Secondary Headline - \"affordably\" */}\n          <h2 \n            className=\"text-[#D58A5B] mb-8\"\n            style={{\n              fontFamily: '\"Dancing Script\", cursive',\n              fontSize: 'clamp(2.5rem, 6vw, 7rem)',\n              lineHeight: '1.1',\n              fontStyle: 'italic',\n              marginTop: '-1rem'\n            }}\n          >\n            affordably\n          </h2>\n          \n          {/* Supporting Text */}\n          <div className=\"max-w-3xl mx-auto\">\n            <p \n              className=\"text-white font-bold leading-relaxed text-base md:text-lg lg:text-xl\"\n              style={{\n                fontFamily: '\"Playfair Display\", serif'\n              }}\n            >\n              We bring you timeless designs rooted in heritage yet styled for modern living. Every collection is crafted with care, ensuring your home reflects luxury — without the heavy price tag. We weave stories of love, comfort, and elegance into every piece, making your space truly yours.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Best Sellers Section */}\n      <section className=\"pt-20 pb-10 bg-white\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div \n              style={{\n                border: '2px solid #582308',\n                borderRadius: '20px'\n              }}\n              className=\"px-8 md:px-12 py-4 md:py-6 w-full\"\n            >\n              <div className=\"flex flex-col lg:flex-row gap-12 items-center\">\n                {/* Left Content Area - 30% */}\n                <div className=\"lg:w-[30%] space-y-6 text-center lg:text-left\">\n                  <h3 \n                    className=\"text-3xl md:text-4xl font-bold text-foreground\" \n                    style={{ fontFamily: '\"Playfair Display\", serif' }}\n                    data-testid=\"bestsellers-title\"\n                  >\n                    BEST SELLERS\n                  </h3>\n                  <p \n                    className=\"text-muted-foreground leading-relaxed\" \n                    style={{ fontFamily: '\"Playfair Display\", serif' }}\n                    data-testid=\"bestsellers-description\"\n                  >\n                    Discover the pieces our customers can't get enough of. These bestselling designs combine comfort, elegance, and everyday luxury.\n                  </p>\n                  <div className=\"flex justify-center lg:justify-start\">\n                    <Button \n                      variant=\"outline\"\n                      onClick={() => setLocation('/shop')}\n                      style={{\n                        width: '198px',\n                        height: '72px',\n                        background: 'rgba(255, 255, 255, 0.47)',\n                        border: '9px solid #FFD0B3',\n                        borderRadius: '14px',\n                        boxSizing: 'border-box',\n                        fontFamily: 'var(--font-quiche)'\n                      }}\n                      className=\"text-terracotta font-semibold\"\n                      data-testid=\"button-explore-more\"\n                    >\n                      Explore More\n                    </Button>\n                  </div>\n                </div>\n                \n                {/* Right Product Showcase - 70% */}\n                <div className=\"lg:w-[70%] w-full\">\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6\">\n                    {bestSellers.map((product) => (\n                      <ProductCard \n                        key={product.id}\n                        product={product}\n                        variant=\"bestseller\"\n                        testIdPrefix=\"product\"\n                        showAddToCart={false}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Luxury Choice Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div \n              style={{\n                border: '2px solid #582308',\n                borderRadius: '20px'\n              }}\n              className=\"px-8 md:px-12 py-4 md:py-6 bg-white shadow-xl w-full\"\n            >\n              <div className=\"flex flex-col lg:flex-row gap-8 items-center\">\n                {/* Left Product Showcase - 70% */}\n                <div className=\"lg:w-[70%] w-full order-2 lg:order-1\">\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 lg:gap-4\">\n                    {luxuryProducts.map((product) => (\n                      <ProductCard \n                        key={product.id}\n                        product={product}\n                        variant=\"luxury\"\n                        testIdPrefix=\"luxury-product\"\n                        showAddToCart={false}\n                      />\n                    ))}\n                  </div>\n                </div>\n                \n                {/* Right Content Area - 30% */}\n                <div className=\"lg:w-[30%] space-y-4 order-1 lg:order-2 text-center lg:text-left\">\n                  <h3 \n                    className=\"text-3xl md:text-4xl font-bold text-foreground tracking-wider\" \n                    style={{ fontFamily: '\"Playfair Display\", serif' }}\n                    data-testid=\"luxury-choice-title\"\n                  >\n                    LUXURY CHOICE\n                  </h3>\n                  <p \n                    className=\"text-muted-foreground leading-relaxed\" \n                    style={{ fontFamily: '\"Playfair Display\", serif' }}\n                    data-testid=\"luxury-choice-description\"\n                  >\n                    Handpicked selections that embody luxury and sophistication, thoughtfully crafted to bring warmth and style to your home.\n                  </p>\n                  <div className=\"flex justify-center lg:justify-start\">\n                    <Button \n                      variant=\"outline\"\n                      onClick={() => setLocation('/shop')}\n                      style={{\n                        width: '198px',\n                        height: '72px',\n                        background: 'rgba(255, 255, 255, 0.47)',\n                        border: '9px solid #FFD0B3',\n                        borderRadius: '14px',\n                        boxSizing: 'border-box',\n                        fontFamily: 'var(--font-quiche)'\n                      }}\n                      className=\"text-terracotta font-semibold\"\n                      data-testid=\"button-luxury-explore-more\"\n                    >\n                      EXPLORE LUXURY\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n\n      {/* Premium Collection Section with Interactive Tabs - Temporarily Hidden */}\n      {/* <PremiumTabs /> */}\n\n      {/* Service Features Bar */}\n      <ServiceFeaturesBar />\n\n\n      {/* Newsletter Section */}\n      <section \n        className=\"relative w-full overflow-hidden h-[22rem] sm:h-[28rem] lg:h-[clamp(28rem,55vh,42rem)]\"\n      >\n        {/* Background Image */}\n        <div className=\"absolute inset-0\">\n          <div \n            className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n            style={{\n              backgroundImage: `url(${newsletterBgImage})`\n            }}\n          />\n          {/* Custom background overlay for LET'S STAY IN TOUCH */}\n          <div \n            className=\"absolute inset-0\"\n            style={{\n              background: 'rgba(219, 163, 82, 0.64)'\n            }}\n          />\n        </div>\n\n        {/* Content */}\n        <div className=\"relative z-10 h-full flex flex-col items-center justify-center px-6\">\n          {/* Main Heading */}\n          <h1 \n            className=\"text-white text-center mb-8 font-normal capitalize\"\n            style={{\n              fontFamily: \"'Prata', serif\",\n              fontSize: 'clamp(0.75rem, 5.5vw, 10rem)',\n              lineHeight: 'clamp(2rem, 7vw, 8.25rem)',\n              letterSpacing: '1px'\n            }}\n          >\n            LET'S STAY IN TOUCH\n          </h1>\n\n          {/* Subheading */}\n          <h2 \n            className=\"text-white text-center mb-2\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontSize: 'clamp(1rem, 2.2vw, 1.5rem)',\n              fontWeight: '500',\n              letterSpacing: '0.5px'\n            }}\n          >\n            Subscribe\n          </h2>\n\n          {/* Description */}\n          <p \n            className=\"text-white text-center mb-4 capitalize\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontSize: 'clamp(0.875rem, 1.6vw, 1rem)',\n              fontWeight: '700',\n              letterSpacing: '0.25px',\n              maxWidth: '480px'\n            }}\n          >\n            To our newsletter to receive the latest product drops and coupons\n          </p>\n\n          {/* Email Input Section */}\n          <div className=\"flex flex-col items-center space-y-6\">\n            {/* Email Input and Submit Button Row */}\n            <div className=\"flex flex-col items-center space-y-4 w-full max-w-5xl px-4 sm:px-0\">\n              {/* Email Input and Subscribe Button Row - responsive layout */}\n              <div className=\"flex flex-col sm:flex-row items-center space-y-3 sm:space-y-0 sm:space-x-6 w-full sm:w-auto sm:mr-8\">\n                {/* Email Input */}\n                <div className=\"relative w-full sm:w-auto\">\n                  <input \n                    type=\"email\" \n                    placeholder=\"Enter your Email .......\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    className=\"bg-transparent text-white placeholder-white/80 border-none outline-none text-center pb-2 w-full sm:w-auto\"\n                    style={{\n                      fontFamily: \"'Anonymous Pro', monospace\",\n                      fontSize: '16px',\n                      fontWeight: '700',\n                      width: 'clamp(220px, 80vw, 500px)',\n                      borderBottom: '2px solid white',\n                      paddingBottom: '4px'\n                    }}\n                    data-testid=\"input-newsletter-email\"\n                  />\n                </div>\n\n                {/* Subscribe Button */}\n                <button \n                  onClick={handleSubscribe}\n                  disabled={isNewsletterSubmitting || !email.trim()}\n                  className=\"text-white hover:text-white/80 transition-colors duration-300 group flex items-center space-x-3 disabled:opacity-50 disabled:cursor-not-allowed flex-shrink-0\"\n                  style={{\n                    fontFamily: \"'Anonymous Pro', monospace\",\n                    fontSize: '18px',\n                    fontWeight: '700',\n                    letterSpacing: '0.5px'\n                  }}\n                  data-testid=\"button-subscribe-newsletter\"\n                >\n                  <span>{isNewsletterSubmitting ? 'Subscribing...' : 'Subscribe'}</span>\n                  <span className=\"transition-transform duration-300 group-hover:translate-x-1\">→</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Order in Bulk Section */}\n      <section className=\"py-8 bg-white\">\n        <div className=\"container mx-auto px-6\">\n          {/* Section Header */}\n          <div className=\"text-left mb-6 mt-2 ml-8\">\n            <h2 \n              className=\"mb-4\"\n              style={{\n                fontFamily: \"'Prata', serif\",\n                fontSize: 'clamp(2.5rem, 5vw, 3.5rem)',\n                color: '#2C1810',\n                fontWeight: 'normal'\n              }}\n            >\n              Order In Bulk?\n            </h2>\n            <p \n              className=\"text-lg\"\n              style={{\n                color: '#666666',\n                fontSize: '18px',\n                fontWeight: '400'\n              }}\n            >\n              Fill the form below to get in touch for bulk orders\n            </p>\n          </div>\n\n          {/* Two Column Layout */}\n          <div className=\"grid lg:grid-cols-2 gap-8 lg:gap-12 max-w-6xl mx-auto items-center justify-center\">\n            {/* Left Side - Contact Form */}\n            <div className=\"order-2 lg:order-1\">\n              <div \n                className=\"p-6 rounded-3xl shadow-lg\"\n                style={{\n                  backgroundColor: '#F5E6D3',\n                  boxShadow: '0 4px 20px rgba(0,0,0,0.08)'\n                }}\n              >\n                <Form {...bulkOrderForm}>\n                  <form onSubmit={bulkOrderForm.handleSubmit(handleBulkOrderSubmit)} className=\"space-y-6\">\n                    {/* Full Name Field */}\n                    <FormField\n                      control={bulkOrderForm.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel \n                            className=\"block uppercase tracking-wider text-xs font-semibold\"\n                            style={{ color: '#2C1810', letterSpacing: '1px' }}\n                          >\n                            FULL NAME\n                          </FormLabel>\n                          <FormControl>\n                            <Input\n                              placeholder=\"Your full name\"\n                              {...field}\n                              className=\"w-full h-10 px-0 py-2 bg-transparent border-0 border-b-2 border-gray-300 focus:border-orange-600 focus:outline-none transition-colors duration-300 focus-visible:ring-0 focus-visible:ring-offset-0\"\n                              style={{ \n                                fontSize: '16px',\n                                color: '#2C1810'\n                              }}\n                              data-testid=\"input-bulk-fullname\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Email Field */}\n                    <FormField\n                      control={bulkOrderForm.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel \n                            className=\"block uppercase tracking-wider text-xs font-semibold\"\n                            style={{ color: '#2C1810', letterSpacing: '1px' }}\n                          >\n                            EMAIL\n                          </FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"email\"\n                              placeholder=\"yourname@example.com\"\n                              {...field}\n                              className=\"w-full h-10 px-0 py-2 bg-transparent border-0 border-b-2 border-gray-300 focus:border-orange-600 focus:outline-none transition-colors duration-300 focus-visible:ring-0 focus-visible:ring-offset-0\"\n                              style={{ \n                                fontSize: '16px',\n                                color: '#2C1810'\n                              }}\n                              data-testid=\"input-bulk-email\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Phone Number Field */}\n                    <FormField\n                      control={bulkOrderForm.control}\n                      name=\"phoneNumber\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel \n                            className=\"block uppercase tracking-wider text-xs font-semibold\"\n                            style={{ color: '#2C1810', letterSpacing: '1px' }}\n                          >\n                            PHONE NUMBER\n                          </FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"tel\"\n                              placeholder=\"+91 98765 43210\"\n                              {...field}\n                              className=\"w-full h-10 px-0 py-2 bg-transparent border-0 border-b-2 border-gray-300 focus:border-orange-600 focus:outline-none transition-colors duration-300 focus-visible:ring-0 focus-visible:ring-offset-0\"\n                              style={{ \n                                fontSize: '16px',\n                                color: '#2C1810'\n                              }}\n                              data-testid=\"input-bulk-phone\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Order Description Field */}\n                    <FormField\n                      control={bulkOrderForm.control}\n                      name=\"orderDescription\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel \n                            className=\"block uppercase tracking-wider text-xs font-semibold\"\n                            style={{ color: '#2C1810', letterSpacing: '1px' }}\n                          >\n                            ORDER DESCRIPTION\n                          </FormLabel>\n                          <FormControl>\n                            <Textarea\n                              rows={4}\n                              placeholder=\"Explain your order and requirements here...\"\n                              {...field}\n                              className=\"w-full px-0 py-3 bg-transparent border-0 border-b-2 border-gray-300 focus:border-orange-600 focus:outline-none transition-colors duration-300 resize-y min-h-[100px] focus-visible:ring-0 focus-visible:ring-offset-0\"\n                              style={{ \n                                fontSize: '16px',\n                                color: '#2C1810'\n                              }}\n                              data-testid=\"textarea-bulk-description\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Submit Button */}\n                    <Button\n                      type=\"submit\"\n                      disabled={isBulkOrderSubmitting}\n                      className=\"w-full h-10 text-white font-bold text-base rounded-full transition-all duration-300 hover:scale-105 hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                      style={{\n                        background: 'linear-gradient(135deg, #AF4C0F 0%, #D85A1F 100%)',\n                        letterSpacing: '0.5px'\n                      }}\n                      data-testid=\"button-bulk-submit\"\n                    >\n                      {isBulkOrderSubmitting ? 'Sending...' : 'Get In Touch'}\n                    </Button>\n                  </form>\n                </Form>\n              </div>\n            </div>\n\n            {/* Right Side - Curved Rectangle Figure - Hidden on mobile */}\n            <div className=\"order-1 lg:order-2 hidden lg:flex justify-center lg:justify-end\">\n              <div className=\"relative lg:w-[450px] lg:h-[580px]\" data-testid=\"bulk-figure\">\n                {/* Main Image Container - Only top-left curved */}\n                <div \n                  className=\"absolute left-0 top-0 w-[420px] h-[540px] overflow-hidden shadow-[4px_15px_27.1px_7px_rgba(0,0,0,0.25)]\"\n                  style={{\n                    borderRadius: '210px 0 0 0'\n                  }}\n                  data-testid=\"bulk-figure-image\"\n                >\n                  {/* Furniture Image */}\n                  <img\n                    src={bulkOrderImage}\n                    alt=\"Minimal linen cushion covers on sofa\"\n                    className=\"w-full h-full object-cover object-left-top group-hover:scale-105 transition-transform duration-500\"\n                  />\n                </div>\n\n                {/* Border Frame */}\n                <div \n                  className=\"pointer-events-none absolute left-[33px] top-[38px] w-[412px] h-[540px] border-[8px] border-[#AF4C0F]\"\n                  style={{\n                    borderRadius: '210px 0 0 0'\n                  }}\n                  data-testid=\"bulk-figure-border\"\n                />\n\n                {/* Bottom Straight Bar */}\n                <div \n                  className=\"absolute left-[117px] top-[505px] w-[320px] h-[75px] bg-[#582308] shadow-[0_4px_4px_rgba(0,0,0,0.25)]\"\n                  data-testid=\"bulk-figure-bar\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":29719},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/shop.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Slider } from '@/components/ui/slider';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Footer } from '@/components/Footer';\nimport { Header } from '@/components/Header';\nimport { useCart } from '@/lib/cartContext';\nimport { useWishlist } from '@/lib/wishlistContext';\nimport { useToast } from '@/hooks/use-toast';\nimport { useIsMobile } from '@/hooks/use-mobile';\nimport { fetchAllProducts, ApiProduct, formatPrice, getUniqueValues, getProductImageUrl } from '@/lib/api';\nimport bedArrangementsImg from '@assets/bed-arrangements-still-life_1758546337727.jpg';\nimport { \n  Heart, \n  ShoppingCart, \n  Filter, \n  Grid3X3, \n  List, \n  Package,\n  Sparkles,\n  Truck,\n  Shield,\n  Award,\n  Eye,\n  AlertCircle,\n  MoreVertical\n} from 'lucide-react';\n\n// Color mapping for visual display\nconst colorDisplay: { [key: string]: string } = {\n  'Red': '#DC2626',\n  'Blue': '#2563EB',\n  'Green': '#16A34A',\n  'Purple': '#9333EA',\n  'Orange': '#EA580C',\n  'Pink': '#EC4899',\n  'Brown': '#A16207',\n  'Grey': '#6B7280',\n  'Gray': '#6B7280',\n  'White': '#F9FAFB',\n  'Off White': '#F3F4F6',\n  'Beige': '#F5F5DC',\n  'Black': '#111827'\n};\n\nexport default function ShopPage() {\n  // API State\n  const [products, setProducts] = useState<ApiProduct[]>([]);\n  const [filteredProducts, setFilteredProducts] = useState<ApiProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Filter State\n  const [selectedCollections, setSelectedCollections] = useState<string[]>([]);\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [selectedSubCategories, setSelectedSubCategories] = useState<string[]>([]);\n  const [selectedColors, setSelectedColors] = useState<string[]>([]);\n  const [selectedFabrics, setSelectedFabrics] = useState<string[]>([]);\n  const [selectedSizes, setSelectedSizes] = useState<string[]>([]);\n  const [priceRange, setPriceRange] = useState<[number, number]>([1000, 5000]);\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // UI State\n  const [sortBy, setSortBy] = useState<\"featured\" | \"price-low\" | \"price-high\" | \"newest\">(\"featured\");\n  const [viewMode, setViewMode] = useState<\"grid\" | \"list\">(\"grid\");\n  const [animatingProducts, setAnimatingProducts] = useState<Set<string>>(new Set());\n  \n  // Mobile state\n  const isMobile = useIsMobile();\n  const [isMobileFilterOpen, setIsMobileFilterOpen] = useState(false);\n  \n  // Use global cart and wishlist contexts\n  const { addToCart: addToGlobalCart } = useCart();\n  const { toggleWishlist, isInWishlist } = useWishlist();\n  const { toast } = useToast();\n  const [location, setLocation] = useLocation();\n  \n  // Dynamic filter options (calculated from API data)\n  const [collections, setCollections] = useState<string[]>([]);\n  const [categories, setCategories] = useState<string[]>([]);\n  const [subCategories, setSubCategories] = useState<string[]>([]);\n  const [colors, setColors] = useState<string[]>([]);\n  const [fabrics, setFabrics] = useState<string[]>([]);\n  const [sizes, setSizes] = useState<string[]>([]);\n  \n  const productRefs = useRef<{[key: string]: HTMLDivElement | null}>({});\n\n  // Removed image carousel hover functionality as requested\n\n  // Parse URL search parameters\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const searchParam = urlParams.get('search');\n    if (searchParam) {\n      setSearchQuery(searchParam);\n    }\n  }, [location]);\n  \n  // Fetch products from API\n  useEffect(() => {\n    const loadProducts = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const fetchedProducts = await fetchAllProducts();\n        setProducts(fetchedProducts);\n        \n        // Extract unique values for filters\n        setCollections(getUniqueValues<string>(fetchedProducts, 'Collection'));\n        setCategories(getUniqueValues<string>(fetchedProducts, 'Category'));\n        setSubCategories(getUniqueValues<string>(fetchedProducts, 'Sub_Category'));\n        setColors(getUniqueValues<string>(fetchedProducts, 'Color'));\n        setFabrics(getUniqueValues<string>(fetchedProducts, 'Fabric'));\n        setSizes(getUniqueValues<string>(fetchedProducts, 'Size'));\n        \n        // Set price range based on actual data\n        const prices = fetchedProducts.map(p => p.Selling_Price);\n        const minPrice = Math.min(...prices);\n        const maxPrice = Math.max(...prices);\n        setPriceRange([minPrice, maxPrice]);\n        \n      } catch (err) {\n        console.error('Error loading products:', err);\n        setError('Failed to load products. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadProducts();\n  }, []);\n\n  // Apply filters and search\n  useEffect(() => {\n    let filtered = products.filter(product => {\n      // Search filter\n      const searchMatch = !searchQuery || \n        product.Product_Name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        product.Collection.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        product.Description.toLowerCase().includes(searchQuery.toLowerCase());\n      \n      // Collection filter\n      const collectionMatch = selectedCollections.length === 0 || selectedCollections.includes(product.Collection);\n      \n      // Category filter\n      const categoryMatch = selectedCategories.length === 0 || selectedCategories.includes(product.Category);\n      \n      // Sub-category filter\n      const subCategoryMatch = selectedSubCategories.length === 0 || \n        selectedSubCategories.some(subCat => product.Sub_Category.includes(subCat));\n      \n      // Color filter\n      const colorMatch = selectedColors.length === 0 || selectedColors.includes(product.Color);\n      \n      // Fabric filter\n      const fabricMatch = selectedFabrics.length === 0 || selectedFabrics.includes(product.Fabric);\n      \n      // Size filter\n      const sizeMatch = selectedSizes.length === 0 || selectedSizes.includes(product.Size);\n      \n      // Price filter\n      const priceMatch = product.Selling_Price >= priceRange[0] && product.Selling_Price <= priceRange[1];\n      \n      return searchMatch && collectionMatch && categoryMatch && subCategoryMatch && \n             colorMatch && fabricMatch && sizeMatch && priceMatch;\n    });\n\n    // Apply sorting\n    switch (sortBy) {\n      case \"price-low\":\n        filtered.sort((a, b) => a.Selling_Price - b.Selling_Price);\n        break;\n      case \"price-high\":\n        filtered.sort((a, b) => b.Selling_Price - a.Selling_Price);\n        break;\n      case \"newest\":\n        // Assume newer products have higher Thread_Count or just reverse order\n        filtered.sort((a, b) => b.Thread_Count - a.Thread_Count);\n        break;\n      default:\n        // featured - keep original order\n        break;\n    }\n\n    setFilteredProducts(filtered);\n  }, [products, searchQuery, selectedCollections, selectedCategories, selectedSubCategories, \n      selectedColors, selectedFabrics, selectedSizes, priceRange, sortBy]);\n\n\n  // Add to Cart with Animation\n  const addToCart = async (productId: string, event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const product = products.find(p => p._id === productId);\n    if (!product) return;\n    \n    try {\n      // Add to global cart context using the new API-based interface\n      await addToGlobalCart(productId, 1);\n\n      // Show success toast\n      toast({\n        title: \"Added to cart\",\n        description: `${product.Product_Name} has been added to your cart`,\n      });\n      \n      // Animation\n      const productElement = productRefs.current[productId];\n      \n      if (productElement) {\n        setAnimatingProducts(prev => new Set(Array.from(prev).concat([productId])));\n        \n        // Create flying animation element\n        const flyingElement = document.createElement('div');\n        flyingElement.style.position = 'fixed';\n        flyingElement.style.zIndex = '9999';\n        flyingElement.style.pointerEvents = 'none';\n        flyingElement.style.width = '60px';\n        flyingElement.style.height = '60px';\n        flyingElement.style.borderRadius = '12px';\n        flyingElement.style.backgroundColor = '#B8734C';\n        flyingElement.style.transition = 'all 1s cubic-bezier(0.2, 0.8, 0.2, 1)';\n        flyingElement.style.boxShadow = '0 8px 25px rgba(184, 115, 76, 0.4)';\n        flyingElement.innerHTML = `<div style=\"display: flex; align-items: center; justify-content: center; height: 100%; color: white;\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><path d=\"m16 10l-4 4l-4-4\"></path></svg></div>`;\n        \n        const productRect = productElement.getBoundingClientRect();\n        flyingElement.style.left = (productRect.left + productRect.width / 2 - 30) + 'px';\n        flyingElement.style.top = (productRect.top + productRect.height / 2 - 30) + 'px';\n        \n        document.body.appendChild(flyingElement);\n        \n        setTimeout(() => {\n          flyingElement.style.top = (productRect.top - 100) + 'px';\n          flyingElement.style.opacity = '0';\n          flyingElement.style.transform = 'scale(0.5)';\n        }, 100);\n        \n        setTimeout(() => {\n          if (document.body.contains(flyingElement)) {\n            document.body.removeChild(flyingElement);\n          }\n          setAnimatingProducts(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(productId);\n            return newSet;\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to add item to cart. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // Toggle Wishlist using global context\n  const handleToggleWishlist = async (productId: string, event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    await toggleWishlist(productId);\n  };\n  \n  // Clear all filters\n  const clearAllFilters = () => {\n    setSelectedCollections([]);\n    setSelectedCategories([]);\n    setSelectedSubCategories([]);\n    setSelectedColors([]);\n    setSelectedFabrics([]);\n    setSelectedSizes([]);\n    setPriceRange([Math.min(...products.map(p => p.Selling_Price)), Math.max(...products.map(p => p.Selling_Price))]);\n    setSearchQuery('');\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n        <div className=\"container mx-auto px-6 py-8\">\n          <div className=\"flex gap-8\">\n            {/* Sidebar Skeleton */}\n            <div className=\"w-80\">\n              <Card className=\"sticky top-4\">\n                <CardContent className=\"p-6 space-y-6\">\n                  <Skeleton className=\"h-6 w-24\" />\n                  <div className=\"space-y-3\">\n                    <Skeleton className=\"h-16 w-full\" />\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <Skeleton className=\"h-24 w-full\" />\n                      <Skeleton className=\"h-24 w-full\" />\n                      <Skeleton className=\"h-24 w-full\" />\n                      <Skeleton className=\"h-24 w-full\" />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            {/* Main Content Skeleton */}\n            <div className=\"flex-1\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {Array.from({ length: 9 }).map((_, i) => (\n                  <Card key={i} className=\"overflow-hidden\">\n                    <Skeleton className=\"aspect-[4/3] sm:aspect-square w-full\" />\n                    <CardContent className=\"p-4 space-y-2\">\n                      <Skeleton className=\"h-4 w-3/4\" />\n                      <Skeleton className=\"h-4 w-1/2\" />\n                      <Skeleton className=\"h-6 w-1/3\" />\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n        <div className=\"container mx-auto px-6 py-8\">\n          <div className=\"flex items-center justify-center min-h-[400px]\">\n            <Card className=\"p-8 text-center max-w-md\">\n              <AlertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">Failed to Load Products</h3>\n              <p className=\"text-muted-foreground mb-4\">{error}</p>\n              <Button onClick={() => window.location.reload()}>\n                Try Again\n              </Button>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  return (\n    <div className=\"min-h-screen bg-background overflow-x-hidden\">\n      {/* Use shared header component */}\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n\n      {/* Hero Section */}\n      <section \n        className=\"relative h-64 flex items-center justify-center bg-cover bg-center bg-no-repeat\"\n        style={{\n          backgroundImage: `url(${bedArrangementsImg})`\n        }}\n        data-testid=\"hero-section\"\n      >\n        <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n        <div className=\"relative z-10 text-center text-white px-4\">\n          <div className=\"flex items-center justify-center mb-4\">\n            \n            <h1 className=\"font-serif text-3xl md:text-5xl font-bold\" data-testid=\"hero-title\">\n              Complete your space\n            </h1>\n            \n          </div>\n          <p className=\"text-lg md:text-xl font-light max-w-2xl mx-auto leading-relaxed mb-6\" data-testid=\"hero-subtitle\">\n            Explore our entire world of furnishings. From daily essentials to statement pieces, discover luxury made affordable.\n          </p>\n          <div className=\"flex items-center justify-center flex-wrap gap-x-6 gap-y-2 text-sm\">\n            <div className=\"flex items-center\">\n              <Shield className=\"w-4 h-4 mr-1\" />\n              <span>Crafted with finest materials</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Truck className=\"w-4 h-4 mr-1\" />\n              <span>Free Delivery</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Award className=\"w-4 h-4 mr-1\" />\n              <span>Easy on pocket</span>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"max-w-screen-xl mx-auto px-3 sm:px-6 py-6 sm:py-8 overflow-x-hidden\">\n        \n        {/* Mobile Toolbar */}\n        {isMobile && (\n          <div className=\"md:hidden sticky top-0 z-40 bg-background px-4 py-2 mb-4 border-b\">\n            <div className=\"flex items-center justify-between\">\n              {/* Left - Filter Button */}\n              <Sheet open={isMobileFilterOpen} onOpenChange={setIsMobileFilterOpen}>\n                <SheetTrigger asChild>\n                  <Button \n                    variant=\"outline\" \n                    size=\"sm\"\n                    className=\"w-11 h-11 p-0\"\n                    aria-label=\"Open filters\"\n                    data-testid=\"button-open-filters-mobile\"\n                  >\n                    <MoreVertical className=\"w-4 h-4\" />\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"left\" className=\"w-80 overflow-y-auto\">\n                  <SheetHeader>\n                    <SheetTitle>Filters</SheetTitle>\n                    <SheetDescription>\n                      Filter products by your preferences\n                    </SheetDescription>\n                  </SheetHeader>\n                  <div className=\"mt-6\">\n                    {/* Mobile Filter Content - Same as desktop sidebar */}\n                    <div className=\"flex items-center justify-between mb-6\">\n                      <h3 className=\"font-semibold text-lg flex items-center\">\n                        <Filter className=\"w-5 h-5 mr-2 text-terracotta\" />\n                        Filters\n                      </h3>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => {\n                          clearAllFilters();\n                          setIsMobileFilterOpen(false);\n                        }}\n                        className=\"text-terracotta hover:text-terracotta-dark\"\n                        data-testid=\"button-clear-all-mobile\"\n                      >\n                        Clear All\n                      </Button>\n                    </div>\n                    {/* Collections */}\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-medium mb-3 text-terracotta\">Collections</h4>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        {collections.map((collection) => (\n                          <Button\n                            key={collection}\n                            variant={selectedCollections.includes(collection) ? \"default\" : \"outline\"}\n                            size=\"sm\"\n                            className={`h-12 text-xs ${selectedCollections.includes(collection) ? 'bg-terracotta text-white' : ''}`}\n                            onClick={() => {\n                              if (selectedCollections.includes(collection)) {\n                                setSelectedCollections(prev => prev.filter(c => c !== collection));\n                              } else {\n                                setSelectedCollections([collection]);\n                              }\n                            }}\n                          >\n                            {collection}\n                          </Button>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    <Separator className=\"my-6\" />\n                    \n                    {/* Categories */}\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-medium mb-3 text-terracotta\">Categories</h4>\n                      <div className=\"space-y-2\">\n                        {categories.map((category) => (\n                          <div key={category} className=\"flex items-center space-x-2\">\n                            <Checkbox\n                              id={`mobile-category-${category}`}\n                              checked={selectedCategories.includes(category)}\n                              onCheckedChange={(checked) => {\n                                if (checked) {\n                                  setSelectedCategories(prev => [...prev, category]);\n                                } else {\n                                  setSelectedCategories(prev => prev.filter(c => c !== category));\n                                }\n                              }}\n                            />\n                            <label \n                              htmlFor={`mobile-category-${category}`}\n                              className=\"text-sm cursor-pointer flex-1\"\n                            >\n                              {category}\n                            </label>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <Separator className=\"my-6\" />\n                    \n                    {/* Colors */}\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-medium mb-3 text-terracotta\">Colors</h4>\n                      <div className=\"grid grid-cols-3 gap-2\">\n                        {colors.map((color) => (\n                          <div\n                            key={color}\n                            className={`\n                              w-8 h-8 rounded-full border-2 cursor-pointer relative transition-all hover:scale-110\n                              ${selectedColors.includes(color) ? 'border-terracotta scale-110 ring-2 ring-terracotta ring-opacity-30' : 'border-gray-300'}\n                            `}\n                            style={{ backgroundColor: colorDisplay[color] || '#6B7280' }}\n                            onClick={() => {\n                              if (selectedColors.includes(color)) {\n                                setSelectedColors(prev => prev.filter(c => c !== color));\n                              } else {\n                                setSelectedColors(prev => [...prev, color]);\n                              }\n                            }}\n                            title={color}\n                          >\n                            {selectedColors.includes(color) && (\n                              <div className=\"absolute inset-0 flex items-center justify-center\">\n                                <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </SheetContent>\n              </Sheet>\n\n              {/* Center - Grid Icon */}\n              <div className=\"flex items-center\">\n                <Grid3X3 className=\"w-6 h-6 text-terracotta\" />\n              </div>\n\n              {/* Right - Sort Dropdown */}\n              <Select value={sortBy} onValueChange={(value) => setSortBy(value as typeof sortBy)}>\n                <SelectTrigger className=\"w-32\" aria-label=\"Sort products\">\n                  <SelectValue placeholder=\"Sort\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"featured\">Featured</SelectItem>\n                  <SelectItem value=\"price-low\">Low to High</SelectItem>\n                  <SelectItem value=\"price-high\">High to Low</SelectItem>\n                  <SelectItem value=\"newest\">Newest</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex gap-8\">\n          {/* Filters Sidebar - Hidden on Mobile */}\n          <div className=\"hidden md:block w-80\">\n            <Card className=\"sticky top-4 max-h-[calc(100vh-2rem)] flex flex-col shadow-lg\">\n              <CardContent className=\"p-6 flex-1 min-h-0 overflow-y-auto overscroll-contain pr-2 scrollbar-hide\">\n                <div className=\"sticky top-0 z-10 bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/60 mb-6 pt-2 pb-2 flex items-center justify-between\">\n                  <h3 className=\"font-semibold text-lg flex items-center\">\n                    <Filter className=\"w-5 h-5 mr-2 text-terracotta\" />\n                    Filters\n                  </h3>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={clearAllFilters}\n                    className=\"text-terracotta hover:text-terracotta-dark\"\n                  >\n                    Clear All\n                  </Button>\n                </div>\n\n                {/* Collections */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3 text-terracotta\">Collections</h4>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {collections.map((collection) => (\n                      <Button\n                        key={collection}\n                        variant={selectedCollections.includes(collection) ? \"default\" : \"outline\"}\n                        size=\"sm\"\n                        className={`h-12 text-xs ${selectedCollections.includes(collection) ? 'bg-terracotta text-white' : ''}`}\n                        onClick={() => {\n                          if (selectedCollections.includes(collection)) {\n                            setSelectedCollections(prev => prev.filter(c => c !== collection));\n                          } else {\n                            setSelectedCollections([collection]);\n                          }\n                        }}\n                      >\n                        {collection}\n                      </Button>\n                    ))}\n                  </div>\n                </div>\n                \n                <Separator className=\"my-6\" />\n                \n                {/* Categories */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3 text-terracotta\">Categories</h4>\n                  <div className=\"space-y-2\">\n                    {categories.map((category) => (\n                      <div key={category} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={`category-${category}`}\n                          checked={selectedCategories.includes(category)}\n                          onCheckedChange={(checked) => {\n                            if (checked) {\n                              setSelectedCategories(prev => [...prev, category]);\n                            } else {\n                              setSelectedCategories(prev => prev.filter(c => c !== category));\n                            }\n                          }}\n                        />\n                        <label \n                          htmlFor={`category-${category}`}\n                          className=\"text-sm cursor-pointer flex-1\"\n                        >\n                          {category}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n                \n                {/* Sub Categories */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3 text-terracotta\">Sub Categories</h4>\n                  <div className=\"space-y-2\">\n                    {subCategories.map((subCategory) => (\n                      <div key={subCategory} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={`subcategory-${subCategory}`}\n                          checked={selectedSubCategories.includes(subCategory)}\n                          onCheckedChange={(checked) => {\n                            if (checked) {\n                              setSelectedSubCategories(prev => [...prev, subCategory]);\n                            } else {\n                              setSelectedSubCategories(prev => prev.filter(sc => sc !== subCategory));\n                            }\n                          }}\n                        />\n                        <label \n                          htmlFor={`subcategory-${subCategory}`}\n                          className=\"text-sm cursor-pointer flex-1\"\n                        >\n                          {subCategory}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n\n                {/* Colors */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3 text-terracotta\">Colors</h4>\n                  <div className=\"grid grid-cols-3 gap-2\">\n                    {colors.map((color) => (\n                      <div\n                        key={color}\n                        className={`\n                          w-8 h-8 rounded-full border-2 cursor-pointer relative transition-all hover:scale-110\n                          ${selectedColors.includes(color) ? 'border-terracotta scale-110 ring-2 ring-terracotta ring-opacity-30' : 'border-gray-300'}\n                        `}\n                        style={{ backgroundColor: colorDisplay[color] || '#6B7280' }}\n                        onClick={() => {\n                          if (selectedColors.includes(color)) {\n                            setSelectedColors(prev => prev.filter(c => c !== color));\n                          } else {\n                            setSelectedColors(prev => [...prev, color]);\n                          }\n                        }}\n                        title={color}\n                      >\n                        {selectedColors.includes(color) && (\n                          <div className=\"absolute inset-0 flex items-center justify-center\">\n                            <div className={`w-2 h-2 rounded-full ${color === 'White' || color === 'Off White' || color === 'Beige' ? 'bg-gray-600' : 'bg-white'}`} />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n\n                {/* Fabric */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3 text-terracotta\">Fabric</h4>\n                  <div className=\"space-y-2\">\n                    {fabrics.map((fabric) => (\n                      <div key={fabric} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={`fabric-${fabric}`}\n                          checked={selectedFabrics.includes(fabric)}\n                          onCheckedChange={(checked) => {\n                            if (checked) {\n                              setSelectedFabrics(prev => [...prev, fabric]);\n                            } else {\n                              setSelectedFabrics(prev => prev.filter(f => f !== fabric));\n                            }\n                          }}\n                        />\n                        <label \n                          htmlFor={`fabric-${fabric}`}\n                          className=\"text-sm cursor-pointer flex-1\"\n                        >\n                          {fabric}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n\n                {/* Size */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3 text-terracotta\">Size</h4>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {sizes.map((size) => (\n                      <Button\n                        key={size}\n                        variant={selectedSizes.includes(size) ? \"default\" : \"outline\"}\n                        size=\"sm\"\n                        className={`${selectedSizes.includes(size) ? 'bg-terracotta text-white' : ''}`}\n                        onClick={() => {\n                          if (selectedSizes.includes(size)) {\n                            setSelectedSizes(prev => prev.filter(s => s !== size));\n                          } else {\n                            setSelectedSizes(prev => [...prev, size]);\n                          }\n                        }}\n                      >\n                        {size}\n                      </Button>\n                    ))}\n                  </div>\n                </div>\n\n                <Separator className=\"my-6\" />\n\n                {/* Price Range */}\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3 text-terracotta\">Price Range</h4>\n                  <div className=\"mb-3\">\n                    <div className=\"text-sm text-center mb-2\">\n                      {formatPrice(priceRange[0])} - {formatPrice(priceRange[1])}\n                    </div>\n                    <Slider\n                      value={priceRange}\n                      onValueChange={(value) => setPriceRange(value as [number, number])}\n                      max={Math.max(...products.map(p => p.Selling_Price))}\n                      min={Math.min(...products.map(p => p.Selling_Price))}\n                      step={100}\n                      className=\"w-full\"\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1\">\n            {/* Results Header */}\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-4\">\n                <h2 className=\"text-2xl font-serif font-bold\">\n                  {filteredProducts.length} Product{filteredProducts.length !== 1 ? 's' : ''}\n                </h2>\n                <Select value={sortBy} onValueChange={(value) => setSortBy(value as typeof sortBy)}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue placeholder=\"Sort by\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"featured\">Featured</SelectItem>\n                    <SelectItem value=\"price-low\">Price: Low to High</SelectItem>\n                    <SelectItem value=\"price-high\">Price: High to Low</SelectItem>\n                    <SelectItem value=\"newest\">Newest First</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant={viewMode === \"grid\" ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setViewMode(\"grid\")}\n                  className={viewMode === \"grid\" ? 'bg-terracotta text-white' : ''}\n                >\n                  <Grid3X3 className=\"w-4 h-4\" />\n                </Button>\n                <Button\n                  variant={viewMode === \"list\" ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setViewMode(\"list\")}\n                  className={viewMode === \"list\" ? 'bg-terracotta text-white' : ''}\n                >\n                  <List className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n\n            {/* No Results Message */}\n            {filteredProducts.length === 0 && (\n              <div className=\"text-center py-16\">\n                <Package className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold mb-2\">No products found</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  Try adjusting your filters or search query\n                </p>\n                <Button onClick={clearAllFilters} className=\"bg-terracotta text-white\">\n                  Clear All Filters\n                </Button>\n              </div>\n            )}\n            \n            {/* Product Grid */}\n            <div className={`\n              grid gap-2 sm:gap-4 md:gap-6 transition-all duration-300\n              ${viewMode === \"grid\" ? \"grid-cols-1 min-[380px]:grid-cols-2 lg:grid-cols-3\" : \"grid-cols-1\"}\n            `}>\n              {filteredProducts.map((product, index) => (\n                <Card \n                  key={product._id}\n                  ref={(el) => productRefs.current[product._id] = el}\n                  className={`\n                    group cursor-pointer transition-all duration-300 hover:shadow-2xl hover:-translate-y-2 border-0 shadow-lg overflow-hidden\n                    ${animatingProducts.has(product._id) ? 'animate-pulse' : ''}\n                  `}\n                  style={{\n                    animationDelay: `${index * 0.1}s`,\n                    width: '93vw !important'\n                  }}\n                  onClick={() => setLocation(`/product/${product._id}`)}\n                  data-testid={`product-card-${product._id}`}\n                >\n                  {/* Product Image */}\n                  <div className=\"aspect-[4/3] sm:aspect-square overflow-hidden relative bg-gradient-to-br from-gray-100 to-gray-200\">\n                    <img \n                      src={getProductImageUrl(product, 0)}\n                      alt={product.Product_Name}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-all duration-500\"\n                      loading=\"lazy\"\n                      decoding=\"async\"\n                      onError={(e) => {\n                        // Fallback to colored placeholder if image fails to load\n                        const target = e.target as HTMLImageElement;\n                        target.style.display = 'none';\n                        const fallbackDiv = target.nextElementSibling as HTMLElement;\n                        if (fallbackDiv) {\n                          fallbackDiv.style.display = 'flex';\n                        }\n                      }}\n                    />\n                    <div \n                      className=\"w-full h-full flex items-center justify-center text-4xl font-serif font-bold text-gray-400 bg-gradient-to-br absolute inset-0 hidden\"\n                      style={{\n                        background: `linear-gradient(135deg, ${colorDisplay[product.Color] || '#6B7280'}20, ${colorDisplay[product.Color] || '#6B7280'}40)`\n                      }}\n                    >\n                      {product.Product_Name.charAt(0)}\n                    </div>\n                    \n                    {/* Collection Badge */}\n                    <div className=\"absolute top-3 left-3\">\n                      <Badge \n                        className=\"bg-terracotta text-white px-2 py-1 text-xs font-medium\"\n                      >\n                        {product.Collection}\n                      </Badge>\n                    </div>\n                    \n                    {/* Stock Status - Hidden */}\n                    {/* <div className=\"absolute top-3 right-3\">\n                      <Badge \n                        variant={product.Qty_in_Stock > 0 ? \"default\" : \"destructive\"}\n                        className=\"text-xs\"\n                      >\n                        {product.Qty_in_Stock > 0 ? `${product.Qty_in_Stock} in stock` : 'Out of stock'}\n                      </Badge>\n                    </div> */}\n\n                    {/* Quick Actions - Slide in on hover */}\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-end justify-center pb-4\">\n                      <div className=\"flex space-x-2\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"secondary\"\n                          className=\"rounded-full bg-white/90 text-black hover:bg-white shadow-lg backdrop-blur-sm\"\n                          onClick={(e) => handleToggleWishlist(product._id, e)}\n                        >\n                          <Heart \n                            className={`w-4 h-4 ${\n                              isInWishlist(product._id) \n                                ? 'fill-red-500 text-red-500' \n                                : 'text-gray-600'\n                            }`} \n                          />\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          className=\"rounded-full bg-terracotta text-white hover:bg-terracotta-dark shadow-lg\"\n                          onClick={(e) => addToCart(product._id, e)}\n                          disabled={product.Qty_in_Stock === 0}\n                        >\n                          <ShoppingCart className=\"w-4 h-4 mr-1\" />\n                          Add to Cart\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"secondary\"\n                          className=\"rounded-full bg-white/90 text-black hover:bg-white shadow-lg backdrop-blur-sm\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setLocation(`/product/${product._id}`);\n                          }}\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Product Details */}\n                  <CardContent className=\"p-2 sm:p-4 md:p-6\">\n                    <div className=\"mb-2 sm:mb-3\">\n                      <h3 className=\"font-serif text-sm sm:text-lg font-bold group-hover:text-terracotta transition-colors duration-200 mb-1 sm:mb-2 line-clamp-2\">\n                        {product.Product_Name}\n                      </h3>\n                      {/* Hide badges on mobile to save space */}\n                      <div className=\"hidden sm:flex flex-wrap gap-1 mb-3\">\n                        <Badge variant=\"outline\" className=\"text-xs px-1.5 py-0.5 h-5\">\n                          {product.Category}\n                        </Badge>\n                        {product.Sub_Category.slice(0, 1).map((subCat) => (\n                          <Badge key={subCat} variant=\"outline\" className=\"text-xs px-1.5 py-0.5 h-5\">\n                            {subCat}\n                          </Badge>\n                        ))}\n                      </div>\n                      {/* Very minimal details on mobile */}\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-1 sm:gap-2 text-xs sm:text-sm text-muted-foreground mb-2 sm:mb-3\">\n                        <div className=\"flex items-center\">\n                          <div \n                            className=\"w-2 h-2 sm:w-3 sm:h-3 rounded-full mr-1 sm:mr-2 border\"\n                            style={{ backgroundColor: colorDisplay[product.Color] || '#6B7280' }}\n                          />\n                          <span className=\"truncate\">{product.Color}</span>\n                        </div>\n                        <div className=\"hidden sm:block truncate\">{product.Size}</div>\n                      </div>\n                    </div>\n\n                    {/* Price */}\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base sm:text-xl md:text-2xl font-bold text-terracotta\">\n                          {formatPrice(product.Selling_Price)}\n                        </span>\n                        <span className=\"text-xs text-muted-foreground hidden sm:block\">\n                          {product.Net_Qty} piece set\n                        </span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n\n            {/* Product Count - Bottom */}\n            <div className=\"text-center mt-8 pt-6 border-t\">\n              <div className=\"text-sm text-muted-foreground\">\n                Showing {filteredProducts.length} of {products.length} products\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","size_bytes":43816},"client/src/components/Footer.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Instagram, Linkedin, Mail, Phone, MapPin } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { submitNewsletter } from \"@/lib/api\";\nimport smLogo from \"@assets/4_1758709631305.png\";\n\nexport function Footer() {\n  const [email, setEmail] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleNewsletterSubmit = async () => {\n    if (email && !isSubmitting) {\n      setIsSubmitting(true);\n      try {\n        await submitNewsletter({ email });\n        toast({\n          title: \"Successfully subscribed!\",\n          description: \"Thank you for subscribing to our newsletter. You'll receive the latest updates and exclusive coupons.\",\n        });\n        setEmail(\"\");\n      } catch (error) {\n        toast({\n          title: \"Subscription failed\",\n          description: \"Please try again later or contact support if the problem persists.\",\n          variant: \"destructive\",\n        });\n      } finally {\n        setIsSubmitting(false);\n      }\n    }\n  };\n\n  return (\n    <footer className=\"text-white py-16\" style={{ backgroundColor: 'rgb(88 35 8 / var(--tw-bg-opacity, 1))' }}>\n      <div className=\"container mx-auto px-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Main Footer Content */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12 mb-12\">\n            {/* Brand & About */}\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center space-x-3\">\n                {/* SM Furnishings Logo */}\n                <img \n                  src={smLogo} \n                  alt=\"SM Furnishings Logo\" \n                  className=\"w-16 h-16 sm:w-20 sm:h-20 object-contain\"\n                />\n                <h3 className=\"text-lg sm:text-2xl font-bold tracking-wider\" style={{ fontFamily: 'var(--font-quiche)' }} data-testid=\"footer-brand\">\n                  SM FURNISHINGS\n                </h3>\n              </div>\n              <p className=\"text-xs sm:text-base text-cream leading-relaxed\" data-testid=\"footer-description\">\n                SM Furnishings is more than a home décor brand — it's a family legacy. Inspired by Shakuntala & Manohar's values of love, comfort, and quality, we design luxury that feels personal, timeless, and affordable.\n              </p>\n              <div className=\"flex space-x-4\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"p-2 text-cream hover:text-white hover:bg-terracotta-dark transition-colors duration-200 rounded-full\"\n                  style={{ borderRadius: '3px' }}\n                  data-testid=\"footer-social-instagram\"\n                  onClick={() => window.open('https://www.instagram.com/sm_furnishings/', '_blank')}\n                >\n                  <Instagram className=\"w-5 h-5\" />\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"p-2 text-cream hover:text-white hover:bg-terracotta-dark transition-colors duration-200 rounded-full\"\n                  style={{ borderRadius: '3px' }}\n                  data-testid=\"footer-social-linkedin\"\n                  onClick={() => window.open('https://www.linkedin.com/company/sm-furnishings/', '_blank')}\n                >\n                  <Linkedin className=\"w-5 h-5\" />\n                </Button>\n              </div>\n            </div>\n\n            {/* Quick Links & Contact */}\n            <div className=\"lg:col-span-2 grid grid-cols-2 gap-4 md:gap-8\">\n              {/* Quick Links */}\n              <div className=\"space-y-6 ml-4 md:ml-8\">\n                <h4 className=\"font-semibold text-sm sm:text-lg\" data-testid=\"footer-links-title\">Quick Links</h4>\n                <ul className=\"space-y-3\">\n                  <li>\n                    <Link \n                      href=\"/\" \n                      className=\"text-xs sm:text-base text-cream hover:text-white transition-colors duration-200\"\n                      data-testid=\"footer-link-home\"\n                    >\n                      Home\n                    </Link>\n                  </li>\n                  <li>\n                    <Link \n                      href=\"/shop\" \n                      className=\"text-xs sm:text-base text-cream hover:text-white transition-colors duration-200\"\n                      data-testid=\"footer-link-shop\"\n                    >\n                      Shop\n                    </Link>\n                  </li>\n                  <li>\n                    <Link \n                      href=\"/about\" \n                      className=\"text-xs sm:text-base text-cream hover:text-white transition-colors duration-200\"\n                      data-testid=\"footer-link-about\"\n                    >\n                      About Us\n                    </Link>\n                  </li>\n                  <li>\n                    <Link \n                      href=\"/faqs\" \n                      className=\"text-xs sm:text-base text-cream hover:text-white transition-colors duration-200\"\n                      data-testid=\"footer-link-faqs\"\n                    >\n                      FAQs\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n\n              {/* Contact & Newsletter */}\n              <div className=\"space-y-6 text-center\">\n                <h4 className=\"font-semibold text-sm sm:text-lg\" data-testid=\"footer-contact-title\">Contact Us</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-center space-x-3 text-cream\">\n                    <Mail className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                    <span className=\"text-xs sm:text-base\" data-testid=\"footer-email\">Info@smfurnishings.com</span>\n                  </div>\n                  <div className=\"flex items-start justify-center space-x-3 text-cream\">\n                    <MapPin className=\"w-3 h-3 sm:w-4 sm:h-4 mt-1\" />\n                    <span className=\"text-xs sm:text-base text-center\" data-testid=\"footer-address\">\n                      233, Model Town, Tosham Road<br />\n                      Hisar, 125001\n                    </span>\n                  </div>\n                </div>\n\n                {/* Newsletter Section under Contact Us */}\n                <div className=\"space-y-4 pt-6 border-t border-cream-dark/30\">\n                  <h5 className=\"font-semibold text-sm sm:text-lg\">Newsletter</h5>\n                  <p className=\"font-medium text-xs sm:text-sm text-center text-cream\">Subscribe to our newsletter to receive the latest collections, special drops, and exclusive coupons.</p>\n                  <div className=\"flex flex-col space-y-2 items-center\">\n                    <Input\n                      type=\"email\"\n                      placeholder=\"Enter your email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      className=\"bg-cream text-foreground border-cream-dark placeholder:text-muted-foreground text-center w-full max-w-xs\"\n                      data-testid=\"footer-newsletter-input\"\n                    />\n                    <Button\n                      onClick={handleNewsletterSubmit}\n                      disabled={isSubmitting || !email.trim()}\n                      className=\"bg-cream text-terracotta hover:bg-cream-dark transition-colors duration-200 font-semibold disabled:opacity-50 disabled:cursor-not-allowed w-full max-w-xs\"\n                      data-testid=\"footer-newsletter-button\"\n                    >\n                      {isSubmitting ? 'Subscribing...' : 'Subscribe'}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <Separator className=\"bg-cream-dark opacity-30 mb-8\" />\n\n          {/* Bottom Footer */}\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <div className=\"text-cream text-xs sm:text-sm\" data-testid=\"footer-copyright\">\n              © 2025 SM Furnishings. All rights reserved.\n            </div>\n            <div className=\"flex space-x-6 text-xs sm:text-sm\">\n              <Link \n                href=\"/privacy\" \n                className=\"text-cream hover:text-white transition-colors duration-200\"\n                data-testid=\"footer-privacy\"\n              >\n                Privacy Policy\n              </Link>\n              <Link \n                href=\"/terms\" \n                className=\"text-cream hover:text-white transition-colors duration-200\"\n                data-testid=\"footer-terms\"\n              >\n                Terms of Service\n              </Link>\n              <Link \n                href=\"/returns\" \n                className=\"text-cream hover:text-white transition-colors duration-200\"\n                data-testid=\"footer-returns\"\n              >\n                Returns & Exchanges\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":9324},"client/src/components/ProductCard.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { HomeProduct } from \"@/data/products\";\nimport { useCart } from \"@/lib/cartContext\";\nimport { useAuth } from \"@/lib/authContext\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { ShoppingCart, Heart } from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface ProductCardProps {\n  product: HomeProduct;\n  variant: \"bestseller\" | \"luxury\";\n  testIdPrefix?: string;\n  showAddToCart?: boolean;\n}\n\nexport function ProductCard({ product, variant, testIdPrefix = \"product\", showAddToCart = true }: ProductCardProps) {\n  const { addToCart, getCartItemQuantity, isLoading } = useCart();\n  const { isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const [isAnimating, setIsAnimating] = useState(false);\n  \n  const cartQuantity = getCartItemQuantity(product.id.toString());\n  \n  // Extract numeric price from string (e.g., \"$899\" -> 899)\n  const extractPrice = (priceString: string): number => {\n    return parseInt(priceString.replace(/[^0-9]/g, '')) || 0;\n  };\n  \n  const handleAddToCart = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (!isAuthenticated) {\n      toast({\n        title: \"Please Login\",\n        description: \"You need to login to add items to your cart.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    try {\n      setIsAnimating(true);\n      // For now, we'll use the product ID as string since the backend expects string IDs\n      // In a real implementation, you'd need to map these to actual backend product IDs\n      await addToCart(product.id.toString(), 1);\n      \n      // Show success animation\n      setTimeout(() => setIsAnimating(false), 600);\n    } catch (error) {\n      setIsAnimating(false);\n      toast({\n        title: \"Error\",\n        description: \"Failed to add item to cart. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n  if (variant === \"luxury\") {\n    return (\n      <div \n        className=\"relative overflow-hidden shadow-[0px_4px_4px_rgba(0,0,0,0.25)] w-[300px] max-w-[80%] md:w-[220px] mx-auto md:mx-0\"\n        style={{\n          height: '280px',\n          background: '#FFF9EA',\n          borderRadius: '50px'\n        }}\n        data-testid={`${testIdPrefix}-card-${product.id}`}\n      >\n        <div className=\"absolute inset-0 overflow-hidden\" style={{ borderRadius: '50px' }}>\n          <img \n            src={product.image}\n            alt={product.alt}\n            className=\"w-full h-full object-cover\"\n            data-testid={`${testIdPrefix}-image-${product.id}`}\n          />\n          {/* Gradient overlay matching the CSS specification */}\n          <div \n            className=\"absolute inset-0\"\n            style={{\n              background: 'linear-gradient(206.76deg, rgba(255, 249, 234, 0) 10.24%, rgba(255, 249, 234, 0.0512821) 57.67%, rgba(255, 249, 234, 0.6) 72.26%, #FFF9EA 89.28%)',\n              borderRadius: '50px'\n            }}\n          ></div>\n        </div>\n        <div className=\"absolute bottom-1 left-6 right-6\">\n          <h4 \n            className=\"text-black text-left capitalize mb-2\"\n            style={{\n              fontFamily: 'Prata, serif',\n              fontWeight: 400,\n              fontSize: '18px',\n              lineHeight: '24px'\n            }}\n            data-testid={`${testIdPrefix}-name-${product.id}`}\n          >\n            {product.name}\n          </h4>\n          <p \n            className=\"text-black capitalize mb-2\"\n            style={{\n              fontFamily: 'Prata, serif',\n              fontWeight: 400,\n              fontSize: '14px',\n              lineHeight: '18px'\n            }}\n            data-testid={`${testIdPrefix}-price-${product.id}`}\n          >\n            {product.price}\n          </p>\n          {showAddToCart && (\n            <div className=\"flex items-center justify-between\">\n              <Button\n                size=\"sm\"\n                onClick={handleAddToCart}\n                disabled={isLoading}\n                className=\"bg-terracotta hover:bg-terracotta-dark text-white text-xs px-3 py-1 h-7 transition-all duration-200\"\n                data-testid={`${testIdPrefix}-add-to-cart-${product.id}`}\n              >\n                {isAnimating ? (\n                  <div className=\"flex items-center gap-1\">\n                    <div className=\"w-3 h-3 border border-white border-t-transparent rounded-full animate-spin\" />\n                    <span>Adding...</span>\n                  </div>\n                ) : cartQuantity > 0 ? (\n                  <div className=\"flex items-center gap-1\">\n                    <ShoppingCart className=\"w-3 h-3\" />\n                    <span>In Cart ({cartQuantity})</span>\n                  </div>\n                ) : (\n                  <div className=\"flex items-center gap-1\">\n                    <ShoppingCart className=\"w-3 h-3\" />\n                    <span>Add to Cart</span>\n                  </div>\n                )}\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                className=\"h-7 w-7 p-0 text-gray-600 hover:text-terracotta\"\n                data-testid={`${testIdPrefix}-wishlist-${product.id}`}\n              >\n                <Heart className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Default bestseller variant with new styling effects\n  return (\n    <div \n      className=\"relative overflow-hidden shadow-[0px_4px_4px_rgba(0,0,0,0.25)] w-[300px] max-w-[80%] md:w-[220px] mx-auto md:mx-0\"\n      style={{\n        height: '280px',\n        background: '#FFF9EA',\n        borderRadius: '50px'\n      }}\n      data-testid={`${testIdPrefix}-card-${product.id}`}\n    >\n      <div className=\"absolute inset-0 overflow-hidden\" style={{ borderRadius: '50px' }}>\n        <img \n          src={product.image}\n          alt={product.alt}\n          className=\"w-full h-full object-cover\"\n          data-testid={`${testIdPrefix}-image-${product.id}`}\n        />\n        {/* Gradient overlay matching the CSS specification */}\n        <div \n          className=\"absolute inset-0\"\n          style={{\n            background: 'linear-gradient(206.76deg, rgba(255, 249, 234, 0) 10.24%, rgba(255, 249, 234, 0.0512821) 57.67%, rgba(255, 249, 234, 0.6) 72.26%, #FFF9EA 89.28%)',\n            borderRadius: '50px'\n          }}\n        ></div>\n      </div>\n      <div className=\"absolute bottom-1 left-6 right-6\">\n        <h4 \n          className=\"text-black mb-1 text-left capitalize\"\n          style={{\n            fontFamily: 'Prata, serif',\n            fontWeight: 400,\n            fontSize: '18px',\n            lineHeight: '24px'\n          }}\n          data-testid={`${testIdPrefix}-name-${product.id}`}\n        >\n          {product.name}\n        </h4>\n        <p \n          className=\"text-black capitalize mb-2\"\n          style={{\n            fontFamily: 'Prata, serif',\n            fontWeight: 400,\n            fontSize: '14px',\n            lineHeight: '18px'\n          }}\n          data-testid={`${testIdPrefix}-price-${product.id}`}\n        >\n          {product.price}\n        </p>\n        {showAddToCart && (\n          <div className=\"flex items-center justify-between\">\n            <Button\n              size=\"sm\"\n              onClick={handleAddToCart}\n              disabled={isLoading}\n              className=\"bg-terracotta hover:bg-terracotta-dark text-white text-xs px-3 py-1 h-7 transition-all duration-200\"\n              data-testid={`${testIdPrefix}-add-to-cart-${product.id}`}\n            >\n              {isAnimating ? (\n                <div className=\"flex items-center gap-1\">\n                  <div className=\"w-3 h-3 border border-white border-t-transparent rounded-full animate-spin\" />\n                  <span>Adding...</span>\n                </div>\n              ) : cartQuantity > 0 ? (\n                <div className=\"flex items-center gap-1\">\n                  <ShoppingCart className=\"w-3 h-3\" />\n                  <span>In Cart ({cartQuantity})</span>\n                </div>\n              ) : (\n                <div className=\"flex items-center gap-1\">\n                  <ShoppingCart className=\"w-3 h-3\" />\n                  <span>Add to Cart</span>\n                </div>\n              )}\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-7 w-7 p-0 text-gray-600 hover:text-terracotta\"\n              data-testid={`${testIdPrefix}-wishlist-${product.id}`}\n            >\n              <Heart className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":8680},"client/src/data/products.ts":{"content":"// Import clean furniture images with no background using @assets alias\nimport premiumImg1 from \"@assets/1.png\";\nimport premiumImg2 from \"@assets/2.png\";\nimport premiumImg3 from \"@assets/3.png\";\nimport premiumImg4 from \"@assets/4.png\";\nimport premiumImg5 from \"@assets/5.png\";\n\n// Interface for home page products (simpler structure)\nexport interface HomeProduct {\n  id: number;\n  name: string;\n  price: string;\n  image: string;\n  alt: string;\n  category?: string;\n  badge?: string;\n}\n\n// Interface for shop page products (comprehensive structure)\nexport interface ShopProduct {\n  id: number;\n  name: string;\n  price: number;\n  originalPrice?: number;\n  images: string[];\n  category: string;\n  material: string;\n  color: string;\n  rating: number;\n  reviews: number;\n  inStock: boolean;\n  discount?: number;\n  badge?: string;\n}\n\n// Best Sellers dataset - maintains current home page styling\nexport const bestSellers: HomeProduct[] = [\n  {\n    id: 2,\n    name: \"Papasan Chair\",\n    price: \"$899\",\n    image: \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Cream papasan chair with rattan base\"\n  },\n  {\n    id: 3,\n    name: \"Modern Accent Chair\",\n    price: \"$649\",\n    image: \"https://images.unsplash.com/photo-1549497538-303791108f95?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Powder blue modern accent chair with wooden legs\"\n  },\n  {\n    id: 4,\n    name: \"Artisan Velvet Sofa\",\n    price: \"$3,499\",\n    image: \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Luxurious beige velvet sofa with brass legs\"\n  }\n];\n\n// Luxury Choice dataset - distinct high-end products\nexport const luxuryProducts: HomeProduct[] = [\n  {\n    id: 4,\n    name: \"Royal Throne Chair\",\n    price: \"$2,199\",\n    image: premiumImg4,\n    alt: \"Luxury red velvet throne chair with gold frame\",\n    category: \"Luxury\"\n  },\n  {\n    id: 5,\n    name: \"Artisan Velvet Sofa\",\n    price: \"$3,499\",\n    image: \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Luxurious beige velvet sofa with brass legs\"\n  },\n  {\n    id: 6,\n    name: \"Designer Ottoman Set\",\n    price: \"$1,299\",\n    image: \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Premium leather ottoman collection\"\n  }\n];\n\n// Premium Collection dataset - using clean background-free images\nexport const premiumProducts: HomeProduct[] = [\n  {\n    id: 7,\n    name: \"Modern Accent Chair\",\n    category: \"Seating\",\n    price: \"$899\",\n    image: premiumImg1,\n    alt: \"Modern accent chair with clean design\"\n  },\n  {\n    id: 8,\n    name: \"Classic Sofa\",\n    category: \"Seating\",\n    price: \"$1459\",\n    image: premiumImg2,\n    alt: \"Classic sofa with elegant styling\"\n  },\n  {\n    id: 9,\n    name: \"Comfort Chair\",\n    category: \"Seating\",\n    price: \"$629\",\n    image: premiumImg3,\n    alt: \"Comfortable chair with modern design\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    category: \"Luxury\",\n    price: \"$2199\",\n    image: premiumImg4,\n    alt: \"Luxury throne chair with premium finish\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    category: \"Tables\",\n    price: \"$899\",\n    image: premiumImg5,\n    alt: \"Vintage side table with ornate details\"\n  }\n];\n\n// Shop page products - comprehensive dataset combining all sources\nexport const shopProducts: ShopProduct[] = [\n  // From Best Sellers collection\n  {\n    id: 1,\n    name: \"Tufted Leather Sofa\",\n    price: 28000,\n    originalPrice: 35000,\n    images: [\n      \"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1556228453-efd6c1ff04f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Leather\",\n    color: \"Brown\",\n    rating: 4.8,\n    reviews: 124,\n    inStock: true,\n    discount: 20,\n    badge: \"BEST SELLER\"\n  },\n  {\n    id: 2,\n    name: \"Papasan Chair\",\n    price: 22000,\n    images: [\n      \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Rattan\",\n    color: \"Brown\",\n    rating: 4.7,\n    reviews: 89,\n    inStock: true,\n    badge: \"BEST SELLER\"\n  },\n  {\n    id: 3,\n    name: \"Modern Accent Chair\",\n    price: 16000,\n    originalPrice: 18000,\n    images: [\n      \"https://images.unsplash.com/photo-1549497538-303791108f95?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Fabric\",\n    color: \"Blue\",\n    rating: 4.6,\n    reviews: 156,\n    inStock: true,\n    discount: 11,\n    badge: \"BEST SELLER\"\n  },\n  // From Premium Collection with local assets\n  {\n    id: 7,\n    name: \"Modern Gray Accent Chair\",\n    price: 32000,\n    images: [premiumImg1],\n    category: \"Living Room\",\n    material: \"Fabric\",\n    color: \"Blue\",\n    rating: 4.8,\n    reviews: 92,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  {\n    id: 8,\n    name: \"Classic Brown Sofa\",\n    price: 52000,\n    images: [premiumImg2],\n    category: \"Living Room\",\n    material: \"Fabric\",\n    color: \"Brown\",\n    rating: 4.9,\n    reviews: 78,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  {\n    id: 9,\n    name: \"Comfort Dining Chair\",\n    price: 18000,\n    images: [premiumImg3],\n    category: \"Dining Room\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.7,\n    reviews: 143,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    price: 75000,\n    originalPrice: 85000,\n    images: [premiumImg4],\n    category: \"Living Room\",\n    material: \"Velvet\",\n    color: \"Red\",\n    rating: 5.0,\n    reviews: 34,\n    inStock: true,\n    discount: 12,\n    badge: \"LUXURY\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    price: 28000,\n    images: [premiumImg5],\n    category: \"Living Room\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.8,\n    reviews: 67,\n    inStock: true,\n    badge: \"PREMIUM\"\n  },\n  // From Luxury Collection\n  {\n    id: 4,\n    name: \"Artisan Velvet Sofa\",\n    price: 95000,\n    originalPrice: 110000,\n    images: [\n      \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Velvet\",\n    color: \"Brown\",\n    rating: 4.9,\n    reviews: 45,\n    inStock: true,\n    discount: 14,\n    badge: \"LUXURY\"\n  },\n  {\n    id: 6,\n    name: \"Designer Ottoman Set\",\n    price: 35000,\n    images: [\n      \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1505693416388-ac5ce068fe85?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Living Room\",\n    material: \"Leather\",\n    color: \"Black\",\n    rating: 4.8,\n    reviews: 56,\n    inStock: true,\n    badge: \"LUXURY\"\n  },\n  // Additional shop-specific products\n  {\n    id: 12,\n    name: \"Elegant Dining Table\",\n    price: 45000,\n    images: [\n      \"https://images.unsplash.com/photo-1449247709967-d4461a6a6103?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Dining Room\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.6,\n    reviews: 89,\n    inStock: true\n  },\n  {\n    id: 13,\n    name: \"Comfortable Office Chair\",\n    price: 15000,\n    originalPrice: 18000,\n    images: [\n      \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1581539250439-c96689b516dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Office\",\n    material: \"Leather\",\n    color: \"Black\",\n    rating: 4.9,\n    reviews: 156,\n    inStock: false,\n    discount: 17,\n    badge: \"OUT OF STOCK\"\n  },\n  {\n    id: 14,\n    name: \"Luxury King Bed\",\n    price: 55000,\n    images: [\n      \"https://images.unsplash.com/photo-1505693416388-ac5ce068fe85?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n      \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n    ],\n    category: \"Bedroom\",\n    material: \"Wood\",\n    color: \"Brown\",\n    rating: 4.7,\n    reviews: 67,\n    inStock: true,\n    badge: \"PREMIUM\"\n  }\n];\n\n// Premium Collection Tab Datasets for Interactive Tabs\n\n// ALL COLLECTION - Mixed furniture items (4 products)\nexport const premiumAll: HomeProduct[] = [\n  {\n    id: 7,\n    name: \"Modern Accent Chair\",\n    category: \"Seating\",\n    price: \"$899\",\n    image: premiumImg1,\n    alt: \"Modern accent chair with clean design\"\n  },\n  {\n    id: 8,\n    name: \"Classic Sofa\",\n    category: \"Seating\",\n    price: \"$1,459\",\n    image: premiumImg2,\n    alt: \"Classic sofa with elegant styling\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    category: \"Tables\",\n    price: \"$899\",\n    image: premiumImg5,\n    alt: \"Vintage side table with ornate details\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    category: \"Luxury\",\n    price: \"$2,199\",\n    image: premiumImg4,\n    alt: \"Luxury throne chair with premium finish\"\n  }\n];\n\n// BEST SELLER - Top-selling products with badges (4 products)\nexport const premiumBestSellers: HomeProduct[] = [\n  {\n    id: 1,\n    name: \"Tufted Leather Sofa\",\n    price: \"$2,499\",\n    image: \"https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Burnt orange tufted leather sofa\",\n    badge: \"BESTSELLER\"\n  },\n  {\n    id: 8,\n    name: \"Classic Sofa\",\n    category: \"Seating\",\n    price: \"$1,459\",\n    image: premiumImg2,\n    alt: \"Classic sofa with elegant styling\",\n    badge: \"20% OFF\"\n  },\n  {\n    id: 2,\n    name: \"Papasan Chair\",\n    price: \"$899\",\n    image: \"https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Cream papasan chair with rattan base\",\n    badge: \"BESTSELLER\"\n  },\n  {\n    id: 10,\n    name: \"Royal Throne Chair\",\n    category: \"Luxury\",\n    price: \"$2,199\",\n    image: premiumImg4,\n    alt: \"Luxury throne chair with premium finish\",\n    badge: \"15% OFF\"\n  }\n];\n\n// NEW ARRIVALS - Newest products with NEW badges (4 products)\nexport const premiumNewArrivals: HomeProduct[] = [\n  {\n    id: 9,\n    name: \"Comfort Chair\",\n    category: \"Seating\",\n    price: \"$629\",\n    image: premiumImg3,\n    alt: \"Comfortable chair with modern design\",\n    badge: \"NEW\"\n  },\n  {\n    id: 11,\n    name: \"Vintage Side Table\",\n    category: \"Tables\",\n    price: \"$899\",\n    image: premiumImg5,\n    alt: \"Vintage side table with ornate details\",\n    badge: \"NEW\"\n  },\n  {\n    id: 3,\n    name: \"Modern Accent Chair\",\n    price: \"$649\",\n    image: \"https://images.unsplash.com/photo-1549497538-303791108f95?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Powder blue modern accent chair with wooden legs\",\n    badge: \"NEW\"\n  },\n  {\n    id: 7,\n    name: \"Designer Accent Chair\",\n    category: \"Seating\",\n    price: \"$899\",\n    image: premiumImg1,\n    alt: \"Modern accent chair with clean design\",\n    badge: \"NEW\"\n  }\n];\n\n// Collection data for home page luxury section\nexport const collections = [\n  {\n    id: 1,\n    title: \"Contemporary Living Collection\",\n    description: \"Discover our signature collection of contemporary furniture designed for modern living. Each piece is meticulously crafted to blend comfort with sophistication, creating spaces that inspire and delight. From plush sofas to elegant dining sets, our collection embodies the perfect balance of luxury and livability.\",\n    image: \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Contemporary living room with beige sofa\",\n    buttonText: \"View Collection\",\n    imagePosition: \"right\" as const\n  },\n  {\n    id: 2,\n    title: \"Bedroom Sanctuary Series\",\n    description: \"Transform your bedroom into a personal retreat with our Sanctuary Series. Featuring handcrafted bed frames, luxurious textiles, and thoughtfully designed storage solutions, this collection creates a harmonious environment where rest and relaxation take center stage.\",\n    image: \"https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Minimalist bedroom with neutral decor\",\n    buttonText: \"Explore Bedrooms\",\n    imagePosition: \"left\" as const\n  },\n  {\n    id: 3,\n    title: \"Artisan Dining Collection\",\n    description: \"Elevate your dining experience with our Artisan Collection. Each table, chair, and accent piece is crafted by skilled artisans who understand that dining is about more than just meals—it's about creating memories. Our pieces bring family and friends together in spaces that celebrate both form and function.\",\n    image: \"https://images.unsplash.com/photo-1449247709967-d4461a6a6103?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Modern dining room with wooden table\",\n    buttonText: \"Shop Dining\",\n    imagePosition: \"right\" as const\n  }\n];","size_bytes":13746},"client/src/components/PremiumTabs.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { HomeProduct, premiumAll, premiumBestSellers, premiumNewArrivals } from \"@/data/products\";\n\ntype TabType = 'all' | 'best' | 'new';\n\ninterface TabData {\n  id: TabType;\n  label: string;\n  products: HomeProduct[];\n}\n\nconst tabs: TabData[] = [\n  { id: 'all', label: 'ALL COLLECTION', products: premiumAll },\n  { id: 'best', label: 'BEST SELLER', products: premiumBestSellers },\n  { id: 'new', label: 'NEW ARRIVALS', products: premiumNewArrivals }\n];\n\nexport function PremiumTabs() {\n  const [activeTab, setActiveTab] = useState<TabType>('all');\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentProducts, setCurrentProducts] = useState<HomeProduct[]>(premiumAll);\n\n  const handleTabChange = (tabId: TabType) => {\n    if (tabId === activeTab) return;\n    \n    setIsLoading(true);\n    \n    // Fade out animation delay\n    setTimeout(() => {\n      const newProducts = tabs.find(tab => tab.id === tabId)?.products || [];\n      setCurrentProducts(newProducts);\n      setActiveTab(tabId);\n      \n      // Brief loading state, then fade in\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 200);\n    }, 300);\n  };\n\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"container mx-auto px-6\">\n        {/* Section Header with Decorative Lines */}\n        <div className=\"text-center mb-16\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"flex-1 h-px bg-foreground opacity-30\"></div>\n            <h3 \n              className=\"text-3xl md:text-4xl font-bold mx-8 text-foreground tracking-wider\"\n              style={{ fontFamily: \"'Prata', serif\" }}\n            >\n              PREMIUM COLLECTIONS\n            </h3>\n            <div className=\"flex-1 h-px bg-foreground opacity-30\"></div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex justify-center mb-12\">\n          <div className=\"relative flex space-x-12\" role=\"tablist\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                role=\"tab\"\n                aria-selected={activeTab === tab.id}\n                aria-controls={`tabpanel-${tab.id}`}\n                className={`relative pb-2 font-medium tracking-wide transition-colors duration-300 ${\n                  activeTab === tab.id \n                    ? 'text-terracotta' \n                    : 'text-foreground hover:text-terracotta/70'\n                }`}\n                style={{ fontFamily: \"'Sk-Modernist', sans-serif\" }}\n                onClick={() => handleTabChange(tab.id)}\n                data-testid={`tab-${tab.id}`}\n              >\n                {tab.label}\n                \n                {/* Animated Underline */}\n                {activeTab === tab.id && (\n                  <div \n                    className=\"absolute bottom-0 left-0 w-full h-0.5 bg-terracotta transform origin-center animate-underline\"\n                    style={{\n                      animation: 'slideInFromCenter 0.3s ease-out'\n                    }}\n                  />\n                )}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Products Grid */}\n        <div className=\"max-w-5xl mx-auto\">\n          <div \n            role=\"tabpanel\" \n            id={`tabpanel-${activeTab}`}\n            className={`grid grid-cols-2 md:grid-cols-4 gap-6 transition-all duration-500 ${\n              isLoading ? 'opacity-0 translate-y-4' : 'opacity-100 translate-y-0'\n            }`}\n            data-testid=\"premium-grid\"\n          >\n            {isLoading ? (\n              // Skeleton Loading Cards\n              Array.from({ length: 4 }).map((_, index) => (\n                <div \n                  key={`skeleton-${index}`}\n                  className=\"bg-cream rounded-2xl p-6 aspect-square animate-pulse\"\n                  data-testid={`skeleton-card-${index}`}\n                >\n                  <div className=\"w-full h-3/4 bg-gray-200 rounded-lg mb-4\"></div>\n                  <div className=\"space-y-2\">\n                    <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-1/3\"></div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              // Product Cards\n              currentProducts.map((product, index) => (\n                <div\n                  key={product.id}\n                  className=\"group cursor-pointer transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg\"\n                  style={{\n                    animationDelay: `${index * 100}ms`\n                  }}\n                  data-testid={`card-product-${product.id}`}\n                >\n                  {/* Image Box */}\n                  <div \n                    className=\"rounded-2xl p-6 aspect-square flex items-center justify-center relative overflow-hidden mb-3\"\n                    style={{\n                      background: 'linear-gradient(180deg, rgba(255, 252, 233, 0.61) 0%, rgba(238, 217, 204, 0.61) 44.71%, rgba(220, 177, 150, 0.61) 76.44%, rgba(175, 76, 15, 0.3782) 100%)',\n                      borderRadius: '24px'\n                    }}\n                  >\n                    {/* Product Badge */}\n                    {product.badge && (\n                      <div className={`absolute top-3 right-3 px-2 py-1 rounded-full text-xs font-bold tracking-wide text-white z-10 ${\n                        product.badge === 'BESTSELLER' \n                          ? 'bg-terracotta animate-pulse' \n                          : product.badge === 'NEW'\n                          ? 'bg-green-600'\n                          : 'bg-orange-500'\n                      }`}>\n                        {product.badge}\n                      </div>\n                    )}\n                    \n                    {/* Product Image */}\n                    <img \n                      src={product.image}\n                      alt={product.alt}\n                      className=\"max-w-full max-h-full object-contain group-hover:scale-105 transition-transform duration-300\"\n                    />\n                  </div>\n                  \n                  {/* Product Info - Now outside the box */}\n                  <div className=\"text-center space-y-1\">\n                    <p \n                      className=\"text-xs font-medium text-muted-foreground uppercase tracking-wide\"\n                      style={{ fontFamily: \"'Lexend Deca', sans-serif\" }}\n                    >\n                      {product.category || 'CATEGORY'}\n                    </p>\n                    <h4 \n                      className=\"font-bold text-sm text-foreground\"\n                      style={{ fontFamily: \"'Lexend Deca', sans-serif\" }}\n                    >\n                      {product.name}\n                    </h4>\n                    <p \n                      className=\"font-bold text-terracotta\"\n                      style={{ fontFamily: \"'Sk-Modernist', sans-serif\" }}\n                    >\n                      {product.price}\n                    </p>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Explore Shop Button */}\n        <div className=\"text-center mt-12\">\n          <Link href=\"/shop\">\n            <Button \n              variant=\"outline\"\n              className=\"px-16 py-3 font-medium tracking-wide border-2 border-foreground text-foreground hover:bg-foreground hover:text-background transition-all duration-300\"\n              data-testid=\"explore-shop-button\"\n            >\n              Explore Shop\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7909},"client/src/components/ServiceFeaturesBar.tsx":{"content":"import React from 'react';\nimport { Globe, Wallet, Headphones } from 'lucide-react';\n\ninterface Feature {\n  id: number;\n  icon: React.ComponentType<{ className?: string }>;\n  title: string;\n  description: string;\n}\n\nconst features: Feature[] = [\n  {\n    id: 1,\n    icon: Globe,\n    title: \"Free Delivery\",\n    description: \"On orders above ₹3,000\"\n  },\n  {\n    id: 2,\n    icon: Wallet,\n    title: \"Affordable prices\",\n    description: \"Affordable luxury pricing\"\n  },\n  {\n    id: 3,\n    icon: Headphones,\n    title: \"Easy Returns\",\n    description: \"7-day return policy\"\n  }\n];\n\nexport function ServiceFeaturesBar() {\n  return (\n    <section \n      className=\"w-full h-[140px] sm:h-[120px]\"\n      style={{ \n        backgroundColor: '#D4A39C'\n      }}\n      aria-label=\"Service Features\"\n      role=\"region\"\n    >\n      <div className=\"container mx-auto px-6 h-full\">\n        <div className=\"grid grid-cols-3 md:divide-x divide-white/20 h-full\">\n          {features.map((feature) => {\n            const IconComponent = feature.icon;\n            return (\n              <div \n                key={feature.id}\n                className=\"w-full h-full flex flex-col items-center justify-center text-center text-white px-4\"\n                data-testid={`feature-${feature.id}`}\n              >\n                {/* Icon */}\n                <div className=\"mb-2\">\n                  <IconComponent \n                    className=\"w-8 h-8 text-white\" \n                  />\n                </div>\n                \n                {/* Feature Title */}\n                <h4 className=\"font-semibold text-sm sm:text-base mb-1\" data-testid={`feature-title-${feature.id}`}>\n                  {feature.title}\n                </h4>\n                \n                {/* Feature Description */}\n                <p \n                  className=\"text-xs sm:text-xs opacity-90 leading-relaxed\"\n                  data-testid={`feature-description-${feature.id}`}\n                >\n                  {feature.description}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":2119},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages (tsx dependency missing)\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool\n[x] 4. Remove conflicting local authentication code and PostgreSQL database\n[x] 5. Fix CORS issues by replacing credentials: \"include\" with proper JWT authentication\n[x] 6. Ensure all authentication flows use external API at sm-furnishing-backend.onrender.com\n[x] 7. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool\n[x] 8. Fixed \"Let's stay in touch\" section styling issues as requested by user\n[x] 9. Removed email input underline and separator line, moved Premium collection text outside image boxes\n[x] 10. Restored email input underline and updated newsletter section background with custom image\n[x] 11. Fixed newsletter background image visibility issue by properly importing the asset\n[x] 12. Reduced the size of the D-shaped figure in the \"Order In Bulk\" section as requested by user\n[x] 13. Fixed the shape design to be curved only at top-left corner (331px radius) with straight bottom, matching user's exact CSS specifications\n[x] 14. Reduced the figure size in Order In Bulk section from 585×765px to 380×490px (35% reduction) while maintaining proportions\n[x] 15. Changed entire homepage background color from cream to pure white (#FFFFFF) as requested\n[x] 16. Reduced form size in Order In Bulk section (smaller padding, spacing, and input heights)\n[x] 17. Center-aligned form and figure in Order In Bulk section with equal 50/50 grid layout and tighter spacing\n[x] 18. Fixed Premium Collection section background color to white (was missed in previous background color fix)\n[x] 19. Created new animated Testimonials section with marquee background and static testimonial cards\n[x] 20. Positioned Testimonials section between Order In Bulk and Let's Stay In Touch sections\n[x] 21. Implemented seamless marquee animations, proper z-index layering, and accessibility improvements\n[x] 22. Updated Testimonials section: removed subtitle text, reduced to 3 cards only, and arranged in zigzag pattern (top-middle-top)\n[x] 23. Removed \"What Our Customers Say\" title and reduced section white space by changing padding from py-20 to py-8\n[x] 24. Rearranged home page sections to correct sequence: Testimonials → Stay in touch → Order in bulk\n[x] 25. Fixed background marquee lines positioning to start from top of section (0px) with even 100px spacing between rows\n[x] 26. Updated Premium Collections fonts: PREMIUM COLLECTIONS (Prata), tabs (Sk-Modernist), categories/product names (Lexend Deca), prices (Sk-Modernist) and added gradient background to product boxes\n[x] 27. Removed emojis (🎉⏰🛍️) from Flash Sale section and updated \"affordably\" font to Mistrully\n[x] 28. Reverted \"affordably\" font back to Dancing Script and moved it up using marginTop: -1rem\n[x] 29. Implementing API integrations for Order in Bulk form and newsletter subscriptions\n[x] 30. Migration to Replit environment completed successfully - project running without errors\n[x] 31. Starting shopping cart feature implementation with JWT authentication and external API integration\n[x] 32. Fixed Razorpay payment gateway configuration by updating server to use environment variables instead of hardcoded keys\n[x] 33. Created .env.example template file for proper environment variable configuration\n[x] 34. Cleaned up and simplified order JSON structure - removed redundant data, added product_id to items, kept only essential e-commerce information\n[x] 35. Implemented COD (Cash on Delivery) payment with same JSON format as Razorpay - includes all order details, customer info, and payment method\n[x] 36. Removed unwanted \"cart cleared\" notification for both COD and Razorpay payments - users now see proper order confirmation messages\n[x] 37. Hidden \"SHOP BY CATEGORY\" and \"Flash Sale\" sections from homepage as requested by user\n[x] 38. Removed testimonial section from homepage as requested by user\n[x] 39. Centered icons and descriptions in service features section (Free Shipping, Flexible Prices, 24x7 Support) within their partition boxes\n[x] 40. Removed hover effects from \"Explore More\" and \"EXPLORE LUXURY\" buttons in BEST SELLERS and LUXURY CHOICE sections\n[x] 41. Left-aligned \"Order In Bulk\" section header text and increased image size from 380x490px to 450x580px\n[x] 42. Removed \"Add to Cart\" functionality from product images in BEST SELLERS and LUXURY CHOICE sections\n[x] 43. Added navigation to \"Explore Shop\" button in PREMIUM COLLECTIONS section to go to shop page\n[x] 44. Restored price display in LUXURY CHOICE section product cards\n[x] 45. Changed footer background color to rgb(88 35 8 / var(--tw-bg-opacity, 1))\n[x] 46. Added navigation to \"Explore More\" button in BEST SELLERS section to redirect to shop page\n[x] 47. Added navigation to \"EXPLORE LUXURY\" button in LUXURY CHOICE section to redirect to shop page\n[x] 48. Removed \"Best Furniture Retailer 2024\", \"Sustainability Excellence\", and \"Customer Choice Award\" from About Us page \"What Makes Us Different\" section\n[x] 49. Fixed button redirects in About Us page: \"Shop Now\" button now redirects to shop page, \"Join Our Journey\" button configured for external redirect\n[x] 50. Fixed TypeScript errors in About Us page by cleaning up unused imports and removing orphaned code references\n[x] 51. Added user ID, username, and email display to checkout page and included in downloaded JSON files for both COD and Razorpay payments\n[x] 52. Updated JSON file MIME type to 'application/json' for proper file handling\n[x] 53. Migration from Replit Agent to Replit environment completed successfully\n[x] 54. Fixed gradient background placement: moved linear gradient from \"Designing Luxury affordably\" section to hero section (including navigation bar area) and applied solid #582308 background to \"Designing Luxury affordably\" section\n[x] 55. Updated font styles: SM Furnishing to \"Fiona\", navigation links (Home/Shop/About Us) to \"Prata\", \"AFFORDABLE · LUXURY\" to \"Prata\"; styled Explore button with rgba(255,255,255,0.47) background and 9px white border; expanded \"LET'S STAY IN TOUCH\" section to 80% page width\n[x] 56. Updated \"LET'S STAY IN TOUCH\" font sizing to clamp(0.75rem, 5.5vw, 10rem) and line-height to clamp(2rem, 7vw, 8.25rem); removed hover effects and clickable functionality from bestseller and luxury choice product images\n[x] 57. Footer updates: changed \"SM Furnishing\" font to \"Fiona\", added small logo to left of brand name, made all social media icons circular with 3px border radius; Navigation rearrangement: moved profile and search to left side, cart and wishlist to right side\n[x] 58. Updated hero section background image: replaced stock furniture image with new breakfast in bed concept image (delicious-breakfast-bed-concept_1758535580577.jpg)\n[x] 59. Newsletter section: shifted email input and subscribe button to the right side instead of center alignment; Order in Bulk section: updated image with minimal linen cushion covers on sofa (minimal-linen-cushion-covers-sofa_1758535928415.jpg)\n[x] 60. FAQ page improvements: added automatic scroll to top when page loads, reduced large gap above FAQ title (changed from pt-32 to pt-8), and implemented floating \"scroll to top\" button that appears when users scroll down\n[x] 61. Footer logo update: replaced placeholder \"SM\" text with actual SM Furnishings logo (2_1758536426953.png) - now displays the beautiful orange/terracotta colored logo alongside the brand name\n[x] 62. UI/UX improvements based on user feedback: centered newsletter subscription, removed Facebook/Twitter icons, changed navigation to sentence case (Home, Shop, About)\n[x] 63. Hero section improvement: removed dot between \"Affordable\" and \"Luxury\" text for cleaner look\n[x] 64. Checkout page enhancements: removed debit card payment option, confirmed coupon functionality exists, cleaned up payment method types\n[x] 65. Razorpay production readiness: configured to use environment variables for seamless test/production mode switching via .env file\n[x] 66. Code cleanup: removed unused Facebook/Twitter imports from Footer component for better performance\n[x] 67. Fixed shop page scrolling behavior: filters and products now have independent scrolling areas with proper overflow handling and scroll-chain prevention (corrected implementation with proper flex layout and scroll container)\n[x] 68. Added hidden scrollbar functionality: scrollbar is now invisible in filter area while maintaining full scrolling capability\n[x] 69. Updated shop page hero section: changed title to \"COMPLETE YOUR SPACE\", updated description to focus on entire furnishings world, and added beautiful bed arrangements background image (fixed image import)\n[x] 70. Fixed shop page product images: replaced colored letter placeholders with actual image tags using getProductImageUrl function, added proper fallback system and hover effects","size_bytes":9003},"client/src/components/Header.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { User, ShoppingBag, Menu, X, Minus, Plus, Heart, LogOut } from \"lucide-react\";\nimport { useCart } from \"@/lib/cartContext\";\nimport { useWishlist } from \"@/lib/wishlistContext\";\nimport { useAuth } from \"@/lib/authContext\";\nimport { Dialog, DialogContent, DialogTitle } from \"@/components/ui/dialog\";\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from \"@/components/ui/alert-dialog\";\nimport { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuSeparator, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { useState } from \"react\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\n\ninterface HeaderProps {\n  className?: string;\n  variant?: \"transparent\" | \"solid\";\n}\n\nexport function Header({ className = \"absolute top-0 left-0 right-0 z-50 bg-transparent\", variant = \"transparent\" }: HeaderProps) {\n  const { cartCount, isCartOpen, setIsCartOpen, cart, cartItems, updateQuantity, removeFromCart, clearCart, isLoading } = useCart();\n  const { wishlistCount, setIsWishlistOpen, toggleWishlist } = useWishlist();\n  const { user, isAuthenticated, logout } = useAuth();\n  const { toast } = useToast();\n  const [, setLocation] = useLocation();\n  const isMobile = useIsMobile();\n  \n  // Mobile menu state\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  \n  // Cart removal confirmation state\n  const [showRemoveDialog, setShowRemoveDialog] = useState(false);\n  const [itemToRemove, setItemToRemove] = useState<{productId: string, productName: string} | null>(null);\n  \n  // Search functionality removed as requested\n\n  const getTotalPrice = () => {\n    if (!cart) return 0;\n    return cart.totalAmount;\n  };\n\n  const handleCheckout = () => {\n    setIsCartOpen(false);\n    setLocation('/checkout');\n  };\n\n  const handleContinueShopping = () => {\n    setIsCartOpen(false);\n    setLocation('/shop');\n  };\n  \n  const handleRemoveClick = (productId: string, productName: string) => {\n    setItemToRemove({ productId, productName });\n    setShowRemoveDialog(true);\n  };\n  \n  const handleConfirmRemove = () => {\n    if (itemToRemove) {\n      removeFromCart(itemToRemove.productId);\n      setShowRemoveDialog(false);\n      setItemToRemove(null);\n    }\n  };\n  \n  const handleMoveToWishlist = async () => {\n    if (itemToRemove) {\n      await toggleWishlist(itemToRemove.productId);\n      await removeFromCart(itemToRemove.productId);\n      setShowRemoveDialog(false);\n      setItemToRemove(null);\n      toast({\n        title: \"Moved to wishlist\",\n        description: `${itemToRemove.productName} has been moved to your wishlist`,\n      });\n    }\n  };\n  \n  // Search functionality removed as requested\n\n  return (\n    <>\n      <header className={className}>\n        {/* Desktop Layout */}\n        <div className=\"hidden md:block\">\n          <div className=\"container mx-auto px-6 py-6\">\n            {/* Brand Name */}\n            <div className=\"text-center mb-6\">\n              <Link href=\"/\">\n                <h1 className={`text-3xl md:text-4xl font-bold tracking-wider cursor-pointer transition-colors duration-200 ${\n                  variant === \"solid\" \n                    ? \"text-foreground hover:text-terracotta\" \n                    : \"text-white hover:text-cream\"\n                }`} style={{ fontFamily: 'var(--font-quiche)' }} data-testid=\"brand-logo\">\n                  SM FURNISHINGS\n                </h1>\n              </Link>\n            </div>\n            \n            {/* Top horizontal line - 80% of page width */}\n            <div className={`w-4/5 h-px mb-3 mx-auto ${\n              variant === \"solid\" ? \"bg-foreground/20\" : \"bg-white/30\"\n            }`}></div>\n            \n            {/* Navigation Container */}\n            <div className=\"w-full max-w-4xl mx-auto\">\n              {/* Navigation section - between lines */}\n              <div className=\"relative flex items-center justify-center py-2\">\n                {/* Main Navigation - Center */}\n                <nav className=\"flex\">\n                  <ul className={`flex space-x-12 font-medium ${\n                    variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n                  }`} style={{ fontFamily: '\"Prata\", serif' }}>\n                    <li><Link href=\"/\" className={`transition-colors duration-200 ${\n                      variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                    }`} data-testid=\"nav-home\">Home</Link></li>\n                    <li><Link href=\"/shop\" className={`transition-colors duration-200 ${\n                      variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                    }`} data-testid=\"nav-shop\">Shop</Link></li>\n                    <li><Link href=\"/about\" className={`transition-colors duration-200 ${\n                      variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                    }`} data-testid=\"nav-about\">About</Link></li>\n                  </ul>\n                </nav>\n                \n                {/* Left side - Profile and Search buttons */}\n                <div className={`absolute left-0 flex items-center space-x-6 ${\n                  variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n                }`}>\n                  {isAuthenticated ? (\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <button \n                          className={`transition-colors duration-200 ${\n                            variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                          }`} \n                          data-testid=\"button-account\"\n                          aria-label=\"Account menu\"\n                        >\n                          <User className=\"w-5 h-5\" />\n                        </button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"start\" className=\"w-56\">\n                        <div className=\"px-2 py-1.5\">\n                          <p className=\"text-sm font-medium\">{user?.name}</p>\n                          <p className=\"text-xs text-muted-foreground\">{user?.email}</p>\n                        </div>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem asChild>\n                          <Link href=\"/profile\" className=\"w-full cursor-pointer\">\n                            <User className=\"w-4 h-4 mr-2\" />\n                            My Profile\n                          </Link>\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem \n                          onClick={logout} \n                          className=\"text-red-600 cursor-pointer\"\n                        >\n                          <LogOut className=\"w-4 h-4 mr-2\" />\n                          Sign Out\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  ) : (\n                    <Link href=\"/login\">\n                      <button \n                        className={`transition-colors duration-200 ${\n                          variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                        }`} \n                        data-testid=\"button-account\"\n                        aria-label=\"Login\"\n                      >\n                        <User className=\"w-5 h-5\" />\n                      </button>\n                    </Link>\n                  )}\n                  {/* Search button hidden as requested */}\n                </div>\n                \n                {/* Right side - Cart and Wishlist buttons */}\n                <div className={`absolute right-0 flex items-center space-x-6 ${\n                  variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n                }`}>\n                  <button \n                    className={`relative transition-colors duration-200 ${\n                      variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                    }`}\n                    data-testid=\"button-cart\"\n                    onClick={() => setIsCartOpen(true)}\n                    aria-label={`Shopping cart${cartCount > 0 ? ` (${cartCount} items)` : ''}`}\n                  >\n                    <ShoppingBag className=\"w-5 h-5\" />\n                    {cartCount > 0 && (\n                      <span className=\"absolute -top-2 -right-2 bg-terracotta text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\" data-testid=\"cart-count\">\n                        {cartCount}\n                      </span>\n                    )}\n                  </button>\n                  <button \n                    className={`relative transition-colors duration-200 ${\n                      variant === \"solid\" ? \"hover:text-terracotta\" : \"hover:text-cream\"\n                    }`} \n                    data-testid=\"button-wishlist\"\n                    onClick={() => setIsWishlistOpen(true)}\n                    aria-label={`Wishlist${wishlistCount > 0 ? ` (${wishlistCount} items)` : ''}`}\n                  >\n                    <Heart className=\"w-5 h-5\" />\n                    {wishlistCount > 0 && (\n                      <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\" data-testid=\"wishlist-count\">\n                        {wishlistCount}\n                      </span>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            {/* Bottom horizontal line - 80% of page width */}\n            <div className={`w-4/5 h-px mt-3 mx-auto ${\n              variant === \"solid\" ? \"bg-foreground/20\" : \"bg-white/30\"\n            }`}></div>\n          </div>\n        </div>\n\n        {/* Mobile Layout */}\n        <div className=\"md:hidden\">\n          <div className=\"px-4 py-3\">\n            {/* Brand Name - Centered */}\n            <div className=\"text-center mb-3\">\n              <Link href=\"/\">\n                <h1 className={`text-lg font-bold tracking-wider cursor-pointer transition-colors duration-200 ${\n                  variant === \"solid\" \n                    ? \"text-foreground hover:text-terracotta\" \n                    : \"text-white hover:text-cream\"\n                }`} style={{ fontFamily: 'var(--font-quiche)' }} data-testid=\"brand-logo-mobile\">\n                  SM FURNISHINGS\n                </h1>\n              </Link>\n            </div>\n            \n            {/* Mobile Navigation Bar */}\n            <div className=\"flex items-center justify-between\">\n              {/* Left side - Profile and Cart */}\n              <div className={`flex items-center space-x-4 ${\n                variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n              }`}>\n                {isAuthenticated ? (\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <button \n                        className={`w-11 h-11 flex items-center justify-center rounded-md active:scale-95 transition-all duration-200 ${\n                          variant === \"solid\" ? \"hover:text-terracotta hover:bg-terracotta/10\" : \"hover:text-cream hover:bg-white/10\"\n                        }`} \n                        data-testid=\"button-account-mobile\"\n                        aria-label=\"Account menu\"\n                      >\n                        <User className=\"w-5 h-5\" />\n                      </button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"start\" className=\"w-56\">\n                      <div className=\"px-2 py-1.5\">\n                        <p className=\"text-sm font-medium\">{user?.name}</p>\n                        <p className=\"text-xs text-muted-foreground\">{user?.email}</p>\n                      </div>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem asChild>\n                        <Link href=\"/profile\" className=\"w-full cursor-pointer\">\n                          <User className=\"w-4 h-4 mr-2\" />\n                          My Profile\n                        </Link>\n                      </DropdownMenuItem>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem \n                        onClick={logout} \n                        className=\"text-red-600 cursor-pointer\"\n                      >\n                        <LogOut className=\"w-4 h-4 mr-2\" />\n                        Sign Out\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                ) : (\n                  <Link href=\"/login\">\n                    <button \n                      className={`w-11 h-11 flex items-center justify-center rounded-md active:scale-95 transition-all duration-200 ${\n                        variant === \"solid\" ? \"hover:text-terracotta hover:bg-terracotta/10\" : \"hover:text-cream hover:bg-white/10\"\n                      }`} \n                      data-testid=\"button-account-mobile\"\n                      aria-label=\"Login\"\n                    >\n                      <User className=\"w-5 h-5\" />\n                    </button>\n                  </Link>\n                )}\n                \n                <button \n                  className={`relative w-11 h-11 flex items-center justify-center rounded-md active:scale-95 transition-all duration-200 ${\n                    variant === \"solid\" ? \"hover:text-terracotta hover:bg-terracotta/10\" : \"hover:text-cream hover:bg-white/10\"\n                  }`}\n                  data-testid=\"button-cart-mobile\"\n                  onClick={() => setIsCartOpen(true)}\n                  aria-label={`Shopping cart${cartCount > 0 ? ` (${cartCount} items)` : ''}`}\n                >\n                  <ShoppingBag className=\"w-5 h-5\" />\n                  {cartCount > 0 && (\n                    <span className=\"absolute -top-1 -right-1 bg-terracotta text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\" data-testid=\"cart-count-mobile\">\n                      {cartCount}\n                    </span>\n                  )}\n                </button>\n              </div>\n              \n              {/* Right side - Wishlist and More Menu */}\n              <div className={`flex items-center space-x-4 ${\n                variant === \"solid\" ? \"text-foreground\" : \"text-white\"\n              }`}>\n                <button \n                  className={`relative w-11 h-11 flex items-center justify-center rounded-md active:scale-95 transition-all duration-200 ${\n                    variant === \"solid\" ? \"hover:text-terracotta hover:bg-terracotta/10\" : \"hover:text-cream hover:bg-white/10\"\n                  }`} \n                  data-testid=\"button-wishlist-mobile\"\n                  onClick={() => setIsWishlistOpen(true)}\n                  aria-label={`Wishlist${wishlistCount > 0 ? ` (${wishlistCount} items)` : ''}`}\n                >\n                  <Heart className=\"w-5 h-5\" />\n                  {wishlistCount > 0 && (\n                    <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\" data-testid=\"wishlist-count-mobile\">\n                      {wishlistCount}\n                    </span>\n                  )}\n                </button>\n                \n                <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n                  <SheetTrigger asChild>\n                    <button \n                      className={`w-11 h-11 flex items-center justify-center rounded-md active:scale-95 transition-all duration-200 pointer-events-auto z-50 ${\n                        variant === \"solid\" ? \"hover:text-terracotta hover:bg-terracotta/10\" : \"hover:text-cream hover:bg-white/10\"\n                      }`} \n                      data-testid=\"button-mobile-menu\"\n                      aria-label=\"Open menu\"\n                    >\n                      <Menu className=\"w-5 h-5\" />\n                    </button>\n                  </SheetTrigger>\n                  <SheetContent side=\"right\" className=\"w-80\">\n                    <SheetHeader>\n                      <SheetTitle>Menu</SheetTitle>\n                      <SheetDescription>\n                        Navigate through SM Furnishings\n                      </SheetDescription>\n                    </SheetHeader>\n                    <div className=\"flex flex-col space-y-4 mt-6\">\n                      {/* Search hidden as requested */}\n                      \n                      {/* Navigation Links */}\n                      <div className=\"space-y-2\">\n                        <Link href=\"/\" onClick={() => setIsMobileMenuOpen(false)}>\n                          <div className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-accent transition-colors\">\n                            <span className=\"font-medium text-lg\" style={{ fontFamily: '\"Prata\", serif' }}>Home</span>\n                          </div>\n                        </Link>\n                        <Link href=\"/shop\" onClick={() => setIsMobileMenuOpen(false)}>\n                          <div className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-accent transition-colors\">\n                            <span className=\"font-medium text-lg\" style={{ fontFamily: '\"Prata\", serif' }}>Shop</span>\n                          </div>\n                        </Link>\n                        <Link href=\"/about\" onClick={() => setIsMobileMenuOpen(false)}>\n                          <div className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-accent transition-colors\">\n                            <span className=\"font-medium text-lg\" style={{ fontFamily: '\"Prata\", serif' }}>About</span>\n                          </div>\n                        </Link>\n                      </div>\n                    </div>\n                  </SheetContent>\n                </Sheet>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Cart Modal */}\n      <Dialog open={isCartOpen} onOpenChange={setIsCartOpen}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <DialogTitle className=\"sr-only\">Shopping Cart</DialogTitle>\n          <div className=\"space-y-6\">\n            {/* Cart Header */}\n            <div className=\"border-b pb-4\">\n              <h2 className=\"text-2xl font-serif font-bold\">Shopping Cart ({cartCount} items)</h2>\n            </div>\n\n            {/* Cart Items */}\n            {cartItems.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <ShoppingBag className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                <h3 className=\"text-lg font-medium mb-2\">Your cart is empty</h3>\n                <p className=\"text-muted-foreground mb-6\">Let's fill it with beautiful furnishings!</p>\n                {/* Continue Shopping - Hidden on mobile */}\n                {!isMobile && (\n                  <Button \n                    onClick={handleContinueShopping}\n                    className=\"bg-terracotta hover:bg-terracotta-dark text-white\"\n                  >\n                    Continue Shopping\n                  </Button>\n                )}\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {cartItems.map((item) => (\n                  <div key={item.productId} className={`flex items-center border-b pb-4 ${isMobile ? 'space-x-2' : 'space-x-4'}`}>\n                    {/* Product Image */}\n                    <div className={`${isMobile ? 'w-12 h-12' : 'w-20 h-20'} rounded-lg overflow-hidden flex-shrink-0`}>\n                      <img \n                        src={item.productImage} \n                        alt={item.productName}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"flex-1 min-w-0\">\n                      <h3 className={`font-medium truncate ${isMobile ? 'text-sm' : ''}`}>{item.productName}</h3>\n                      <p className={`font-bold text-terracotta ${isMobile ? 'text-sm' : 'text-lg'}`}>\n                        ₹{(item.priceAtTime * item.quantity).toLocaleString()}\n                      </p>\n                      {!isMobile && (\n                        <p className=\"text-xs text-muted-foreground\">\n                          Price when added: ₹{item.priceAtTime.toLocaleString()}\n                        </p>\n                      )}\n                    </div>\n                    \n                    {/* Quantity Controls */}\n                    <div className=\"flex items-center space-x-1 flex-shrink-0\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => updateQuantity(item.productId, item.quantity - 1)}\n                        className={`p-0 ${isMobile ? 'h-6 w-6' : 'h-8 w-8'}`}\n                        disabled={isLoading}\n                      >\n                        <Minus className={`${isMobile ? 'w-2 h-2' : 'w-3 h-3'}`} />\n                      </Button>\n                      <span className={`text-center font-medium ${isMobile ? 'w-6 text-xs' : 'w-8'}`}>{item.quantity}</span>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => updateQuantity(item.productId, item.quantity + 1)}\n                        className={`p-0 ${isMobile ? 'h-6 w-6' : 'h-8 w-8'}`}\n                        disabled={isLoading}\n                      >\n                        <Plus className={`${isMobile ? 'w-2 h-2' : 'w-3 h-3'}`} />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => handleRemoveClick(item.productId, item.productName)}\n                        className={`text-red-500 hover:text-red-700 ${isMobile ? 'ml-1 h-6 w-6 p-0' : 'ml-2'}`}\n                        disabled={isLoading}\n                      >\n                        <X className={`${isMobile ? 'w-3 h-3' : 'w-4 h-4'}`} />\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n\n                {/* Cart Total */}\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center text-xl font-bold\">\n                    <span>Total:</span>\n                    <span className=\"text-terracotta\">₹{getTotalPrice().toLocaleString()}</span>\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className={`flex pt-4 ${isMobile ? 'space-x-3' : 'space-x-4'}`}>\n                  {/* Continue Shopping - Hidden on mobile */}\n                  {!isMobile && (\n                    <Button \n                      variant=\"outline\" \n                      className=\"flex-1\"\n                      onClick={handleContinueShopping}\n                      disabled={isLoading}\n                    >\n                      Continue Shopping\n                    </Button>\n                  )}\n                  <Button \n                    variant=\"outline\" \n                    onClick={() => clearCart()}\n                    disabled={isLoading || cartItems.length === 0}\n                    className={`text-red-600 hover:text-red-700 ${isMobile ? 'flex-1' : ''}`}\n                  >\n                    Clear Cart\n                  </Button>\n                  <Button \n                    className=\"flex-1 bg-terracotta hover:bg-terracotta-dark text-white\"\n                    onClick={handleCheckout}\n                    disabled={isLoading || cartItems.length === 0}\n                  >\n                    {isLoading ? 'Loading...' : 'Checkout'}\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Cart Item Remove Confirmation Dialog */}\n      <AlertDialog open={showRemoveDialog} onOpenChange={setShowRemoveDialog}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Remove Item</AlertDialogTitle>\n            <AlertDialogDescription>\n              What would you like to do with \"{itemToRemove?.productName}\"?\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter className=\"flex space-x-2\">\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleMoveToWishlist}\n              className=\"bg-pink-500 hover:bg-pink-600 text-white\"\n            >\n              <Heart className=\"w-4 h-4 mr-2\" />\n              Move to Wishlist\n            </AlertDialogAction>\n            <AlertDialogAction\n              onClick={handleConfirmRemove}\n              className=\"bg-red-500 hover:bg-red-600 text-white\"\n            >\n              Remove\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Search functionality removed as requested */}\n    </>\n  );\n}","size_bytes":25702},"client/src/pages/about.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport heroImage from \"@assets/57d601fcd7f59ad26c4c4920899c1857_1758543449530.jpg\";\nimport differenceImage from \"@assets/Classy False Ceiling Design For Living Room_1758543625748.jpeg\";\nimport { \n  Heart, \n  Users, \n  Globe, \n  Star,\n  Leaf,\n  Play, \n  ChevronLeft, \n  ChevronRight,\n  ArrowRight,\n  Target,\n  Eye,\n  Zap,\n  Shield,\n  Recycle,\n  TreePine,\n  CheckCircle\n} from \"lucide-react\";\n\nconst timelineData = [\n  {\n    year: \"2003\",\n    title: \"The First Step\",\n    description: \"After Dadu's retirement as Sales Head of a government handloom cooperative, our family opened its first multi-brand home furnishings showroom in Hisar. It was more than a store — it was a place where people discovered fabrics that felt like home.\",\n    side: \"left\"\n  },\n  {\n    year: \"2018\",\n    title: \"A Dream Expands\",\n    description: \"With years of dedication and trust, we grew to open our second showroom in Hisar. This was not just about expansion, but about becoming part of more homes and more stories.\",\n    side: \"right\"\n  },\n  {\n    year: \"2020\",\n    title: \"Love & Legacy\",\n    description: \"We lost our guiding lights — Shakuntala Ji and Manohar Ji. But their values of warmth, elegance, and care stayed with us. It was in their memory that the seeds of SM Furnishings were sown.\",\n    side: \"left\"\n  },\n  {\n    year: \"2025\",\n    title: \"A New Chapter\",\n    description: \"Carrying forward their legacy, the next generation launches SM Furnishings — a brand born from love, rooted in heritage, and made for modern homes.\",\n    side: \"right\"\n  }\n];\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Sarah Martinez\",\n    role: \"Founder & CEO\",\n    image: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"With 15+ years in furniture design, Sarah leads SM Furnishings with passion for accessible luxury and sustainable practices.\"\n  },\n  {\n    id: 2,\n    name: \"Michael Chen\",\n    role: \"Head of Design\",\n    image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"Award-winning designer who brings contemporary elegance to every piece, ensuring our furniture meets the highest aesthetic standards.\"\n  },\n  {\n    id: 3,\n    name: \"Emily Johnson\",\n    role: \"Sustainability Director\",\n    image: \"https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"Environmental advocate leading our green initiatives, making sure every piece is responsibly sourced and environmentally conscious.\"\n  },\n  {\n    id: 4,\n    name: \"David Rodriguez\",\n    role: \"Customer Experience Lead\",\n    image: \"https://images.unsplash.com/photo-1560250097-0b93528c311a?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n    bio: \"Dedicated to ensuring every customer has an exceptional experience from browsing to delivery and beyond.\"\n  }\n];\n\nconst testimonials = [\n  {\n    id: 1,\n    name: \"Jennifer Adams\",\n    text: \"SM Furnishings transformed my living room into a luxurious haven without breaking the bank. The quality is exceptional!\",\n    rating: 5\n  },\n  {\n    id: 2,\n    name: \"Robert Kim\",\n    text: \"Outstanding customer service and beautiful furniture. Every piece arrived perfectly and the quality exceeded my expectations.\",\n    rating: 5\n  },\n  {\n    id: 3,\n    name: \"Maria Santos\",\n    text: \"I love how sustainable their practices are. Beautiful furniture that's also environmentally responsible - perfect!\",\n    rating: 5\n  }\n];\n\nconst uspPoints = [\n  \"Rooted in three generations of trust and craft.\",\n  \"A legacy inspired by Shakuntala Ji's warmth and Manohar Ji's eye for quality.\",\n  \"Luxury made minimal, timeless, and affordable.\",\n  \"Every collection designed with comfort at its heart.\",\n  \"A family-first brand, born out of love and memories.\",\n  \"More than furnishings — it's a feeling of home.\"\n];\n\n\nexport default function About() {\n  const [currentTestimonial, setCurrentTestimonial] = useState(0);\n  const [flippedCards, setFlippedCards] = useState<Set<number>>(new Set());\n  const [visibleSections, setVisibleSections] = useState<Set<string>>(new Set());\n  const [counters, setCounters] = useState({ customers: 0, products: 0, satisfaction: 0 });\n\n  // Auto-rotate testimonials\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Animate counters when section becomes visible\n  useEffect(() => {\n    if (visibleSections.has('testimonials')) {\n      const animateCounter = (target: number, setter: (value: number) => void) => {\n        let current = 0;\n        const increment = target / 50;\n        const timer = setInterval(() => {\n          current += increment;\n          if (current >= target) {\n            setter(target);\n            clearInterval(timer);\n          } else {\n            setter(Math.floor(current));\n          }\n        }, 50);\n      };\n\n      animateCounter(1000000, (value) => setCounters(prev => ({ ...prev, customers: value })));\n      animateCounter(5000, (value) => setCounters(prev => ({ ...prev, products: value })));\n      animateCounter(98, (value) => setCounters(prev => ({ ...prev, satisfaction: value })));\n    }\n  }, [visibleSections]);\n\n  const toggleCardFlip = (id: number) => {\n    setFlippedCards(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(id)) {\n        newSet.delete(id);\n      } else {\n        newSet.add(id);\n      }\n      return newSet;\n    });\n  };\n\n  // Intersection Observer effect for scroll animations\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setVisibleSections(prev => {\n              const newSet = new Set(prev);\n              newSet.add(entry.target.id);\n              return newSet;\n            });\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    document.querySelectorAll('[id]').forEach((el) => observer.observe(el));\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <Header />\n\n      {/* Hero Section */}\n      <section className=\"relative h-[65vh] sm:h-screen flex items-center justify-center overflow-hidden\">\n        <div \n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n          style={{\n            backgroundImage: `url(${heroImage})`\n          }}\n        >\n          <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n        </div>\n        \n        <div className=\"relative z-10 text-center text-white px-6 max-w-4xl\">\n          <h1 className=\"font-serif text-2xl sm:text-5xl md:text-7xl lg:text-8xl font-bold mb-3 sm:mb-6 tracking-wide animate-fade-in-up\">\n            OUR <span className=\"text-cream italic font-script\">story</span>\n          </h1>\n          <p className=\"text-sm sm:text-xl md:text-2xl font-light mb-4 sm:mb-8 tracking-wider animate-fade-in-up animation-delay-300\">\n            Because a home is built not just with walls, but with warmth.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-4 justify-center animate-fade-in-up animation-delay-600\">\n            <Button \n              size=\"lg\"\n              className=\"bg-terracotta text-white px-4 py-2 text-xs sm:px-8 sm:py-4 sm:text-lg tracking-wide hover:bg-terracotta-dark transition-all duration-300 hover:scale-105\"\n              onClick={() => window.open('https://www.instagram.com/sm_furnishings/', '_blank')}\n            >\n              Join Our Journey\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"lg\"\n              className=\"border-2 border-white bg-transparent text-white font-semibold px-4 py-2 text-xs sm:px-8 sm:py-4 sm:text-lg tracking-wide hover:bg-white hover:text-terracotta transition-all duration-300\"\n              onClick={() => window.location.href = '/shop'}\n            >\n              Shop Now\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Story Timeline */}\n      <section id=\"timeline\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-2xl sm:text-5xl md:text-6xl font-bold text-foreground mb-2 sm:mb-4\">\n              Our <span className=\"text-terracotta\">Journey</span>\n            </h2>\n            <p className=\"text-xs sm:text-xl text-muted-foreground max-w-2xl mx-auto\">\n              From family values to timeless furnishings — this is just the beginning of SM Furnishings.\n            </p>\n          </div>\n\n          <div className=\"relative max-w-4xl mx-auto\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-terracotta opacity-30\"></div>\n            <div \n              className={`absolute left-1/2 transform -translate-x-1/2 w-1 bg-terracotta transition-all duration-2000 ${\n                visibleSections.has('timeline') ? 'h-full' : 'h-0'\n              }`}\n            ></div>\n\n            {/* Timeline Items */}\n            <div className=\"space-y-16\">\n              {timelineData.map((item, index) => (\n                <div \n                  key={index}\n                  className={`flex items-center ${item.side === 'left' ? 'flex-row' : 'flex-row-reverse'}`}\n                >\n                  <div className={`w-1/2 ${item.side === 'left' ? 'pr-8' : 'pl-8'}`}>\n                    <div \n                      className={`transform transition-all duration-700 ${\n                        visibleSections.has('timeline') \n                          ? 'translate-x-0 opacity-100' \n                          : item.side === 'left' ? '-translate-x-10 opacity-0' : 'translate-x-10 opacity-0'\n                      }`}\n                      style={{ transitionDelay: `${index * 200}ms` }}\n                    >\n                      <Card className=\"p-3 sm:p-6 hover:shadow-lg transition-shadow duration-300\">\n                        <CardContent className=\"p-0\">\n                          <div className=\"text-terracotta font-bold text-sm sm:text-xl mb-1 sm:mb-2\">{item.year}</div>\n                          <h3 className=\"font-serif text-sm sm:text-lg font-bold mb-1 sm:mb-2\">{item.title}</h3>\n                          <p className=\"text-sm sm:text-base text-muted-foreground\">{item.description}</p>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </div>\n                  \n                  <div className=\"relative z-10\">\n                    <div \n                      className={`w-4 h-4 bg-terracotta rounded-full border-4 border-background transform transition-all duration-500 ${\n                        visibleSections.has('timeline') ? 'scale-100' : 'scale-0'\n                      }`}\n                      style={{ transitionDelay: `${index * 200 + 100}ms` }}\n                    ></div>\n                  </div>\n                  \n                  <div className=\"w-1/2\"></div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Why Shakuntala & Manohar Section */}\n      <section id=\"why-shakuntala-manohar\" className=\"py-20 bg-cream\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-2xl sm:text-5xl md:text-6xl font-bold text-foreground mb-2 sm:mb-4\">\n              Why <span className=\"text-terracotta\">Shakuntala & Manohar?</span>\n            </h2>\n          </div>\n\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-6 sm:mb-12\">\n              <p className=\"text-sm sm:text-2xl md:text-3xl font-light text-foreground mb-1 sm:mb-8 leading-relaxed\">\n                Our name isn't just a name — it's a promise.\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-12\">\n              <div \n                className={`text-center transform transition-all duration-700 ${\n                  visibleSections.has('why-shakuntala-manohar') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n                }`}\n              >\n                <div className=\"bg-terracotta text-white w-12 h-12 sm:w-24 sm:h-24 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-6 hover:scale-110 transition-transform duration-300\">\n                  <Heart className=\"w-6 h-6 sm:w-12 sm:h-12\" />\n                </div>\n                <h3 className=\"font-serif text-sm sm:text-2xl font-bold mb-2 sm:mb-4 text-terracotta\">Shakuntala</h3>\n                <p className=\"text-xs sm:text-lg text-muted-foreground leading-relaxed\">\n                  <span className=\"font-semibold\">\"The one protected by virtue\"</span> — she embodied grace, warmth, and strength that turned every house into a home.\n                </p>\n              </div>\n\n              <div \n                className={`text-center transform transition-all duration-700 ${\n                  visibleSections.has('why-shakuntala-manohar') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n                }`}\n                style={{ transitionDelay: '200ms' }}\n              >\n                <div className=\"bg-terracotta text-white w-12 h-12 sm:w-24 sm:h-24 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-6 hover:scale-110 transition-transform duration-300\">\n                  <Eye className=\"w-6 h-6 sm:w-12 sm:h-12\" />\n                </div>\n                <h3 className=\"font-serif text-sm sm:text-2xl font-bold mb-2 sm:mb-4 text-terracotta\">Manohar</h3>\n                <p className=\"text-xs sm:text-lg text-muted-foreground leading-relaxed\">\n                  <span className=\"font-semibold\">\"The one who captivates the heart\"</span> — his eye for detail and love for quality touched everyone around him.\n                </p>\n              </div>\n            </div>\n\n            <div \n              className={`text-center mt-12 transform transition-all duration-700 ${\n                visibleSections.has('why-shakuntala-manohar') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '400ms' }}\n            >\n              <p className=\"text-xs sm:text-xl text-muted-foreground leading-relaxed font-medium\">\n                Together, they are the soul of SM Furnishings — comfort that protects you, and beauty that captures your heart.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission, Vision & Values */}\n      <section id=\"values\" className=\"py-20 bg-gradient-to-br from-cream to-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-2xl sm:text-5xl md:text-6xl font-bold text-foreground mb-2 sm:mb-4\">\n              Our <span className=\"text-terracotta\">Foundation</span>\n            </h2>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('values') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n            >\n              <div className=\"bg-terracotta text-white w-10 h-10 sm:w-20 sm:h-20 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-6 hover:scale-110 transition-transform duration-300\">\n                <Target className=\"w-5 h-5 sm:w-10 sm:h-10\" />\n              </div>\n              <h3 className=\"font-serif text-sm sm:text-2xl font-bold mb-2 sm:mb-4\">Mission</h3>\n              <p className=\"text-xs sm:text-base text-muted-foreground leading-relaxed\">\n                To make luxury furnishings accessible — blending timeless elegance with everyday comfort.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('values') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '200ms' }}\n            >\n              <div className=\"bg-terracotta text-white w-10 h-10 sm:w-20 sm:h-20 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-6 hover:scale-110 transition-transform duration-300\">\n                <Eye className=\"w-5 h-5 sm:w-10 sm:h-10\" />\n              </div>\n              <h3 className=\"font-serif text-sm sm:text-2xl font-bold mb-2 sm:mb-4\">Vision</h3>\n              <p className=\"text-xs sm:text-base text-muted-foreground leading-relaxed\">\n                To become a household name in home furnishings by carrying forward a legacy rooted in love, quality, and trust.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('values') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '400ms' }}\n            >\n              <div className=\"bg-terracotta text-white w-10 h-10 sm:w-20 sm:h-20 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-6 hover:scale-110 transition-transform duration-300\">\n                <Heart className=\"w-5 h-5 sm:w-10 sm:h-10\" />\n              </div>\n              <h3 className=\"font-serif text-sm sm:text-2xl font-bold mb-2 sm:mb-4\">Values</h3>\n              <p className=\"text-xs sm:text-base text-muted-foreground leading-relaxed\">\n                Heritage, affordability, and authenticity guide us — ensuring every piece feels personal, warm, and lasting.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Meet the Team - Hidden */}\n      <section id=\"team\" className=\"py-20 bg-background hidden\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Meet Our <span className=\"text-terracotta\">Team</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              The passionate individuals behind SM Furnishings' success\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto\">\n            {teamMembers.map((member, index) => (\n              <div \n                key={member.id}\n                className={`transform transition-all duration-700 ${\n                  visibleSections.has('team') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n                }`}\n                style={{ transitionDelay: `${index * 150}ms` }}\n              >\n                <div \n                  className=\"relative w-full h-80 cursor-pointer group\"\n                  onClick={() => toggleCardFlip(member.id)}\n                >\n                  <div className={`relative w-full h-full transition-transform duration-700 transform-style-preserve-3d ${\n                    flippedCards.has(member.id) ? 'rotate-y-180' : ''\n                  }`}>\n                    {/* Front of card */}\n                    <Card className=\"absolute inset-0 backface-hidden group-hover:shadow-lg transition-shadow duration-300\">\n                      <CardContent className=\"p-0\">\n                        <div className=\"aspect-square overflow-hidden rounded-t-lg\">\n                          <img \n                            src={member.image}\n                            alt={member.name}\n                            className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                          />\n                        </div>\n                        <div className=\"p-6 text-center\">\n                          <h3 className=\"font-serif text-xl font-bold mb-2\">{member.name}</h3>\n                          <p className=\"text-terracotta font-medium\">{member.role}</p>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    {/* Back of card */}\n                    <Card className=\"absolute inset-0 backface-hidden rotate-y-180 bg-terracotta text-white\">\n                      <CardContent className=\"p-6 flex flex-col justify-center h-full\">\n                        <h3 className=\"font-serif text-xl font-bold mb-4 text-center\">{member.name}</h3>\n                        <p className=\"text-center leading-relaxed\">{member.bio}</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* What Makes Us Different */}\n      <section id=\"usp\" className=\"py-20 bg-cream\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center max-w-6xl mx-auto\">\n            <div \n              className={`transform transition-all duration-700 ${\n                visibleSections.has('usp') ? 'translate-x-0 opacity-100' : '-translate-x-10 opacity-0'\n              }`}\n            >\n              <img \n                src={differenceImage}\n                alt=\"Our Difference\"\n                className=\"w-full h-48 sm:h-96 object-cover rounded-lg shadow-xl\"\n              />\n            </div>\n            \n            <div \n              className={`space-y-8 transform transition-all duration-700 ${\n                visibleSections.has('usp') ? 'translate-x-0 opacity-100' : 'translate-x-10 opacity-0'\n              }`}\n            >\n              <div>\n                <h2 className=\"font-serif text-2xl sm:text-5xl md:text-6xl font-bold text-foreground mb-2 sm:mb-4\">\n                  What Makes Us <span className=\"text-terracotta\">Different</span>\n                </h2>\n                <p className=\"text-xs sm:text-xl text-muted-foreground mb-4 sm:mb-8\">\n                  Experience the SM Furnishings advantage\n                </p>\n              </div>\n\n              <div className=\"space-y-4\">\n                {uspPoints.map((point, index) => (\n                  <div \n                    key={index}\n                    className={`flex items-center space-x-3 transform transition-all duration-500 ${\n                      visibleSections.has('usp') ? 'translate-x-0 opacity-100' : 'translate-x-5 opacity-0'\n                    }`}\n                    style={{ transitionDelay: `${index * 100 + 300}ms` }}\n                  >\n                    <CheckCircle className=\"w-3 h-3 sm:w-6 sm:h-6 text-terracotta flex-shrink-0\" />\n                    <span className=\"text-xs sm:text-lg\">{point}</span>\n                  </div>\n                ))}\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Customer Love & Testimonials - Hidden */}\n      <section id=\"testimonials\" className=\"py-20 bg-background hidden\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Customer <span className=\"text-terracotta\">Love</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              See what our customers say about their SM Furnishings experience\n            </p>\n          </div>\n\n          {/* Stats Counter */}\n          <div className=\"grid md:grid-cols-3 gap-8 mb-16 max-w-4xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-bold text-terracotta mb-2\">\n                {counters.customers.toLocaleString()}+\n              </div>\n              <div className=\"text-xl text-muted-foreground\">Happy Customers</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-bold text-terracotta mb-2\">\n                {counters.products.toLocaleString()}+\n              </div>\n              <div className=\"text-xl text-muted-foreground\">Products Delivered</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-bold text-terracotta mb-2\">\n                {counters.satisfaction}%\n              </div>\n              <div className=\"text-xl text-muted-foreground\">Satisfaction Rate</div>\n            </div>\n          </div>\n\n          {/* Testimonial Carousel */}\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"relative overflow-hidden rounded-lg bg-cream p-8\">\n              {testimonials.map((testimonial, index) => (\n                <div \n                  key={testimonial.id}\n                  className={`transition-all duration-700 ${\n                    index === currentTestimonial ? 'opacity-100 translate-x-0' : 'opacity-0 absolute inset-0 translate-x-full'\n                  }`}\n                >\n                  <div className=\"text-center\">\n                    <div className=\"flex justify-center mb-4\">\n                      {[...Array(testimonial.rating)].map((_, i) => (\n                        <Star key={i} className=\"w-6 h-6 text-yellow-400 fill-current\" />\n                      ))}\n                    </div>\n                    <blockquote className=\"text-xl md:text-2xl text-foreground mb-6 italic\">\n                      \"{testimonial.text}\"\n                    </blockquote>\n                    <div className=\"font-semibold text-terracotta text-lg\">\n                      {testimonial.name}\n                    </div>\n                  </div>\n                </div>\n              ))}\n              \n              {/* Navigation dots */}\n              <div className=\"flex justify-center mt-8 space-x-2\">\n                {testimonials.map((_, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentTestimonial(index)}\n                    className={`w-3 h-3 rounded-full transition-colors duration-300 ${\n                      index === currentTestimonial ? 'bg-terracotta' : 'bg-terracotta/30'\n                    }`}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Sustainability - Hidden */}\n      <section id=\"sustainability\" className=\"py-20 bg-gradient-to-br from-green-50 to-cream relative overflow-hidden hidden\">\n        {/* Floating decorative elements */}\n        <div className=\"absolute inset-0\">\n          <Leaf className=\"absolute top-20 left-10 w-8 h-8 text-green-300 opacity-50 animate-float\" />\n          <TreePine className=\"absolute top-40 right-20 w-6 h-6 text-green-400 opacity-40 animate-float-delayed\" />\n          <Globe className=\"absolute bottom-20 left-20 w-10 h-10 text-green-200 opacity-30 animate-float\" />\n        </div>\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Sustainability & <span className=\"text-green-600\">Responsibility</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Our commitment to the planet and future generations\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('sustainability') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n            >\n              <div className=\"bg-green-500 text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Leaf className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Eco Materials</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                We source only sustainable, certified materials that minimize environmental impact while maintaining exceptional quality and durability.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('sustainability') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '200ms' }}\n            >\n              <div className=\"bg-green-500 text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Recycle className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Recyclable Packaging</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                100% recyclable and biodegradable packaging materials ensure your furniture arrives safely while protecting our environment.\n              </p>\n            </div>\n\n            <div \n              className={`text-center transform transition-all duration-700 ${\n                visibleSections.has('sustainability') ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'\n              }`}\n              style={{ transitionDelay: '400ms' }}\n            >\n              <div className=\"bg-green-500 text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 hover:scale-110 transition-transform duration-300\">\n                <Users className=\"w-10 h-10\" />\n              </div>\n              <h3 className=\"font-serif text-2xl font-bold mb-4\">Community Work</h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                We partner with local communities and artisans, supporting fair trade practices and giving back through furniture donation programs.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Trust & Recognition - Hidden */}\n      <section id=\"recognition\" className=\"py-20 bg-background hidden\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Trust & <span className=\"text-terracotta\">Recognition</span>\n            </h2>\n          </div>\n\n          {/* Press Logos */}\n          <div className=\"mb-12\">\n            <div className=\"flex flex-wrap justify-center items-center gap-8 opacity-60 hover:opacity-100 transition-opacity duration-300\">\n              <div className=\"text-2xl font-bold text-muted-foreground\">Featured in:</div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Design Weekly\n              </div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Home & Living\n              </div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Furniture Today\n              </div>\n              <div className=\"text-xl font-semibold text-muted-foreground hover:text-terracotta transition-colors duration-300 cursor-pointer\">\n                Interior Design\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </section>\n\n      {/* Be Part of Our Journey - Hidden */}\n      <section className=\"py-20 bg-terracotta text-white hidden\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h2 className=\"font-serif text-4xl md:text-5xl font-bold mb-6\">\n            Be Part of Our <span className=\"font-script italic\">Journey</span>\n          </h2>\n          <p className=\"text-xl mb-12 max-w-2xl mx-auto\">\n            Join thousands of satisfied customers who have transformed their homes with SM Furnishings\n          </p>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-4xl mx-auto\">\n            <Card className=\"bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105\">\n              <CardContent className=\"p-8 text-center\">\n                <Users className=\"w-12 h-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold mb-4\">Careers</h3>\n                <p className=\"mb-6\">Join our passionate team and help shape the future of furniture</p>\n                <Button className=\"bg-white text-terracotta hover:bg-cream hover:text-terracotta-dark font-semibold\">\n                  View Openings\n                </Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105\">\n              <CardContent className=\"p-8 text-center\">\n                <Globe className=\"w-12 h-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold mb-4\">Collaborations</h3>\n                <p className=\"mb-6\">Partner with us for exciting projects and mutual growth</p>\n                <Button className=\"bg-white text-terracotta hover:bg-cream hover:text-terracotta-dark font-semibold\">\n                  Get in Touch\n                </Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105\">\n              <CardContent className=\"p-8 text-center\">\n                <Zap className=\"w-12 h-12 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold mb-4\">Newsletter</h3>\n                <p className=\"mb-6\">Stay updated with our latest collections and exclusive offers</p>\n                <Button className=\"bg-white text-terracotta hover:bg-cream hover:text-terracotta-dark font-semibold\">\n                  Subscribe Now\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Behind the Scenes - Hidden */}\n      <section className=\"py-20 bg-cream hidden\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Behind the <span className=\"text-terracotta\">Scenes</span>\n            </h2>\n          </div>\n\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-16\">\n              <div className=\"relative\">\n                <div className=\"aspect-video bg-gray-200 rounded-lg overflow-hidden shadow-xl\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1556909918-f9ae5ba9a9de?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\"\n                    alt=\"Behind the scenes\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <Button \n                      size=\"lg\"\n                      className=\"bg-white/90 text-terracotta hover:bg-white rounded-full w-16 h-16 p-0 hover:scale-110 transition-transform duration-300\"\n                    >\n                      <Play className=\"w-8 h-8\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <h3 className=\"font-serif text-3xl font-bold\">Our Craftsmanship Process</h3>\n                <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                  Get an exclusive look at how our expert artisans craft each piece with meticulous attention to detail, \n                  from selecting the finest materials to the final quality check.\n                </p>\n                <Button className=\"bg-terracotta text-white hover:bg-terracotta-dark\">\n                  Watch Full Documentary\n                  <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </Button>\n              </div>\n            </div>\n\n            {/* Did You Know Cards */}\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              {[\n                { \n                  front: \"Did You Know?\", \n                  back: \"Each piece goes through 47 quality checks before reaching your home\",\n                  icon: Shield\n                },\n                { \n                  front: \"Fun Fact!\", \n                  back: \"We've planted over 10,000 trees to offset our carbon footprint\",\n                  icon: TreePine\n                },\n                { \n                  front: \"Amazing!\", \n                  back: \"Our fastest delivery was completed in just 2 hours across the city\",\n                  icon: Zap\n                }\n              ].map((card, index) => (\n                <div \n                  key={index}\n                  className=\"relative h-48 cursor-pointer group\"\n                  onClick={() => toggleCardFlip(index + 100)}\n                >\n                  <div className={`relative w-full h-full transition-transform duration-700 transform-style-preserve-3d ${\n                    flippedCards.has(index + 100) ? 'rotate-y-180' : ''\n                  }`}>\n                    {/* Front */}\n                    <Card className=\"absolute inset-0 backface-hidden bg-terracotta text-white group-hover:shadow-xl transition-shadow duration-300\">\n                      <CardContent className=\"p-6 flex flex-col items-center justify-center h-full text-center\">\n                        <card.icon className=\"w-12 h-12 mb-4\" />\n                        <h3 className=\"text-xl font-bold\">{card.front}</h3>\n                      </CardContent>\n                    </Card>\n\n                    {/* Back */}\n                    <Card className=\"absolute inset-0 backface-hidden rotate-y-180 bg-cream border-terracotta border-2\">\n                      <CardContent className=\"p-6 flex items-center justify-center h-full\">\n                        <p className=\"text-center text-lg font-medium\">{card.back}</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","size_bytes":39222},"client/src/lib/cartContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { Cart, CartItem, fetchCart, addToCart as apiAddToCart, updateCartQuantity, removeFromCart as apiRemoveFromCart, clearCart as apiClearCart, ApiProduct, fetchProductById, getProductImageUrl } from './api';\nimport { useAuth } from './authContext';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface CartContextType {\n  cart: Cart | null;\n  cartItems: CartItem[];\n  cartCount: number;\n  isLoading: boolean;\n  error: string | null;\n  addToCart: (productId: string, quantity?: number) => Promise<void>;\n  removeFromCart: (productId: string) => Promise<void>;\n  updateQuantity: (productId: string, quantity: number) => Promise<void>;\n  clearCart: (showNotification?: boolean) => Promise<void>;\n  refreshCart: () => Promise<void>;\n  isCartOpen: boolean;\n  setIsCartOpen: (open: boolean) => void;\n  getCartItemQuantity: (productId: string) => number;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport function CartProvider({ children }: { children: ReactNode }) {\n  const [cart, setCart] = useState<Cart | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const { isAuthenticated, user } = useAuth();\n  const { toast } = useToast();\n\n  // Derived state\n  const cartItems = cart?.items || [];\n  const cartCount = cart?.totalItems || 0;\n\n  // Load cart when user authenticates or on mount (including guest users)\n  useEffect(() => {\n    loadCart();\n  }, [isAuthenticated, user]);\n\n  // Load cart from localStorage\n  const loadCart = async () => {\n    const userKey = isAuthenticated && user ? user.id : 'guest';\n    \n    try {\n      console.log('🛍️ Loading cart from localStorage for user:', userKey);\n      \n      setIsLoading(true);\n      setError(null);\n      \n      const cartKey = `cart_${userKey}`;\n      const storedCart = localStorage.getItem(cartKey);\n      \n      if (storedCart) {\n        const cartData: Cart = JSON.parse(storedCart);\n        console.log('✅ Cart loaded from localStorage:', cartData);\n        setCart(cartData);\n      } else {\n        // Initialize empty cart for user\n        const emptyCart: Cart = {\n          _id: `cart_${userKey}_${Date.now()}`,\n          userId: userKey,\n          items: [],\n          totalAmount: 0,\n          totalItems: 0,\n          status: 'active',\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        };\n        setCart(emptyCart);\n        localStorage.setItem(cartKey, JSON.stringify(emptyCart));\n        console.log('✅ Empty cart created for user');\n      }\n    } catch (err) {\n      console.error('❌ Error loading cart from localStorage:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load cart';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const addToCart = async (productId: string, quantity = 1) => {\n    console.log('🛒 AddToCart called:', { productId, quantity, isAuthenticated, user });\n    \n    // Allow both authenticated users and guest users (temporary localStorage solution)\n    const userKey = isAuthenticated && user ? user.id : 'guest';\n    console.log('🔑 Using cart key for:', userKey);\n\n    try {\n      console.log('🚀 Starting add to cart with localStorage...');\n      setIsLoading(true);\n      setError(null);\n      \n      // Fetch product details for the cart item\n      const product: ApiProduct = await fetchProductById(productId);\n      console.log('📦 Product fetched:', product);\n      \n      const cartKey = `cart_${userKey}`;\n      const currentCart = cart || {\n        _id: `cart_${userKey}_${Date.now()}`,\n        userId: userKey,\n        items: [],\n        totalAmount: 0,\n        totalItems: 0,\n        status: 'active' as const,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n\n      // Check if item already exists in cart\n      const existingItemIndex = currentCart.items.findIndex(item => item.productId === productId);\n      \n      let updatedCart: Cart;\n      \n      if (existingItemIndex >= 0) {\n        // Update existing item quantity\n        const existingItem = currentCart.items[existingItemIndex];\n        const updatedItems = [...currentCart.items];\n        updatedItems[existingItemIndex] = {\n          ...existingItem,\n          quantity: existingItem.quantity + quantity\n        };\n        \n        // Use existing item's priceAtTime to maintain consistency\n        updatedCart = {\n          ...currentCart,\n          items: updatedItems,\n          totalItems: currentCart.totalItems + quantity,\n          totalAmount: currentCart.totalAmount + (existingItem.priceAtTime * quantity),\n          updatedAt: new Date().toISOString()\n        };\n      } else {\n        // Add new item to cart\n        const newCartItem: CartItem = {\n          productId: productId,\n          productName: product.Product_Name,\n          productImage: getProductImageUrl(product, 0), // Use real product image from Pictures array\n          quantity: quantity,\n          priceAtTime: product.Selling_Price,\n          addedAt: new Date().toISOString()\n        };\n        \n        updatedCart = {\n          ...currentCart,\n          items: [...currentCart.items, newCartItem],\n          totalItems: currentCart.totalItems + quantity,\n          totalAmount: currentCart.totalAmount + (product.Selling_Price * quantity),\n          updatedAt: new Date().toISOString()\n        };\n      }\n      \n      // Save to localStorage and update state\n      localStorage.setItem(cartKey, JSON.stringify(updatedCart));\n      setCart(updatedCart);\n      \n      console.log('✅ Cart updated successfully:', updatedCart);\n      \n      toast({\n        title: \"Added to Cart\",\n        description: \"Item successfully added to your cart.\",\n      });\n    } catch (err) {\n      console.error('❌ Add to cart failed:', err);\n      \n      const errorMessage = err instanceof Error ? err.message : 'Failed to add item to cart';\n      setError(errorMessage);\n      toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeFromCart = async (productId: string) => {\n    const userKey = isAuthenticated && user ? user.id : 'guest';\n\n    if (!cart) return;\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const cartKey = `cart_${userKey}`;\n      const removedItem = cart.items.find(item => item.productId === productId);\n      \n      if (!removedItem) {\n        console.log('Item not found in cart');\n        return;\n      }\n      \n      const updatedItems = cart.items.filter(item => item.productId !== productId);\n      const removedQuantity = removedItem.quantity;\n      const removedAmount = removedItem.priceAtTime * removedItem.quantity;\n      \n      const updatedCart: Cart = {\n        ...cart,\n        items: updatedItems,\n        totalItems: cart.totalItems - removedQuantity,\n        totalAmount: cart.totalAmount - removedAmount,\n        updatedAt: new Date().toISOString()\n      };\n      \n      // Save to localStorage and update state\n      localStorage.setItem(cartKey, JSON.stringify(updatedCart));\n      setCart(updatedCart);\n      \n      toast({\n        title: \"Item Removed\",\n        description: \"Item removed from your cart.\",\n      });\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to remove item from cart';\n      setError(errorMessage);\n      toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateQuantity = async (productId: string, quantity: number) => {\n    const userKey = isAuthenticated && user ? user.id : 'guest';\n\n    if (!cart) return;\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const cartKey = `cart_${userKey}`;\n      const oldItem = cart.items.find(item => item.productId === productId);\n      \n      if (!oldItem) {\n        console.log('Item not found in cart');\n        return;\n      }\n      \n      // If quantity is 0, remove the item\n      if (quantity <= 0) {\n        await removeFromCart(productId);\n        return;\n      }\n      \n      const updatedItems = cart.items.map(item =>\n        item.productId === productId \n          ? { ...item, quantity }\n          : item\n      );\n      \n      const quantityDiff = quantity - oldItem.quantity;\n      const amountDiff = oldItem.priceAtTime * quantityDiff;\n      \n      const updatedCart: Cart = {\n        ...cart,\n        items: updatedItems,\n        totalItems: cart.totalItems + quantityDiff,\n        totalAmount: cart.totalAmount + amountDiff,\n        updatedAt: new Date().toISOString()\n      };\n      \n      // Save to localStorage and update state\n      localStorage.setItem(cartKey, JSON.stringify(updatedCart));\n      setCart(updatedCart);\n      \n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update cart';\n      setError(errorMessage);\n      toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearCart = async (showNotification: boolean = true) => {\n    const userKey = isAuthenticated && user ? user.id : 'guest';\n\n    if (!cart) return;\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const cartKey = `cart_${userKey}`;\n      \n      const clearedCart: Cart = {\n        ...cart,\n        items: [],\n        totalItems: 0,\n        totalAmount: 0,\n        updatedAt: new Date().toISOString()\n      };\n      \n      // Save to localStorage and update state\n      localStorage.setItem(cartKey, JSON.stringify(clearedCart));\n      setCart(clearedCart);\n      \n      // Only show notification if requested\n      if (showNotification) {\n        toast({\n          title: \"Cart Cleared\",\n          description: \"All items removed from your cart.\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to clear cart';\n      setError(errorMessage);\n      toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const refreshCart = async () => {\n    await loadCart();\n  };\n\n  const getCartItemQuantity = (productId: string): number => {\n    const item = cartItems.find(item => item.productId === productId);\n    return item?.quantity || 0;\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cart,\n      cartItems,\n      cartCount,\n      isLoading,\n      error,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      refreshCart,\n      isCartOpen,\n      setIsCartOpen,\n      getCartItemQuantity\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}","size_bytes":11315},"client/src/pages/blog.tsx":{"content":"import { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { collections } from \"@/data/products\";\n\nexport default function Blog() {\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n\n      {/* Hero Section */}\n      <section className=\"relative h-80 flex items-center justify-center mt-24\">\n        <div \n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n          style={{\n            backgroundImage: \"url('https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=800')\"\n          }}\n        >\n          <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n        </div>\n        \n        <div className=\"relative z-10 text-center text-white px-6\">\n          <h1 className=\"font-serif text-4xl md:text-6xl font-bold mb-6\" data-testid=\"blog-hero-title\">\n            Our Blog\n          </h1>\n          <p className=\"text-xl md:text-2xl font-light max-w-2xl mx-auto leading-relaxed\" data-testid=\"blog-hero-subtitle\">\n            Insights into luxury furniture and timeless design\n          </p>\n        </div>\n      </section>\n\n      {/* Our Mission Section */}\n      <section className=\"py-20 bg-terracotta text-white\">\n        <div className=\"container mx-auto px-6 text-center max-w-4xl\">\n          <h3 className=\"font-serif text-4xl md:text-5xl font-bold mb-6\" data-testid=\"mission-title\">\n            Our <span className=\"font-script italic\">one</span> Mission\n          </h3>\n          <p className=\"text-xl md:text-2xl font-light mb-8 leading-relaxed\" data-testid=\"mission-tagline\">\n            Redefining how people experience luxury living.\n          </p>\n          <p className=\"text-lg leading-relaxed opacity-90 max-w-3xl mx-auto\" data-testid=\"mission-description\">\n            At SM Furnishings, we believe that luxury should be accessible to everyone. Our carefully curated collection combines timeless design with contemporary comfort, bringing affordable elegance to every home. We source the finest materials and work with skilled artisans to create furniture that doesn't just fill a space—it transforms it into a sanctuary of style and sophistication.\n          </p>\n        </div>\n      </section>\n\n      {/* Luxury Content Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-6\">\n          {/* Section Header */}\n          <div className=\"text-center mb-16\">\n            <h3 className=\"font-serif text-3xl md:text-4xl font-bold text-foreground\" data-testid=\"luxury-title\">\n              <span className=\"text-terracotta\">·</span> LUXURY <span className=\"text-terracotta\">·</span>\n            </h3>\n          </div>\n          \n          {/* Content Rows */}\n          <div className=\"max-w-7xl mx-auto space-y-20\">\n            {collections.map((collection) => (\n              <div \n                key={collection.id}\n                className={`grid lg:grid-cols-2 gap-12 items-center ${\n                  collection.imagePosition === \"left\" ? \"\" : \"lg:grid-cols-2\"\n                }`}\n              >\n                {collection.imagePosition === \"left\" ? (\n                  <>\n                    <div>\n                      <img \n                        src={collection.image}\n                        alt={collection.alt}\n                        className=\"w-full h-96 object-cover rounded-lg shadow-lg\"\n                        data-testid={`collection-image-${collection.id}`}\n                      />\n                    </div>\n                    <div className=\"space-y-6\">\n                      <h4 className=\"font-serif text-3xl font-bold text-foreground\" data-testid={`collection-title-${collection.id}`}>\n                        {collection.title}\n                      </h4>\n                      <p className=\"text-lg text-muted-foreground leading-relaxed\" data-testid={`collection-description-${collection.id}`}>\n                        {collection.description}\n                      </p>\n                      <Button \n                        className=\"bg-terracotta text-white px-8 py-3 font-semibold hover:bg-terracotta-dark transition-colors duration-200\"\n                        data-testid={`button-view-collection-${collection.id}`}\n                      >\n                        {collection.buttonText}\n                      </Button>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"space-y-6\">\n                      <h4 className=\"font-serif text-3xl font-bold text-foreground\" data-testid={`collection-title-${collection.id}`}>\n                        {collection.title}\n                      </h4>\n                      <p className=\"text-lg text-muted-foreground leading-relaxed\" data-testid={`collection-description-${collection.id}`}>\n                        {collection.description}\n                      </p>\n                      <Button \n                        className=\"bg-terracotta text-white px-8 py-3 font-semibold hover:bg-terracotta-dark transition-colors duration-200\"\n                        data-testid={`button-view-collection-${collection.id}`}\n                      >\n                        {collection.buttonText}\n                      </Button>\n                    </div>\n                    <div className=\"order-first lg:order-last\">\n                      <img \n                        src={collection.image}\n                        alt={collection.alt}\n                        className=\"w-full h-96 object-cover rounded-lg shadow-lg\"\n                        data-testid={`collection-image-${collection.id}`}\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","size_bytes":6021},"client/src/pages/category.tsx":{"content":"import { useState } from 'react';\nimport { Link } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { shopProducts } from '@/data/products';\nimport { Footer } from '@/components/Footer';\nimport { Header } from '@/components/Header';\nimport { \n  ArrowRight,\n  Sofa,\n  Bed,\n  UtensilsCrossed,\n  MonitorSpeaker,\n  Lamp,\n  Armchair,\n  Home,\n  Package,\n  Truck,\n  Shield,\n  RefreshCw,\n  Phone,\n  Award,\n  Star,\n  TrendingUp,\n  Heart,\n  Users\n} from 'lucide-react';\n\n// Define all furniture categories with their details\nconst furnitureCategories = [\n  {\n    id: 'living-room',\n    name: 'Living Room',\n    description: 'Comfortable sofas, elegant coffee tables, and stylish entertainment units',\n    icon: Sofa,\n    image: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: shopProducts.filter(p => p.category === 'Living Room').length,\n    startingPrice: 15000,\n    featured: true,\n    gradient: 'from-orange-500 to-red-600',\n    tags: ['Sofas', 'Coffee Tables', 'TV Units', 'Recliners']\n  },\n  {\n    id: 'bedroom',\n    name: 'Bedroom',\n    description: 'Luxury beds, wardrobes, and nightstands for your perfect sanctuary',\n    icon: Bed,\n    image: 'https://images.unsplash.com/photo-1540932239986-30128078f3c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: shopProducts.filter(p => p.category === 'Bedroom').length,\n    startingPrice: 12000,\n    featured: true,\n    gradient: 'from-blue-500 to-purple-600',\n    tags: ['Beds', 'Wardrobes', 'Nightstands', 'Dressers']\n  },\n  {\n    id: 'dining-room',\n    name: 'Dining Room',\n    description: 'Elegant dining tables and chairs for memorable family gatherings',\n    icon: UtensilsCrossed,\n    image: 'https://images.unsplash.com/photo-1449247709967-d4461a6a6103?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: shopProducts.filter(p => p.category === 'Dining Room').length,\n    startingPrice: 18000,\n    featured: true,\n    gradient: 'from-green-500 to-teal-600',\n    tags: ['Dining Tables', 'Chairs', 'Buffets', 'Bar Stools']\n  },\n  {\n    id: 'office',\n    name: 'Office',\n    description: 'Productive and comfortable workspace furniture for home and office',\n    icon: MonitorSpeaker,\n    image: 'https://images.unsplash.com/photo-1497366216548-37526070297c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: shopProducts.filter(p => p.category === 'Office').length,\n    startingPrice: 8000,\n    featured: false,\n    gradient: 'from-gray-500 to-gray-700',\n    tags: ['Desks', 'Chairs', 'Storage', 'Bookcases']\n  },\n  {\n    id: 'outdoor',\n    name: 'Outdoor',\n    description: 'Weather-resistant furniture for gardens, patios, and balconies',\n    icon: Home,\n    image: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: 15,\n    startingPrice: 5000,\n    featured: false,\n    gradient: 'from-green-400 to-blue-500',\n    tags: ['Garden Sets', 'Loungers', 'Umbrellas', 'Swings']\n  },\n  {\n    id: 'storage',\n    name: 'Storage',\n    description: 'Stylish storage solutions to keep your home organized and clutter-free',\n    icon: Package,\n    image: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: 12,\n    startingPrice: 3000,\n    featured: false,\n    gradient: 'from-purple-500 to-pink-600',\n    tags: ['Wardrobes', 'Shelves', 'Cabinets', 'Chests']\n  },\n  {\n    id: 'lighting',\n    name: 'Lighting',\n    description: 'Beautiful lamps and lighting fixtures to illuminate your space',\n    icon: Lamp,\n    image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: 8,\n    startingPrice: 2000,\n    featured: false,\n    gradient: 'from-yellow-400 to-orange-500',\n    tags: ['Table Lamps', 'Floor Lamps', 'Chandeliers', 'Wall Lights']\n  },\n  {\n    id: 'kids',\n    name: 'Kids Furniture',\n    description: 'Safe, colorful, and fun furniture designed specially for children',\n    icon: Heart,\n    image: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    productCount: 6,\n    startingPrice: 4000,\n    featured: false,\n    gradient: 'from-pink-400 to-red-500',\n    tags: ['Kids Beds', 'Study Tables', 'Toy Storage', 'Chairs']\n  }\n];\n\nexport default function CategoryPage() {\n  const [hoveredCategory, setHoveredCategory] = useState<string | null>(null);\n\n  // Separate featured and regular categories\n  const featuredCategories = furnitureCategories.filter(cat => cat.featured);\n  const regularCategories = furnitureCategories.filter(cat => !cat.featured);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n\n      {/* Hero Section */}\n      <section \n        className=\"relative h-96 flex items-center justify-center bg-cover bg-center\"\n        style={{ \n          backgroundImage: 'url(https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=1600&h=600)'\n        }}\n      >\n        <div className=\"absolute inset-0 bg-black bg-opacity-50\"></div>\n        <div className=\"relative z-10 text-center text-white max-w-4xl mx-auto px-6\">\n          <h1 className=\"font-serif text-5xl md:text-7xl font-bold mb-6\">\n            Furniture Categories\n          </h1>\n          <p className=\"text-xl md:text-2xl font-light mb-4 leading-relaxed\">\n            Explore our complete collection of premium furniture\n          </p>\n          <p className=\"text-lg text-cream-light\">\n            From living rooms to bedrooms, find everything you need to create your dream home\n          </p>\n        </div>\n      </section>\n\n      {/* Service Features Banner */}\n      <div className=\"bg-gradient-to-r from-terracotta to-terracotta-dark py-4\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center text-white\">\n            <div className=\"flex items-center justify-center space-x-2\">\n              <Truck className=\"w-5 h-5\" />\n              <span className=\"text-sm font-medium\">Free Delivery</span>\n            </div>\n            <div className=\"flex items-center justify-center space-x-2\">\n              <Shield className=\"w-5 h-5\" />\n              <span className=\"text-sm font-medium\">1 Year Warranty</span>\n            </div>\n            <div className=\"flex items-center justify-center space-x-2\">\n              <RefreshCw className=\"w-5 h-5\" />\n              <span className=\"text-sm font-medium\">Easy Returns</span>\n            </div>\n            <div className=\"flex items-center justify-center space-x-2\">\n              <Phone className=\"w-5 h-5\" />\n              <span className=\"text-sm font-medium\">24/7 Support</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-6 py-16\">\n        {/* Featured Categories Section */}\n        <div className=\"mb-16\">\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center mb-4\">\n              <Star className=\"w-6 h-6 text-terracotta mr-2\" />\n              <h2 className=\"text-4xl font-serif font-bold\">Featured Categories</h2>\n              <Star className=\"w-6 h-6 text-terracotta ml-2\" />\n            </div>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Our most popular furniture categories with the best selection and latest designs\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {featuredCategories.map((category) => (\n              <Link key={category.id} href={`/shop?category=${encodeURIComponent(category.name)}`}>\n                <Card \n                  className=\"group cursor-pointer transition-all duration-500 hover:shadow-2xl hover:-translate-y-4 overflow-hidden h-full\"\n                  onMouseEnter={() => setHoveredCategory(category.id)}\n                  onMouseLeave={() => setHoveredCategory(null)}\n                >\n                  <div className=\"relative h-64 overflow-hidden\">\n                    <img\n                      src={category.image}\n                      alt={category.name}\n                      className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-700\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent\"></div>\n                    <div className={`absolute top-4 left-4 p-3 rounded-full bg-gradient-to-r ${category.gradient} shadow-lg transform group-hover:scale-110 transition-transform duration-300`}>\n                      <category.icon className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <Badge className=\"absolute top-4 right-4 bg-terracotta text-white font-bold\">\n                      FEATURED\n                    </Badge>\n                    <div className=\"absolute bottom-4 left-4 text-white\">\n                      <h3 className=\"text-2xl font-serif font-bold mb-1\">{category.name}</h3>\n                      <p className=\"text-sm opacity-90\">{category.productCount} Products</p>\n                    </div>\n                  </div>\n                  \n                  <CardContent className=\"p-6\">\n                    <p className=\"text-muted-foreground mb-4 line-clamp-2\">\n                      {category.description}\n                    </p>\n                    \n                    {/* Tags */}\n                    <div className=\"flex flex-wrap gap-2 mb-4\">\n                      {category.tags.slice(0, 3).map((tag, index) => (\n                        <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                          {tag}\n                        </Badge>\n                      ))}\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm text-muted-foreground\">Starting from</span>\n                        <p className=\"text-xl font-bold text-terracotta\">\n                          ₹{category.startingPrice.toLocaleString()}\n                        </p>\n                      </div>\n                      <Button \n                        className=\"bg-terracotta hover:bg-terracotta-dark text-white group-hover:bg-terracotta-dark transition-colors\"\n                      >\n                        Explore\n                        <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        {/* All Categories Section */}\n        <div>\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center mb-4\">\n              <Home className=\"w-6 h-6 text-terracotta mr-2\" />\n              <h2 className=\"text-4xl font-serif font-bold\">All Categories</h2>\n              <Home className=\"w-6 h-6 text-terracotta ml-2\" />\n            </div>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Browse our complete range of furniture categories for every room and need\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {regularCategories.map((category) => (\n              <Link key={category.id} href={`/shop?category=${encodeURIComponent(category.name)}`}>\n                <Card \n                  className=\"group cursor-pointer transition-all duration-300 hover:shadow-lg hover:-translate-y-2 h-full\"\n                  onMouseEnter={() => setHoveredCategory(category.id)}\n                  onMouseLeave={() => setHoveredCategory(null)}\n                >\n                  <div className=\"relative h-48 overflow-hidden\">\n                    <img\n                      src={category.image}\n                      alt={category.name}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\"></div>\n                    <div className={`absolute top-3 left-3 p-2 rounded-lg bg-gradient-to-r ${category.gradient} shadow-md`}>\n                      <category.icon className=\"w-5 h-5 text-white\" />\n                    </div>\n                    <div className=\"absolute bottom-3 left-3 text-white\">\n                      <h3 className=\"text-lg font-serif font-bold\">{category.name}</h3>\n                      <p className=\"text-xs opacity-90\">{category.productCount} Products</p>\n                    </div>\n                  </div>\n                  \n                  <CardContent className=\"p-4\">\n                    <p className=\"text-sm text-muted-foreground mb-3 line-clamp-2\">\n                      {category.description}\n                    </p>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-xs text-muted-foreground\">From</span>\n                        <p className=\"text-lg font-bold text-terracotta\">\n                          ₹{category.startingPrice.toLocaleString()}\n                        </p>\n                      </div>\n                      <Button \n                        size=\"sm\"\n                        variant=\"outline\" \n                        className=\"group-hover:bg-terracotta group-hover:text-white group-hover:border-terracotta transition-colors\"\n                      >\n                        View\n                        <ArrowRight className=\"w-3 h-3 ml-1 group-hover:translate-x-1 transition-transform\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        {/* Categories Overview Stats */}\n        <div className=\"mt-16 bg-cream rounded-lg p-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 text-center\">\n            <div>\n              <div className=\"flex items-center justify-center mb-2\">\n                <TrendingUp className=\"w-8 h-8 text-terracotta\" />\n              </div>\n              <h3 className=\"text-3xl font-bold text-terracotta\">8+</h3>\n              <p className=\"text-sm text-muted-foreground\">Categories</p>\n            </div>\n            <div>\n              <div className=\"flex items-center justify-center mb-2\">\n                <Package className=\"w-8 h-8 text-terracotta\" />\n              </div>\n              <h3 className=\"text-3xl font-bold text-terracotta\">500+</h3>\n              <p className=\"text-sm text-muted-foreground\">Products</p>\n            </div>\n            <div>\n              <div className=\"flex items-center justify-center mb-2\">\n                <Users className=\"w-8 h-8 text-terracotta\" />\n              </div>\n              <h3 className=\"text-3xl font-bold text-terracotta\">10K+</h3>\n              <p className=\"text-sm text-muted-foreground\">Happy Customers</p>\n            </div>\n            <div>\n              <div className=\"flex items-center justify-center mb-2\">\n                <Award className=\"w-8 h-8 text-terracotta\" />\n              </div>\n              <h3 className=\"text-3xl font-bold text-terracotta\">5★</h3>\n              <p className=\"text-sm text-muted-foreground\">Average Rating</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"mt-16 text-center\">\n          <div className=\"bg-gradient-to-r from-terracotta to-terracotta-dark rounded-lg p-12 text-white\">\n            <h2 className=\"text-3xl font-serif font-bold mb-4\">\n              Can't Find What You're Looking For?\n            </h2>\n            <p className=\"text-lg mb-6 opacity-90\">\n              Visit our complete shop to browse all products across categories\n            </p>\n            <Link href=\"/shop\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-terracotta hover:bg-cream-dark font-semibold px-8 py-3\"\n              >\n                Browse All Products\n                <ArrowRight className=\"w-5 h-5 ml-2\" />\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","size_bytes":16817},"client/src/lib/authContext.tsx":{"content":"import { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\nimport { apiUrl } from \"./config\";\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n}\n\nexport interface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<{ success: boolean; error?: string }>;\n  signup: (name: string, email: string, password: string) => Promise<{ success: boolean; error?: string }>;\n  logout: () => void;\n  sendOTP: (email: string) => Promise<{ success: boolean; error?: string }>;\n  verifyOTP: (email: string, otp: string) => Promise<{ success: boolean; error?: string }>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      // In a real app, you might want to validate the token with the server\n      // For now, we'll assume it's valid if it exists\n      const userData = localStorage.getItem(\"authUser\");\n      if (userData) {\n        try {\n          setUser(JSON.parse(userData));\n        } catch (error) {\n          console.error(\"Error parsing user data:\", error);\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"authUser\");\n        }\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string): Promise<{ success: boolean; error?: string }> => {\n    try {\n      const response = await fetch(apiUrl(\"/api/login\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem(\"authToken\", data.token);\n        localStorage.setItem(\"authUser\", JSON.stringify(data.user));\n        setUser(data.user);\n        return { success: true };\n      } else {\n        return { success: false, error: data.message || data.error || \"Login failed\" };\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return { success: false, error: \"Network error occurred\" };\n    }\n  };\n\n  const signup = async (name: string, email: string, password: string): Promise<{ success: boolean; error?: string }> => {\n    try {\n      const response = await fetch(apiUrl(\"/api/signup\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem(\"authToken\", data.token);\n        localStorage.setItem(\"authUser\", JSON.stringify(data.user));\n        setUser(data.user);\n        return { success: true };\n      } else {\n        return { success: false, error: data.message || data.error || \"Signup failed\" };\n      }\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n      return { success: false, error: \"Network error occurred\" };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"authUser\");\n    setUser(null);\n  };\n\n  const sendOTP = async (email: string): Promise<{ success: boolean; error?: string }> => {\n    try {\n      const response = await fetch(apiUrl(\"/api/send-otp\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        return { success: true };\n      } else {\n        return { success: false, error: data.message || data.error || \"Failed to send OTP\" };\n      }\n    } catch (error) {\n      console.error(\"Send OTP error:\", error);\n      return { success: false, error: \"Network error occurred\" };\n    }\n  };\n\n  const verifyOTP = async (email: string, otp: string): Promise<{ success: boolean; error?: string }> => {\n    try {\n      const response = await fetch(apiUrl(\"/api/verify-otp\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, otp }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Update user's email verification status if they're logged in\n        if (user && user.email === email) {\n          const updatedUser = { ...user, emailVerified: true };\n          setUser(updatedUser);\n          localStorage.setItem(\"authUser\", JSON.stringify(updatedUser));\n        }\n        return { success: true };\n      } else {\n        return { success: false, error: data.error || \"Failed to verify OTP\" };\n      }\n    } catch (error) {\n      console.error(\"Verify OTP error:\", error);\n      return { success: false, error: \"Network error occurred\" };\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    signup,\n    logout,\n    sendOTP,\n    verifyOTP,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}","size_bytes":5633},"client/src/pages/login.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Loader2, Eye, EyeOff } from \"lucide-react\";\nimport { useAuth } from \"@/lib/authContext\";\nimport { Header } from \"@/components/Header\";\n\nexport default function Login() {\n  const [, setLocation] = useLocation();\n  const { login, isLoading } = useAuth();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsSubmitting(true);\n\n    try {\n      const result = await login(email, password);\n      if (result.success) {\n        setLocation(\"/\");\n      } else {\n        setError(result.error || \"Login failed\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Loader2 className=\"w-8 h-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-cream\">\n      <Header variant=\"solid\" className=\"relative bg-white shadow-sm\" />\n      \n      <div className=\"container mx-auto px-6 pt-32 pb-12\">\n        <div className=\"max-w-md mx-auto\">\n          <Card className=\"shadow-lg border-0\">\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl font-serif\">Welcome Back</CardTitle>\n              <CardDescription>\n                Sign in to your SM Furnishings account\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                {error && (\n                  <Alert variant=\"destructive\">\n                    <AlertDescription>{error}</AlertDescription>\n                  </Alert>\n                )}\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter your email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    disabled={isSubmitting}\n                    className=\"h-12\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <div className=\"relative\">\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      placeholder=\"Enter your password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                      disabled={isSubmitting}\n                      className=\"h-12 pr-10\"\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"absolute right-0 top-0 h-12 px-3 hover:bg-transparent\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      disabled={isSubmitting}\n                    >\n                      {showPassword ? (\n                        <EyeOff className=\"w-4 h-4\" />\n                      ) : (\n                        <Eye className=\"w-4 h-4\" />\n                      )}\n                    </Button>\n                  </div>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full h-12 bg-terracotta hover:bg-terracotta-dark text-white font-medium\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? (\n                    <>\n                      <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                      Signing In...\n                    </>\n                  ) : (\n                    \"Sign In\"\n                  )}\n                </Button>\n              </form>\n\n              <div className=\"mt-6 text-center space-y-3\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Don't have an account?{\" \"}\n                  <Link href=\"/signup\" className=\"text-terracotta hover:underline font-medium\">\n                    Sign up here\n                  </Link>\n                </p>\n                \n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":5087},"client/src/pages/profile.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Loader2, User, Mail, Calendar, Shield, LogOut, CheckCircle, AlertCircle, Settings, ShoppingBag, Heart, Award, Package, CreditCard, Truck, Phone, MapPin, Receipt, Calendar as CalendarIcon, CheckCircle2, Clock, XCircle } from \"lucide-react\";\nimport { useAuth } from \"@/lib/authContext\";\nimport { useWishlist } from \"@/lib/wishlistContext\";\nimport { Header } from \"@/components/Header\";\nimport { useQuery } from \"@tanstack/react-query\";\n\ninterface OrderItem {\n  product_id: string;\n  product_name: string;\n  quantity: number;\n  price: number;\n}\n\ninterface OrderCustomer {\n  name: string;\n  email: string;\n  phone: string;\n  address: string;\n  city: string;\n  state: string;\n  pin_code: string;\n  country: string;\n}\n\ninterface OrderPricing {\n  subtotal: number;\n  tax: number;\n  shipping: number;\n  discount?: number | null;\n  total: number;\n}\n\ninterface OrderPayment {\n  method: string;\n  status: string;\n  razorpay_order_id?: string;\n  razorpay_payment_id?: string;\n  razorpay_signature?: string | null;\n  transaction_id?: string | null;\n  payment_date?: string | null;\n}\n\ninterface Order {\n  _id: string;\n  order_id: string;\n  order_date: string;\n  status: string;\n  user: {\n    user_id?: string | null;\n    username: string;\n    user_email: string;\n  };\n  items: OrderItem[];\n  customer: OrderCustomer;\n  pricing: OrderPricing;\n  payment: OrderPayment;\n  shipping?: any;\n  notes?: string | null;\n  invoice_number?: string | null;\n  is_deleted: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface OrdersResponse {\n  success: boolean;\n  message: string;\n  count: number;\n  email: string;\n  orders: Order[];\n}\n\nexport default function Profile() {\n  const [, setLocation] = useLocation();\n  const { user, logout, sendOTP, verifyOTP, isAuthenticated } = useAuth();\n  const { setIsWishlistOpen } = useWishlist();\n  const [otp, setOtp] = useState(\"\");\n  const [showOtpVerification, setShowOtpVerification] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\n\n  // Fetch user orders\n  const { data: ordersData, isLoading: ordersLoading, error: ordersError } = useQuery<OrdersResponse>({\n    queryKey: ['orders', user?.email],\n    enabled: !!user?.email,\n    staleTime: 300000, // 5 minutes\n    refetchOnWindowFocus: false,\n    queryFn: async () => {\n      if (!user?.email) throw new Error('No user email found');\n      \n      const response = await fetch(`https://sm-furnishing-backend.onrender.com/api/orders/${encodeURIComponent(user.email)}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch orders: ${response.status}`);\n      }\n      \n      return response.json();\n    }\n  });\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated || !user) {\n    setLocation(\"/login\");\n    return null;\n  }\n\n  const handleLogout = () => {\n    logout();\n    setLocation(\"/\");\n  };\n\n  const handleSendOtp = async () => {\n    setError(\"\");\n    setSuccess(\"\");\n    setIsSubmitting(true);\n\n    try {\n      const result = await sendOTP(user.email);\n      if (result.success) {\n        setShowOtpVerification(true);\n        setSuccess(\"Verification code sent to your email\");\n      } else {\n        setError(result.error || \"Failed to send verification code\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleVerifyOtp = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    setIsSubmitting(true);\n\n    try {\n      const result = await verifyOTP(user.email, otp);\n      if (result.success) {\n        setSuccess(\"Email verified successfully!\");\n        setShowOtpVerification(false);\n        setOtp(\"\");\n      } else {\n        setError(result.error || \"Invalid verification code\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen relative overflow-hidden\" data-testid=\"profile-page\">\n      {/* Background with elegant gradient and animated elements */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-terracotta/10 via-cream to-terracotta/20\"></div>\n      \n      {/* Moving geometric shapes */}\n      <div className=\"absolute inset-0\">\n        <div className=\"floating-shape floating-shape-1\"></div>\n        <div className=\"floating-shape floating-shape-2\"></div>\n        <div className=\"floating-shape floating-shape-3\"></div>\n        <div className=\"floating-shape floating-shape-4\"></div>\n        <div className=\"floating-shape floating-shape-5\"></div>\n        <div className=\"floating-shape floating-shape-6\"></div>\n      </div>\n      \n      {/* Subtle pattern overlay */}\n      <div className=\"absolute inset-0\" style={{\n        backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23b5835a' fill-opacity='0.03'%3E%3Cpath d='m36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n        opacity: 0.2\n      }}></div>\n      \n      <Header variant=\"solid\" className=\"relative bg-white/95 backdrop-blur-md shadow-lg border-b border-terracotta/20\" />\n      \n      <div className=\"relative container mx-auto px-6 pt-20 pb-12\">\n        <div className=\"max-w-6xl mx-auto\">\n          \n          {/* Welcome Header with elegant design */}\n          <div className=\"text-center mb-12\" data-testid=\"profile-header\">\n            <div className=\"inline-flex items-center gap-3 mb-4\">\n              <div className=\"w-1 h-8 bg-terracotta rounded-full\"></div>\n              <h1 className=\"text-4xl md:text-5xl font-serif font-bold text-foreground\">Account Dashboard</h1>\n              <div className=\"w-1 h-8 bg-terracotta rounded-full\"></div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-8\">\n            \n            {/* Left Column - Profile Info */}\n            <div className=\"xl:col-span-1 space-y-6\">\n              \n              {/* Profile Card with elegant design */}\n              <Card className=\"relative bg-gradient-to-br from-white to-cream/50 shadow-2xl border-0 overflow-hidden\" data-testid=\"profile-card\">\n                <div className=\"absolute top-0 right-0 w-32 h-32 bg-terracotta/10 rounded-full -translate-y-16 translate-x-16\"></div>\n                <div className=\"absolute bottom-0 left-0 w-24 h-24 bg-terracotta/5 rounded-full translate-y-12 -translate-x-12\"></div>\n                \n                <CardHeader className=\"text-center pb-6 relative\">\n                  <div className=\"relative mx-auto mb-6\">\n                    <div className=\"w-24 h-24 bg-gradient-to-br from-terracotta to-terracotta-dark rounded-full flex items-center justify-center shadow-lg ring-4 ring-white\">\n                      <User className=\"w-12 h-12 text-white\" />\n                    </div>\n                  </div>\n                  <CardTitle className=\"text-2xl font-serif font-bold text-foreground mb-2\" data-testid=\"user-name\">{user.name}</CardTitle>\n                  <CardDescription className=\"flex items-center justify-center gap-2 text-base\">\n                    <Mail className=\"w-4 h-4 text-terracotta\" />\n                    <span className=\"font-medium\" data-testid=\"user-email\">{user.email}</span>\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n\n              {/* Quick Stats */}\n              <Card className=\"bg-gradient-to-br from-white to-cream/30 shadow-xl border-0\" data-testid=\"stats-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2 text-lg\">\n                    <Award className=\"w-5 h-5 text-terracotta\" />\n                    Account Stats\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center p-4 bg-gradient-to-br from-terracotta/10 to-terracotta/5 rounded-xl\">\n                      <ShoppingBag className=\"w-6 h-6 text-terracotta mx-auto mb-2\" />\n                      <p className=\"text-2xl font-bold text-foreground\" data-testid=\"orders-count\">\n                        {ordersLoading ? '...' : ordersData?.count || 0}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">Orders</p>\n                    </div>\n                    <div className=\"text-center p-4 bg-gradient-to-br from-pink-100 to-pink-50 rounded-xl\">\n                      <Heart className=\"w-6 h-6 text-pink-500 mx-auto mb-2\" />\n                      <p className=\"text-2xl font-bold text-foreground\">0</p>\n                      <p className=\"text-sm text-muted-foreground\">Wishlist</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Right Column - Account Information */}\n            <div className=\"xl:col-span-2 space-y-6\">\n              \n              {/* Account Information with modern design */}\n              <Card className=\"bg-gradient-to-br from-white to-cream/30 shadow-xl border-0 overflow-hidden\" data-testid=\"account-info-card\">\n                <div className=\"absolute top-0 right-0 w-40 h-40 bg-gradient-to-br from-terracotta/5 to-transparent rounded-full -translate-y-20 translate-x-20\"></div>\n                \n                <CardHeader className=\"relative\">\n                  <CardTitle className=\"flex items-center gap-3 text-2xl\">\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-terracotta to-terracotta-dark rounded-lg flex items-center justify-center\">\n                      <Shield className=\"w-5 h-5 text-white\" />\n                    </div>\n                    Account Information\n                  </CardTitle>\n                  <CardDescription className=\"text-base\">Manage your personal details and preferences</CardDescription>\n                </CardHeader>\n                \n                <CardContent className=\"space-y-6 relative\">\n                  {/* Personal Information */}\n                  <div className=\"bg-gradient-to-r from-cream/50 to-white rounded-xl p-6 border border-terracotta/10\">\n                    <h3 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n                      <User className=\"w-5 h-5 text-terracotta\" />\n                      Personal Details\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-2\">\n                        <Label className=\"text-sm font-semibold text-terracotta uppercase tracking-wide\">Full Name</Label>\n                        <div className=\"bg-white rounded-lg p-3 border border-terracotta/20\">\n                          <p className=\"text-lg font-medium text-foreground\" data-testid=\"display-name\">{user.name}</p>\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label className=\"text-sm font-semibold text-terracotta uppercase tracking-wide\">Email Address</Label>\n                        <div className=\"bg-white rounded-lg p-3 border border-terracotta/20\">\n                          <p className=\"text-lg font-medium text-foreground break-all md:break-normal\" data-testid=\"display-email\">{user.email}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Email Verification Status */}\n                  <div className=\"bg-gradient-to-r from-white to-cream/30 rounded-xl p-6 border border-terracotta/10\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"font-semibold text-lg flex items-center gap-2\">\n                        <Mail className=\"w-5 h-5 text-terracotta\" />\n                        Email Verification\n                      </h3>\n                      {user.emailVerified ? (\n                        <Badge className=\"bg-gradient-to-r from-green-500 to-emerald-500 text-white border-0 shadow-md\" data-testid=\"verified-badge\">\n                          <CheckCircle className=\"w-3 h-3 mr-1\" />\n                          Verified\n                        </Badge>\n                      ) : (\n                        <Badge variant=\"destructive\" className=\"bg-gradient-to-r from-red-500 to-rose-500 text-white border-0 shadow-md\" data-testid=\"unverified-badge\">\n                          <AlertCircle className=\"w-3 h-3 mr-1\" />\n                          Not Verified\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    {!user.emailVerified && (\n                      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                        <p className=\"text-red-700 mb-3\">Please verify your email address to access all features.</p>\n                        <Button\n                          onClick={handleSendOtp}\n                          disabled={isSubmitting}\n                          className=\"bg-gradient-to-r from-terracotta to-terracotta-dark hover:from-terracotta-dark hover:to-terracotta text-white border-0 shadow-md\"\n                          data-testid=\"verify-email-button\"\n                        >\n                          {isSubmitting ? (\n                            <>\n                              <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                              Sending...\n                            </>\n                          ) : (\n                            <>\n                              <Mail className=\"w-4 h-4 mr-2\" />\n                              Verify Email\n                            </>\n                          )}\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* OTP Verification Card */}\n              {showOtpVerification && (\n                <Card className=\"bg-gradient-to-br from-blue-50 to-indigo-50 shadow-xl border-0\" data-testid=\"otp-card\">\n                  <CardHeader>\n                    <CardTitle className=\"text-xl text-blue-700\">Email Verification</CardTitle>\n                    <CardDescription className=\"text-blue-600\">\n                      Enter the verification code sent to {user.email}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <form onSubmit={handleVerifyOtp} className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"otp\" className=\"text-blue-700 font-semibold\">Verification Code</Label>\n                        <Input\n                          id=\"otp\"\n                          type=\"text\"\n                          placeholder=\"Enter 6-digit code\"\n                          value={otp}\n                          onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n                          required\n                          disabled={isSubmitting}\n                          className=\"h-12 text-center text-lg tracking-wider border-blue-200 focus:border-blue-400\"\n                          maxLength={6}\n                          data-testid=\"otp-input\"\n                        />\n                      </div>\n\n                      <div className=\"flex gap-2\">\n                        <Button\n                          type=\"submit\"\n                          className=\"flex-1 bg-gradient-to-r from-blue-500 to-indigo-500 hover:from-blue-600 hover:to-indigo-600 text-white\"\n                          disabled={isSubmitting || otp.length !== 6}\n                          data-testid=\"verify-otp-button\"\n                        >\n                          {isSubmitting ? (\n                            <>\n                              <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                              Verifying...\n                            </>\n                          ) : (\n                            \"Verify\"\n                          )}\n                        </Button>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          onClick={() => setShowOtpVerification(false)}\n                          disabled={isSubmitting}\n                          className=\"border-blue-200 text-blue-600 hover:bg-blue-50\"\n                          data-testid=\"cancel-otp-button\"\n                        >\n                          Cancel\n                        </Button>\n                      </div>\n                    </form>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Orders Section */}\n              <Card className=\"bg-gradient-to-br from-white to-cream/30 shadow-xl border-0\" data-testid=\"orders-section\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-3 text-2xl\">\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-terracotta to-terracotta-dark rounded-lg flex items-center justify-center\">\n                      <Package className=\"w-5 h-5 text-white\" />\n                    </div>\n                    My Orders\n                    {ordersData?.count && (\n                      <Badge className=\"bg-terracotta text-white ml-2\">\n                        {ordersData.count}\n                      </Badge>\n                    )}\n                  </CardTitle>\n                  <CardDescription>Track and manage your furniture orders</CardDescription>\n                </CardHeader>\n                \n                <CardContent className=\"space-y-4\">\n                  {ordersLoading ? (\n                    <div className=\"flex items-center justify-center py-8\">\n                      <Loader2 className=\"w-8 h-8 animate-spin text-terracotta\" />\n                      <span className=\"ml-2 text-muted-foreground\">Loading your orders...</span>\n                    </div>\n                  ) : ordersError ? (\n                    <div className=\"text-center py-8\">\n                      <XCircle className=\"w-12 h-12 text-red-500 mx-auto mb-2\" />\n                      <p className=\"text-red-600 font-medium\">Failed to load orders</p>\n                      <p className=\"text-sm text-muted-foreground\">Please try again later</p>\n                    </div>\n                  ) : !ordersData?.orders?.length ? (\n                    <div className=\"text-center py-8\">\n                      <Package className=\"w-12 h-12 text-muted-foreground mx-auto mb-2\" />\n                      <p className=\"text-lg font-medium text-muted-foreground\">No orders yet</p>\n                      <p className=\"text-sm text-muted-foreground mb-4\">Start shopping to see your orders here</p>\n                      <Link href=\"/shop\">\n                        <Button className=\"bg-terracotta hover:bg-terracotta-dark text-white\">\n                          <ShoppingBag className=\"w-4 h-4 mr-2\" />\n                          Start Shopping\n                        </Button>\n                      </Link>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n                      {ordersData.orders.map((order) => (\n                        <div\n                          key={order._id}\n                          className=\"bg-gradient-to-r from-white to-cream/50 rounded-xl p-6 border border-terracotta/10 hover:border-terracotta/30 transition-all duration-200 cursor-pointer\"\n                          onClick={() => setSelectedOrder(order)}\n                          data-testid={`order-${order.order_id}`}\n                        >\n                          {/* Mobile-optimized order header */}\n                          <div className=\"space-y-3 md:space-y-0 md:flex md:items-start md:justify-between mb-4\">\n                            <div className=\"flex-1\">\n                              <div className=\"flex flex-wrap items-center gap-2 mb-2\">\n                                <h3 className=\"font-bold text-lg text-foreground\">\n                                  Order #{order.order_id.slice(-8)}\n                                </h3>\n                                <Badge\n                                  className={`${\n                                    order.status === 'completed'\n                                      ? 'bg-green-100 text-green-700 border-green-200'\n                                      : order.status === 'pending'\n                                      ? 'bg-yellow-100 text-yellow-700 border-yellow-200'\n                                      : 'bg-gray-100 text-gray-700 border-gray-200'\n                                  }`}\n                                >\n                                  {order.status === 'completed' && <CheckCircle2 className=\"w-3 h-3 mr-1\" />}\n                                  {order.status === 'pending' && <Clock className=\"w-3 h-3 mr-1\" />}\n                                  {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                                </Badge>\n                              </div>\n                              <p className=\"text-sm text-muted-foreground flex items-center gap-1\">\n                                <CalendarIcon className=\"w-4 h-4 flex-shrink-0\" />\n                                <span className=\"break-words\">\n                                  {new Date(order.order_date).toLocaleDateString('en-IN', {\n                                    year: 'numeric',\n                                    month: 'long',\n                                    day: 'numeric',\n                                    hour: '2-digit',\n                                    minute: '2-digit'\n                                  })}\n                                </span>\n                              </p>\n                            </div>\n                            <div className=\"text-left md:text-right\">\n                              <p className=\"text-2xl font-bold text-terracotta\">\n                                ₹{order.pricing.total.toLocaleString()}\n                              </p>\n                              <p className=\"text-sm text-muted-foreground\">\n                                {order.items.length} item{order.items.length > 1 ? 's' : ''}\n                              </p>\n                            </div>\n                          </div>\n                          \n                          {/* Mobile-friendly order details */}\n                          <div className=\"space-y-2 md:space-y-0 md:grid md:grid-cols-3 md:gap-4 text-sm\">\n                            <div className=\"flex items-center gap-2\">\n                              <CreditCard className=\"w-4 h-4 text-muted-foreground flex-shrink-0\" />\n                              <span className=\"capitalize text-muted-foreground\">\n                                {order.payment.method === 'razorpay' ? 'Online Payment' : 'Cash on Delivery'}\n                              </span>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <MapPin className=\"w-4 h-4 text-muted-foreground flex-shrink-0\" />\n                              <span className=\"text-muted-foreground\">\n                                {order.customer.city}, {order.customer.state}\n                              </span>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <Receipt className=\"w-4 h-4 text-muted-foreground flex-shrink-0\" />\n                              <span className=\"text-muted-foreground\">\n                                {order.invoice_number ? `INV-${order.invoice_number.slice(-8)}` : 'No Invoice'}\n                              </span>\n                            </div>\n                          </div>\n                          \n                          <div className=\"mt-4 pt-4 border-t border-terracotta/10\">\n                            <div className=\"flex flex-wrap gap-2\">\n                              {order.items.slice(0, 3).map((item, index) => (\n                                <span\n                                  key={index}\n                                  className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-terracotta/10 text-terracotta-dark\"\n                                >\n                                  {item.product_name} x{item.quantity}\n                                </span>\n                              ))}\n                              {order.items.length > 3 && (\n                                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-muted text-muted-foreground\">\n                                  +{order.items.length - 3} more\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n\n              {/* Account Actions */}\n              <Card className=\"bg-gradient-to-br from-white to-cream/30 shadow-xl border-0\" data-testid=\"actions-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-3 text-xl\">\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-terracotta to-terracotta-dark rounded-lg flex items-center justify-center\">\n                      <Settings className=\"w-4 h-4 text-white\" />\n                    </div>\n                    Quick Actions\n                  </CardTitle>\n                  <CardDescription>Manage your account and continue your shopping experience</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full h-14 bg-gradient-to-br from-white to-cream/50 border-terracotta/30 hover:border-terracotta hover:bg-terracotta/5 transition-all duration-200\"\n                      onClick={() => {\n                        window.scrollTo(0, 0);\n                        setLocation('/shop');\n                      }}\n                      data-testid=\"button-continue-shopping\"\n                    >\n                      <ShoppingBag className=\"w-5 h-5 mr-2 text-terracotta\" />\n                      <div className=\"text-left\">\n                        <p className=\"font-medium\">Continue Shopping</p>\n                        <p className=\"text-xs text-muted-foreground\">Browse our collection</p>\n                      </div>\n                    </Button>\n                    \n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full h-14 bg-gradient-to-br from-white to-pink-50/50 border-pink-200 hover:border-pink-300 hover:bg-pink-50 transition-all duration-200\" \n                      onClick={() => setIsWishlistOpen(true)}\n                      data-testid=\"wishlist-button\"\n                    >\n                      <Heart className=\"w-5 h-5 mr-2 text-pink-500\" />\n                      <div className=\"text-left\">\n                        <p className=\"font-medium\">My Wishlist</p>\n                        <p className=\"text-xs text-muted-foreground\">Saved items</p>\n                      </div>\n                    </Button>\n                    \n                    <Button\n                      onClick={handleLogout}\n                      className=\"w-full h-14 bg-gradient-to-r from-red-500 to-rose-500 hover:from-red-600 hover:to-rose-600 text-white border-0 shadow-md transition-all duration-200\"\n                      data-testid=\"logout-button\"\n                    >\n                      <LogOut className=\"w-5 h-5 mr-2\" />\n                      <div className=\"text-left\">\n                        <p className=\"font-medium\">Sign Out</p>\n                      </div>\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* Order Details Modal */}\n          {selectedOrder && (\n            <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\" onClick={() => setSelectedOrder(null)}>\n              <div className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"sticky top-0 bg-white border-b border-gray-200 p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h2 className=\"text-2xl font-bold text-foreground\">Order Details</h2>\n                      <p className=\"text-muted-foreground\">Order #{selectedOrder.order_id}</p>\n                    </div>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setSelectedOrder(null)}\n                      className=\"border-gray-300 hover:bg-gray-50\"\n                    >\n                      ✕ Close\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"p-6 space-y-6\">\n                  {/* Order Status & Summary */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    <Card className=\"bg-gradient-to-br from-terracotta/5 to-terracotta/10 border-terracotta/20\">\n                      <CardContent className=\"p-4 text-center\">\n                        <div className=\"w-12 h-12 bg-terracotta rounded-full flex items-center justify-center mx-auto mb-2\">\n                          <Package className=\"w-6 h-6 text-white\" />\n                        </div>\n                        <p className=\"font-bold text-2xl text-terracotta\">₹{selectedOrder.pricing.total.toLocaleString()}</p>\n                        <p className=\"text-sm text-muted-foreground\">Total Amount</p>\n                      </CardContent>\n                    </Card>\n                    \n                    <Card className=\"bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\n                      <CardContent className=\"p-4 text-center\">\n                        <div className=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-2\">\n                          <CheckCircle2 className=\"w-6 h-6 text-white\" />\n                        </div>\n                        <p className=\"font-bold text-green-700 capitalize\">{selectedOrder.status}</p>\n                        <p className=\"text-sm text-muted-foreground\">Order Status</p>\n                      </CardContent>\n                    </Card>\n                    \n                    <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200\">\n                      <CardContent className=\"p-4 text-center\">\n                        <div className=\"w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-2\">\n                          <CreditCard className=\"w-6 h-6 text-white\" />\n                        </div>\n                        <p className=\"font-bold text-blue-700 capitalize\">\n                          {selectedOrder.payment.method === 'razorpay' ? 'Online' : 'COD'}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">Payment Method</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                  \n                  {/* Order Items */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Package className=\"w-5 h-5 text-terracotta\" />\n                        Order Items ({selectedOrder.items.length})\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        {selectedOrder.items.map((item, index) => (\n                          <div key={index} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                            <div className=\"flex-1\">\n                              <h4 className=\"font-medium text-foreground\">{item.product_name}</h4>\n                              <p className=\"text-sm text-muted-foreground\">Product ID: {item.product_id}</p>\n                            </div>\n                            <div className=\"text-center mx-4\">\n                              <p className=\"font-medium\">Qty: {item.quantity}</p>\n                            </div>\n                            <div className=\"text-right\">\n                              <p className=\"font-bold text-terracotta\">₹{item.price.toLocaleString()}</p>\n                              <p className=\"text-sm text-muted-foreground\">₹{(item.price * item.quantity).toLocaleString()} total</p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                  \n                  {/* Shipping & Customer Info */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-5 h-5 text-terracotta\" />\n                          Shipping Address\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-2\">\n                        <p className=\"font-medium\">{selectedOrder.customer.name}</p>\n                        <p className=\"text-sm text-muted-foreground\">{selectedOrder.customer.address}</p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {selectedOrder.customer.city}, {selectedOrder.customer.state} - {selectedOrder.customer.pin_code}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">{selectedOrder.customer.country}</p>\n                        <div className=\"pt-2 border-t\">\n                          <p className=\"text-sm flex items-center gap-2\">\n                            <Phone className=\"w-4 h-4\" />\n                            {selectedOrder.customer.phone}\n                          </p>\n                          <p className=\"text-sm flex items-center gap-2\">\n                            <Mail className=\"w-4 h-4\" />\n                            {selectedOrder.customer.email}\n                          </p>\n                        </div>\n                      </CardContent>\n                    </Card>\n                    \n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\">\n                          <Receipt className=\"w-5 h-5 text-terracotta\" />\n                          Order Summary\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-3\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Subtotal:</span>\n                          <span>₹{selectedOrder.pricing.subtotal.toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Shipping:</span>\n                          <span className=\"text-green-600 font-medium\">\n                            {selectedOrder.pricing.shipping === 0 ? 'Free' : `₹${selectedOrder.pricing.shipping.toLocaleString()}`}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Tax (GST):</span>\n                          <span>₹{selectedOrder.pricing.tax.toLocaleString()}</span>\n                        </div>\n                        {selectedOrder.pricing.discount && (\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Discount:</span>\n                            <span className=\"text-green-600\">-₹{selectedOrder.pricing.discount.toLocaleString()}</span>\n                          </div>\n                        )}\n                        <Separator />\n                        <div className=\"flex justify-between text-lg font-bold\">\n                          <span>Total:</span>\n                          <span className=\"text-terracotta\">₹{selectedOrder.pricing.total.toLocaleString()}</span>\n                        </div>\n                        \n                        {selectedOrder.invoice_number && (\n                          <div className=\"pt-3 border-t\">\n                            <p className=\"text-sm text-muted-foreground\">\n                              Invoice: {selectedOrder.invoice_number}\n                            </p>\n                          </div>\n                        )}\n                        \n                        <div className=\"pt-3 border-t\">\n                          <p className=\"text-sm text-muted-foreground\">\n                            Order Date: {new Date(selectedOrder.order_date).toLocaleDateString('en-IN', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: 'numeric',\n                              hour: '2-digit',\n                              minute: '2-digit'\n                            })}\n                          </p>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Alerts */}\n          {error && (\n            <Alert variant=\"destructive\" className=\"mt-6 bg-gradient-to-r from-red-50 to-rose-50 border-red-200\" data-testid=\"error-alert\">\n              <AlertCircle className=\"w-4 h-4\" />\n              <AlertDescription className=\"text-red-800\">{error}</AlertDescription>\n            </Alert>\n          )}\n\n          {success && (\n            <Alert className=\"mt-6 bg-gradient-to-r from-green-50 to-emerald-50 border-green-200\" data-testid=\"success-alert\">\n              <CheckCircle className=\"w-4 h-4 text-green-600\" />\n              <AlertDescription className=\"text-green-700\">{success}</AlertDescription>\n            </Alert>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":39765},"client/src/pages/signup.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Loader2, Eye, EyeOff, CheckCircle } from \"lucide-react\";\nimport { useAuth } from \"@/lib/authContext\";\nimport { Header } from \"@/components/Header\";\n\nexport default function Signup() {\n  const [, setLocation] = useLocation();\n  const { signup, sendOTP, verifyOTP, isLoading } = useAuth();\n  const [step, setStep] = useState<\"form\" | \"otp\">(\"form\");\n  \n  // Form state\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n  // OTP state\n  const [otp, setOtp] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  \n  // UI state\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const validatePassword = (password: string) => {\n    const minLength = password.length >= 8;\n    const hasUpper = /[A-Z]/.test(password);\n    const hasLower = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    \n    return {\n      minLength,\n      hasUpper,\n      hasLower,\n      hasNumber,\n      isValid: minLength && hasUpper && hasLower && hasNumber\n    };\n  };\n\n  const passwordValidation = validatePassword(password);\n\n  const handleSignupSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    if (!passwordValidation.isValid) {\n      setError(\"Password does not meet requirements\");\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const result = await signup(name, email, password);\n      if (result.success) {\n        // Send OTP for email verification\n        const otpResult = await sendOTP(email);\n        if (otpResult.success) {\n          setOtpSent(true);\n          setStep(\"otp\");\n        } else {\n          setError(otpResult.error || \"Failed to send verification code\");\n        }\n      } else {\n        setError(result.error || \"Signup failed\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleOtpSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsSubmitting(true);\n\n    try {\n      const result = await verifyOTP(email, otp);\n      if (result.success) {\n        setLocation(\"/\");\n      } else {\n        setError(result.error || \"Invalid verification code\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleResendOtp = async () => {\n    setError(\"\");\n    setIsSubmitting(true);\n\n    try {\n      const result = await sendOTP(email);\n      if (result.success) {\n        setOtpSent(true);\n        setError(\"\");\n      } else {\n        setError(result.error || \"Failed to resend verification code\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Loader2 className=\"w-8 h-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-cream\">\n      <Header variant=\"solid\" className=\"relative bg-white shadow-sm\" />\n      \n      <div className=\"container mx-auto px-6 pt-32 pb-12\">\n        <div className=\"max-w-md mx-auto\">\n          <Card className=\"shadow-lg border-0\">\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl font-serif\">\n                {step === \"form\" ? \"Create Account\" : \"Verify Email\"}\n              </CardTitle>\n              <CardDescription>\n                {step === \"form\" \n                  ? \"Join SM Furnishings and discover beautiful furniture\"\n                  : `Enter the verification code sent to ${email}`\n                }\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {step === \"form\" ? (\n                <form onSubmit={handleSignupSubmit} className=\"space-y-4\">\n                  {error && (\n                    <Alert variant=\"destructive\">\n                      <AlertDescription>{error}</AlertDescription>\n                    </Alert>\n                  )}\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"name\">Full Name</Label>\n                    <Input\n                      id=\"name\"\n                      type=\"text\"\n                      placeholder=\"Enter your full name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                      disabled={isSubmitting}\n                      className=\"h-12\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email Address</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter your email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                      disabled={isSubmitting}\n                      className=\"h-12\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"password\">Password</Label>\n                    <div className=\"relative\">\n                      <Input\n                        id=\"password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        placeholder=\"Create a password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                        disabled={isSubmitting}\n                        className=\"h-12 pr-10\"\n                      />\n                      <Button\n                        type=\"button\"\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"absolute right-0 top-0 h-12 px-3 hover:bg-transparent\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        disabled={isSubmitting}\n                      >\n                        {showPassword ? (\n                          <EyeOff className=\"w-4 h-4\" />\n                        ) : (\n                          <Eye className=\"w-4 h-4\" />\n                        )}\n                      </Button>\n                    </div>\n                    \n                    {password && (\n                      <div className=\"text-xs space-y-1 mt-2\">\n                        <div className={`flex items-center gap-2 ${passwordValidation.minLength ? 'text-green-600' : 'text-red-500'}`}>\n                          <CheckCircle className={`w-3 h-3 ${passwordValidation.minLength ? 'text-green-600' : 'text-gray-300'}`} />\n                          At least 8 characters\n                        </div>\n                        <div className={`flex items-center gap-2 ${passwordValidation.hasUpper ? 'text-green-600' : 'text-red-500'}`}>\n                          <CheckCircle className={`w-3 h-3 ${passwordValidation.hasUpper ? 'text-green-600' : 'text-gray-300'}`} />\n                          One uppercase letter\n                        </div>\n                        <div className={`flex items-center gap-2 ${passwordValidation.hasLower ? 'text-green-600' : 'text-red-500'}`}>\n                          <CheckCircle className={`w-3 h-3 ${passwordValidation.hasLower ? 'text-green-600' : 'text-gray-300'}`} />\n                          One lowercase letter\n                        </div>\n                        <div className={`flex items-center gap-2 ${passwordValidation.hasNumber ? 'text-green-600' : 'text-red-500'}`}>\n                          <CheckCircle className={`w-3 h-3 ${passwordValidation.hasNumber ? 'text-green-600' : 'text-gray-300'}`} />\n                          One number\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n                    <div className=\"relative\">\n                      <Input\n                        id=\"confirmPassword\"\n                        type={showConfirmPassword ? \"text\" : \"password\"}\n                        placeholder=\"Confirm your password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        required\n                        disabled={isSubmitting}\n                        className=\"h-12 pr-10\"\n                      />\n                      <Button\n                        type=\"button\"\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"absolute right-0 top-0 h-12 px-3 hover:bg-transparent\"\n                        onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                        disabled={isSubmitting}\n                      >\n                        {showConfirmPassword ? (\n                          <EyeOff className=\"w-4 h-4\" />\n                        ) : (\n                          <Eye className=\"w-4 h-4\" />\n                        )}\n                      </Button>\n                    </div>\n                    {confirmPassword && password !== confirmPassword && (\n                      <p className=\"text-xs text-red-500\">Passwords do not match</p>\n                    )}\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    className=\"w-full h-12 bg-terracotta hover:bg-terracotta-dark text-white font-medium\"\n                    disabled={isSubmitting || !passwordValidation.isValid || password !== confirmPassword}\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                        Creating Account...\n                      </>\n                    ) : (\n                      \"Create Account\"\n                    )}\n                  </Button>\n                </form>\n              ) : (\n                <form onSubmit={handleOtpSubmit} className=\"space-y-4\">\n                  {error && (\n                    <Alert variant=\"destructive\">\n                      <AlertDescription>{error}</AlertDescription>\n                    </Alert>\n                  )}\n\n                  {otpSent && (\n                    <Alert>\n                      <AlertDescription>\n                        Verification code sent to your email. Please check your inbox.\n                      </AlertDescription>\n                    </Alert>\n                  )}\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"otp\">Verification Code</Label>\n                    <Input\n                      id=\"otp\"\n                      type=\"text\"\n                      placeholder=\"Enter 6-digit code\"\n                      value={otp}\n                      onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n                      required\n                      disabled={isSubmitting}\n                      className=\"h-12 text-center text-lg tracking-wider\"\n                      maxLength={6}\n                    />\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    className=\"w-full h-12 bg-terracotta hover:bg-terracotta-dark text-white font-medium\"\n                    disabled={isSubmitting || otp.length !== 6}\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                        Verifying...\n                      </>\n                    ) : (\n                      \"Verify Email\"\n                    )}\n                  </Button>\n\n                  <div className=\"text-center\">\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      onClick={handleResendOtp}\n                      disabled={isSubmitting}\n                      className=\"text-terracotta hover:text-terracotta-dark\"\n                    >\n                      Resend verification code\n                    </Button>\n                  </div>\n                </form>\n              )}\n\n              <div className=\"mt-6 text-center\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Already have an account?{\" \"}\n                  <Link href=\"/login\" className=\"text-terracotta hover:underline font-medium\">\n                    Sign in here\n                  </Link>\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":13588},"client/src/lib/config.ts":{"content":"// API Configuration\nexport const API_BASE_URL = 'https://sm-furnishing-backend.onrender.com';\n\n// Helper function to build API URLs\nexport function apiUrl(endpoint: string): string {\n  return `${API_BASE_URL}${endpoint}`;\n}","size_bytes":224},"client/src/pages/product.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useRoute, useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Footer } from '@/components/Footer';\nimport { Header } from '@/components/Header';\nimport { useCart } from '@/lib/cartContext';\nimport { useWishlist } from '@/lib/wishlistContext';\nimport { useToast } from '@/hooks/use-toast';\nimport { fetchProductById, ApiProduct, formatPrice, getProductImageUrl, colorDisplay } from '@/lib/api';\nimport { \n  ArrowLeft,\n  Heart, \n  ShoppingCart, \n  Minus,\n  Plus,\n  Package,\n  Truck,\n  Shield,\n  RotateCcw,\n  Droplets,\n  AlertCircle\n} from 'lucide-react';\n\n\nexport default function ProductPage() {\n  const [, params] = useRoute('/product/:id');\n  const [, setLocation] = useLocation();\n  const [quantity, setQuantity] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [product, setProduct] = useState<ApiProduct | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\n  const [imageLoadError, setImageLoadError] = useState(false);\n  \n  // Use global cart and wishlist contexts\n  const { addToCart: addToGlobalCart } = useCart();\n  const { toggleWishlist, isInWishlist } = useWishlist();\n  const { toast } = useToast();\n  \n  const productId = params?.id;\n  \n  // Fetch product data from API\n  useEffect(() => {\n    const loadProduct = async () => {\n      if (!productId) {\n        setLocation('/shop');\n        return;\n      }\n      \n      try {\n        setIsLoading(true);\n        setError(null);\n        const fetchedProduct = await fetchProductById(productId);\n        setProduct(fetchedProduct);\n        setSelectedImageIndex(0); // Reset selected image when new product loads\n        setImageLoadError(false); // Reset image error state\n      } catch (err) {\n        console.error('Error loading product:', err);\n        setError('Failed to load product. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    loadProduct();\n  }, [productId, setLocation]);\n  \n  // Set document title for SEO\n  useEffect(() => {\n    if (product) {\n      document.title = `${product.Product_Name} - SM Furnishings`;\n      const metaDescription = document.querySelector('meta[name=\"description\"]');\n      if (metaDescription) {\n        metaDescription.setAttribute('content', `Buy ${product.Product_Name} - Premium ${product.Category} ${product.Fabric}. Price: ${formatPrice(product.Selling_Price)}. In stock and ready to ship.`);\n      }\n    }\n    \n    return () => {\n      document.title = 'SM Furnishings';\n    };\n  }, [product]);\n  \n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n        <div className=\"container mx-auto px-6 py-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            <div className=\"space-y-4\">\n              <Skeleton className=\"aspect-square w-full\" />\n              <div className=\"grid grid-cols-4 gap-2\">\n                {Array.from({ length: 4 }).map((_, i) => (\n                  <Skeleton key={i} className=\"aspect-square w-full\" />\n                ))}\n              </div>\n            </div>\n            <div className=\"space-y-6\">\n              <Skeleton className=\"h-8 w-3/4\" />\n              <Skeleton className=\"h-4 w-1/2\" />\n              <Skeleton className=\"h-10 w-1/3\" />\n              <div className=\"space-y-2\">\n                <Skeleton className=\"h-4 w-full\" />\n                <Skeleton className=\"h-4 w-full\" />\n                <Skeleton className=\"h-4 w-2/3\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n  \n  if (error || !product) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n        <div className=\"container mx-auto px-6 py-8\">\n          <div className=\"flex items-center justify-center min-h-[400px]\">\n            <Card className=\"p-8 text-center max-w-md\">\n              <AlertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">Product Not Found</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {error || 'The product you are looking for does not exist.'}\n              </p>\n              <Button onClick={() => setLocation('/shop')} className=\"bg-terracotta text-white\">\n                Back to Shop\n              </Button>\n            </Card>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n  \n  const handleAddToCart = async () => {\n    try {\n      // Add the selected quantity to cart using the correct API\n      await addToGlobalCart(product._id, quantity);\n      \n      toast({\n        title: \"Added to cart\",\n        description: `${quantity}x ${product.Product_Name} has been added to your cart`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to add item to cart. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n  \n  const handleGoBack = () => {\n    setLocation('/shop');\n  };\n  \n  const handleQuantityChange = (newQuantity: number) => {\n    if (newQuantity >= 1) {\n      setQuantity(newQuantity);\n    }\n  };\n  \n  const handleToggleWishlist = async () => {\n    if (!product) return;\n    await toggleWishlist(product._id);\n  };\n  \n  const handleImageSelect = (imageIndex: number) => {\n    setSelectedImageIndex(imageIndex);\n    setImageLoadError(false); // Reset error state when selecting new image\n  };\n  \n  const handleKeySelect = (event: React.KeyboardEvent, imageIndex: number) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleImageSelect(imageIndex);\n    }\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n      \n      {/* Go Back Button */}\n      <div className=\"container mx-auto px-6 py-4\">\n        <Button\n          variant=\"ghost\"\n          onClick={handleGoBack}\n          className=\"flex items-center gap-2 hover:bg-gray-100 transition-colors\"\n          data-testid=\"go-back-button\"\n        >\n          <ArrowLeft className=\"w-4 h-4\" />\n          Back to Shop\n        </Button>\n      </div>\n      \n      <div className=\"container mx-auto px-6 py-8\">\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          {/* Product Images */}\n          <div className=\"space-y-4\">\n            {/* Main Image */}\n            <div className=\"aspect-square overflow-hidden rounded-lg bg-gradient-to-br from-gray-100 to-gray-200\">\n              {!imageLoadError ? (\n                <img \n                  key={selectedImageIndex} // Force re-render on image change\n                  src={getProductImageUrl(product, selectedImageIndex)}\n                  alt={`${product.Product_Name} - Image ${selectedImageIndex + 1}`}\n                  className=\"w-full h-full object-cover transition-transform duration-300 hover:scale-105\"\n                  loading=\"eager\"\n                  decoding=\"async\"\n                  onError={() => setImageLoadError(true)}\n                />\n              ) : (\n                <div \n                  className=\"w-full h-full flex items-center justify-center text-6xl font-serif font-bold text-gray-400\"\n                  style={{\n                    background: `linear-gradient(135deg, ${colorDisplay[product.Color] || '#6B7280'}20, ${colorDisplay[product.Color] || '#6B7280'}40)`\n                  }}\n                >\n                  {product.Product_Name.charAt(0)}\n                </div>\n              )}\n            </div>\n            \n            {/* Thumbnail Images */}\n            {product.Pictures && product.Pictures.length > 1 && (\n              <div className=\"grid grid-cols-4 gap-2\">\n                {product.Pictures.map((_, imageIndex) => (\n                  <div\n                    key={imageIndex}\n                    role=\"button\"\n                    tabIndex={0}\n                    className={`aspect-square overflow-hidden rounded-lg cursor-pointer transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-terracotta focus:ring-offset-2 ${\n                      selectedImageIndex === imageIndex\n                        ? 'ring-2 ring-terracotta ring-offset-2'\n                        : 'hover:ring-1 hover:ring-gray-300 hover:ring-offset-1'\n                    }`}\n                    onClick={() => handleImageSelect(imageIndex)}\n                    onKeyDown={(e) => handleKeySelect(e, imageIndex)}\n                    aria-selected={selectedImageIndex === imageIndex}\n                    aria-label={`View image ${imageIndex + 1} of ${product.Pictures.length}`}\n                    data-testid={`product-thumbnail-${imageIndex}`}\n                  >\n                    <img \n                      src={getProductImageUrl(product, imageIndex)}\n                      alt={`${product.Product_Name} - Thumbnail ${imageIndex + 1}`}\n                      className=\"w-full h-full object-cover\"\n                      loading=\"lazy\"\n                      decoding=\"async\"\n                      onError={(e) => {\n                        // Hide thumbnail if image fails to load\n                        const target = e.target as HTMLImageElement;\n                        const parent = target.parentElement;\n                        if (parent) {\n                          parent.style.display = 'none';\n                        }\n                      }}\n                    />\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Collection Badge */}\n            <div className=\"text-center\">\n              <Badge className=\"bg-terracotta text-white px-4 py-2\">\n                {product.Collection} Collection\n              </Badge>\n            </div>\n          </div>\n          \n          {/* Product Details */}\n          <div className=\"space-y-6\">\n            {/* Product Header */}\n            <div>\n              {/* Stock Status Badge - Hidden */}\n              {/* <div className=\"mb-4\">\n                <Badge \n                  variant={product.Qty_in_Stock > 0 ? \"default\" : \"destructive\"}\n                  className=\"text-sm\"\n                >\n                  {product.Qty_in_Stock > 0 ? `${product.Qty_in_Stock} in stock` : 'Out of stock'}\n                </Badge>\n              </div> */}\n              \n              <h1 className=\"font-serif text-3xl lg:text-4xl font-bold text-foreground mb-4\" data-testid=\"product-name\">\n                {product.Product_Name}\n              </h1>\n              \n              {/* Categories */}\n              <div className=\"flex flex-wrap gap-1 mb-4\">\n                <Badge variant=\"outline\" className=\"text-xs px-2 py-1\">\n                  {product.Category}\n                </Badge>\n                {product.Sub_Category.map((subCat) => (\n                  <Badge key={subCat} variant=\"outline\" className=\"text-xs px-2 py-1\">\n                    {subCat}\n                  </Badge>\n                ))}\n              </div>\n              \n              {/* Price */}\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <span className=\"text-3xl font-bold text-terracotta\" data-testid=\"product-price\">\n                  {formatPrice(product.Selling_Price * quantity)}\n                </span>\n                <span className=\"text-sm text-muted-foreground\">\n                  {product.Net_Qty} piece set\n                </span>\n              </div>\n            </div>\n            \n            <Separator />\n            \n            {/* Product Specifications */}\n            <div className=\"space-y-3\">\n              <h3 className=\"font-semibold text-lg\">Product Details</h3>\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <span className=\"font-medium\">Collection:</span>\n                  <span className=\"ml-2 text-muted-foreground\">{product.Collection}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Fabric:</span>\n                  <span className=\"ml-2 text-muted-foreground\" data-testid=\"product-material\">{product.Fabric}</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"font-medium\">Color:</span>\n                  <div className=\"flex items-center ml-2\">\n                    <div \n                      className=\"w-4 h-4 rounded-full mr-2 border\"\n                      style={{ backgroundColor: colorDisplay[product.Color] || '#6B7280' }}\n                    />\n                    <span className=\"text-muted-foreground\" data-testid=\"product-color\">{product.Color}</span>\n                  </div>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Size:</span>\n                  <span className=\"ml-2 text-muted-foreground\">{product.Size}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Dimensions:</span>\n                  <span className=\"ml-2 text-muted-foreground\">{product.Dimensions}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Thread Count:</span>\n                  <span className=\"ml-2 text-muted-foreground\">{product.Thread_Count} TC</span>\n                </div>\n              </div>\n            </div>\n            \n            <Separator />\n            \n            {/* Quantity and Actions */}\n            <div className=\"space-y-4\">\n              {/* Quantity Selector */}\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Quantity</label>\n                <div className=\"flex items-center space-x-3\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleQuantityChange(quantity - 1)}\n                    disabled={quantity <= 1}\n                    data-testid=\"quantity-decrease\"\n                  >\n                    <Minus className=\"w-4 h-4\" />\n                  </Button>\n                  <span className=\"w-12 text-center font-medium text-lg\" data-testid=\"quantity-display\">\n                    {quantity}\n                  </span>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleQuantityChange(quantity + 1)}\n                    data-testid=\"quantity-increase\"\n                  >\n                    <Plus className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n              \n              {/* Action Buttons */}\n              <div className=\"flex space-x-3\">\n                <Button\n                  className=\"flex-1 bg-terracotta hover:bg-terracotta-dark text-white font-semibold py-3 text-lg\"\n                  onClick={handleAddToCart}\n                  disabled={product.Qty_in_Stock === 0}\n                  data-testid=\"add-to-cart-button\"\n                >\n                  <ShoppingCart className=\"w-5 h-5 mr-2\" />\n                  {product.Qty_in_Stock > 0 ? 'Add to Cart' : 'Out of Stock'}\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={handleToggleWishlist}\n                  className={`px-6 ${isInWishlist(product._id) ? 'text-red-500 border-red-500' : ''}`}\n                  data-testid=\"wishlist-button\"\n                >\n                  <Heart className={`w-5 h-5 ${isInWishlist(product._id) ? 'fill-current' : ''}`} />\n                </Button>\n              </div>\n            </div>\n            \n            <Separator />\n            \n            {/* Features */}\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold text-lg\">Why Choose This Product</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"flex items-start space-x-3\">\n                  <Package className=\"w-5 h-5 text-terracotta flex-shrink-0 mt-0.5\" />\n                  <div>\n                    <div className=\"font-medium text-sm\">Premium Quality</div>\n                    <div className=\"text-xs text-muted-foreground\">Crafted with finest materials</div>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-3\">\n                  <Truck className=\"w-5 h-5 text-terracotta flex-shrink-0 mt-0.5\" />\n                  <div>\n                    <div className=\"font-medium text-sm\">Free Delivery</div>\n                    <div className=\"text-xs text-muted-foreground\">On orders above 3,000</div>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-3\">\n                  <Shield className=\"w-5 h-5 text-terracotta flex-shrink-0 mt-0.5\" />\n                  <div>\n                    <div className=\"font-medium text-sm\">Easy on pocket</div>\n                    <div className=\"text-xs text-muted-foreground\">Affordable prices</div>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-3\">\n                  <RotateCcw className=\"w-5 h-5 text-terracotta flex-shrink-0 mt-0.5\" />\n                  <div>\n                    <div className=\"font-medium text-sm\">Easy Returns</div>\n                    <div className=\"text-xs text-muted-foreground\">7-day return policy</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Additional Product Information */}\n        <div className=\"mt-16 space-y-8\">\n          {/* Product Description */}\n          <Card>\n            <CardContent className=\"p-8\">\n              <h2 className=\"font-serif text-2xl font-bold mb-6\">Product Description</h2>\n              <div className=\"prose prose-gray max-w-none\">\n                <p className=\"text-muted-foreground leading-relaxed\">\n                  {product.Description}\n                </p>\n                <p className=\"text-muted-foreground leading-relaxed mt-4\">\n                  Experience the perfect blend of comfort and style with our {product.Product_Name}. \n                  Crafted from premium {product.Fabric.toLowerCase()}, this {product.Category.toLowerCase()} piece \n                  brings sophistication to any space. The {product.Color.toLowerCase()} finish complements \n                  a wide range of interior designs, making it a versatile addition to your home.\n                </p>\n                <p className=\"text-muted-foreground leading-relaxed mt-4\">\n                  Each piece is carefully constructed with {product.Thread_Count} thread count fabric, ensuring \n                  premium quality and comfort. The {product.Size} size with {product.Dimensions} dimensions makes it \n                  perfect for your home. This {product.Net_Qty}-piece set includes everything you need for \n                  a complete bedding solution.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n          \n          {/* Care Instructions */}\n          <Card>\n            <CardContent className=\"p-8\">\n              <div className=\"flex items-center gap-3 mb-6\">\n                <Droplets className=\"w-6 h-6 text-terracotta\" />\n                <h2 className=\"font-serif text-2xl font-bold\" data-testid=\"care-instructions-title\">Care Instructions</h2>\n              </div>\n              \n              {/* Washing Instructions */}\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold text-lg mb-3 text-terracotta\">Washing Guidelines</h3>\n                  <div className=\"space-y-2 text-muted-foreground\">\n                    {product.Wash_Care_Instructions.map((instruction, index) => (\n                      <p key={index} className=\"flex items-start gap-2\">\n                        <span className=\"text-terracotta font-bold mt-1\">•</span>\n                        <span>{instruction}</span>\n                      </p>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-amber-800 mb-2 flex items-center gap-2\">\n                    <Shield className=\"w-4 h-4\" />\n                    Important Note\n                  </h4>\n                  <p className=\"text-amber-700 text-sm\">\n                    Following these care instructions will help maintain the quality and extend the life of your {product.Product_Name}.\n                  </p>\n                </div>\n                \n                {/* Additional Care Tips */}\n                <div>\n                  <h3 className=\"font-semibold text-lg mb-3 text-terracotta\">Storage Tips</h3>\n                  <div className=\"space-y-2 text-muted-foreground\">\n                    <p className=\"flex items-start gap-2\">\n                      <span className=\"text-terracotta font-bold mt-1\">•</span>\n                      <span>Store in a cool, dry place when not in use</span>\n                    </p>\n                    <p className=\"flex items-start gap-2\">\n                      <span className=\"text-terracotta font-bold mt-1\">•</span>\n                      <span>Avoid exposure to direct sunlight for extended periods</span>\n                    </p>\n                    <p className=\"flex items-start gap-2\">\n                      <span className=\"text-terracotta font-bold mt-1\">•</span>\n                      <span>Use breathable storage bags to prevent moisture buildup</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":22291},"client/src/lib/api.ts":{"content":"import { apiUrl } from './config';\n\n// API Product Interface matching your backend response\nexport interface ApiProduct {\n  _id: string;\n  Collection: string;\n  Product_Name: string;\n  Category: string;\n  Sub_Category: string[];\n  Size: string;\n  Dimensions: string;\n  Net_Qty: number;\n  Thread_Count: number;\n  Fabric: string;\n  Color: string;\n  Selling_Price: number;\n  Qty_in_Stock: number;\n  Description: string;\n  Wash_Care_Instructions: string[];\n  Pictures: string[];\n}\n\nexport interface ApiResponse {\n  success: boolean;\n  count: number;\n  data: ApiProduct[];\n}\n\n// Fetch all products\nexport async function fetchAllProducts(): Promise<ApiProduct[]> {\n  try {\n    const response = await fetch(apiUrl('/api/latestproducts'));\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data: ApiResponse = await response.json();\n    \n    if (!data.success) {\n      throw new Error('API response indicates failure');\n    }\n    \n    return data.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n}\n\n// Fetch single product by ID\nexport async function fetchProductById(id: string): Promise<ApiProduct> {\n  try {\n    const response = await fetch(apiUrl(`/api/latestproducts/${id}`));\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    \n    if (!data.success) {\n      throw new Error('API response indicates failure');\n    }\n    \n    return data.data;\n  } catch (error) {\n    console.error('Error fetching product by ID:', error);\n    throw error;\n  }\n}\n\n// Helper function to get unique values for filters\nexport function getUniqueValues<T>(products: ApiProduct[], key: keyof ApiProduct): T[] {\n  const values = products.map(product => product[key]).flat();\n  return Array.from(new Set(values)) as T[];\n}\n\n// Helper function to format price\nexport function formatPrice(price: number): string {\n  return `₹${price.toLocaleString('en-IN')}`;\n}\n\n// Color mapping for visual display\nexport const colorDisplay: { [key: string]: string } = {\n  'Red': '#DC2626',\n  'Blue': '#2563EB',\n  'Green': '#16A34A',\n  'Purple': '#9333EA',\n  'Orange': '#EA580C',\n  'Pink': '#EC4899',\n  'Brown': '#A16207',\n  'Grey': '#6B7280',\n  'Gray': '#6B7280',\n  'White': '#F9FAFB',\n  'Off White': '#F3F4F6',\n  'Beige': '#D6D3D1',\n  'Black': '#111827'\n};\n\n// Form submission interfaces\nexport interface BulkOrderData {\n  name: string;\n  email: string;\n  phoneNumber: string;\n  orderDescription: string;\n}\n\nexport interface NewsletterData {\n  email: string;\n}\n\n// Submit bulk order form\nexport async function submitBulkOrder(data: BulkOrderData): Promise<void> {\n  try {\n    const response = await fetch('https://sm-furnishing-backend.onrender.com/api/form-data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    \n    if (!result.success) {\n      throw new Error('Failed to submit bulk order form');\n    }\n  } catch (error) {\n    console.error('Error submitting bulk order:', error);\n    throw error;\n  }\n}\n\n// Submit newsletter subscription\nexport async function submitNewsletter(data: NewsletterData): Promise<{success: boolean, message: string}> {\n  try {\n    const response = await fetch('https://sm-furnishing-backend.onrender.com/api/newsletter-emails', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    \n    const result = await response.json();\n    \n    if (response.ok && result.success) {\n      return { success: true, message: 'Successfully subscribed to newsletter!' };\n    } else if (result.message && result.message.includes('already subscribed')) {\n      return { success: true, message: 'You are already subscribed to our newsletter.' };\n    } else {\n      return { success: false, message: result.message || 'Failed to subscribe to newsletter' };\n    }\n  } catch (error) {\n    console.error('Error subscribing to newsletter:', error);\n    return { success: false, message: 'Network error. Please check your connection and try again.' };\n  }\n}\n\n// Helper function to get product image URL from API data\nexport function getProductImageUrl(product: ApiProduct, imageIndex: number = 0): string {\n  // Return actual image URL from the Pictures array if available\n  if (product.Pictures && product.Pictures.length > 0) {\n    // Use the specified index, or fallback to first image if index is out of bounds\n    const imageUrl = product.Pictures[imageIndex] || product.Pictures[0];\n    return imageUrl;\n  }\n  \n  // Fallback to placeholder if no images are available\n  return `https://via.placeholder.com/400x400/f0f0f0/666666?text=${encodeURIComponent(product.Product_Name)}`;\n}\n\n// Helper function to get all product images\nexport function getProductImages(product: ApiProduct): string[] {\n  return product.Pictures || [];\n}\n\n// Cart API interfaces\nexport interface CartItem {\n  productId: string;\n  productName: string;\n  productImage: string;\n  quantity: number;\n  priceAtTime: number;\n  addedAt: string;\n}\n\nexport interface Cart {\n  _id: string;\n  userId: string;\n  items: CartItem[];\n  totalAmount: number;\n  totalItems: number;\n  status: 'active' | 'abandoned' | 'converted';\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface CartResponse {\n  success: boolean;\n  cart: Cart;\n}\n\n// Cart API error response\nexport interface CartError {\n  success: false;\n  message: string;\n  code?: string;\n}\n\n// Helper function to get JWT token\nfunction getAuthToken(): string | null {\n  const token = localStorage.getItem('authToken');\n  console.log('🔑 Getting auth token:', token ? 'Token exists' : 'No token found');\n  return token;\n}\n\n// Helper function to create authenticated headers\nfunction getAuthHeaders(): HeadersInit {\n  const token = getAuthToken();\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json',\n  };\n  \n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n    console.log('📋 Auth headers prepared with token');\n  } else {\n    console.log('⚠️ No auth token available for headers');\n  }\n  \n  return headers;\n}\n\n// Handle authentication errors\nfunction handleAuthError(): never {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('authUser');\n  window.location.href = '/login';\n  throw new Error('Authentication required. Please login.');\n}\n\n// Cart API Functions\nexport async function fetchCart(): Promise<Cart> {\n  try {\n    const response = await fetch(apiUrl('/api/cart'), {\n      method: 'GET',\n      headers: getAuthHeaders(),\n    });\n\n    if (response.status === 401) {\n      handleAuthError();\n    }\n\n    const data: CartResponse | CartError = await response.json();\n\n    if (!response.ok) {\n      throw new Error((data as CartError).message || 'Failed to fetch cart');\n    }\n\n    return (data as CartResponse).cart;\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    throw error;\n  }\n}\n\nexport async function addToCart(productId: string, quantity: number): Promise<Cart> {\n  try {\n    const response = await fetch(apiUrl('/api/cart/add'), {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify({ productId, quantity }),\n    });\n\n    if (response.status === 401) {\n      handleAuthError();\n    }\n\n    const data: CartResponse | CartError = await response.json();\n\n    if (!response.ok) {\n      throw new Error((data as CartError).message || 'Failed to add item to cart');\n    }\n\n    return (data as CartResponse).cart;\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    throw error;\n  }\n}\n\nexport async function updateCartQuantity(productId: string, quantity: number): Promise<Cart> {\n  try {\n    const response = await fetch(apiUrl('/api/cart/update'), {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n      body: JSON.stringify({ productId, quantity }),\n    });\n\n    if (response.status === 401) {\n      handleAuthError();\n    }\n\n    const data: CartResponse | CartError = await response.json();\n\n    if (!response.ok) {\n      throw new Error((data as CartError).message || 'Failed to update cart');\n    }\n\n    return (data as CartResponse).cart;\n  } catch (error) {\n    console.error('Error updating cart quantity:', error);\n    throw error;\n  }\n}\n\nexport async function removeFromCart(productId: string): Promise<Cart> {\n  try {\n    const response = await fetch(apiUrl(`/api/cart/item/${productId}`), {\n      method: 'DELETE',\n      headers: getAuthHeaders(),\n    });\n\n    if (response.status === 401) {\n      handleAuthError();\n    }\n\n    const data: CartResponse | CartError = await response.json();\n\n    if (!response.ok) {\n      throw new Error((data as CartError).message || 'Failed to remove item from cart');\n    }\n\n    return (data as CartResponse).cart;\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    throw error;\n  }\n}\n\nexport async function clearCart(): Promise<Cart> {\n  try {\n    const response = await fetch(apiUrl('/api/cart/clear'), {\n      method: 'DELETE',\n      headers: getAuthHeaders(),\n    });\n\n    if (response.status === 401) {\n      handleAuthError();\n    }\n\n    const data: CartResponse | CartError = await response.json();\n\n    if (!response.ok) {\n      throw new Error((data as CartError).message || 'Failed to clear cart');\n    }\n\n    return (data as CartResponse).cart;\n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    throw error;\n  }\n}","size_bytes":9704},"client/src/components/Testimonials.tsx":{"content":"import { Star } from \"lucide-react\";\n\ninterface TestimonialData {\n  id: number;\n  name: string;\n  image: string;\n  rating: number;\n  text: string;\n}\n\nconst testimonialsData: TestimonialData[] = [\n  {\n    id: 1,\n    name: \"Sarah Johnson\",\n    image: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100&q=80\",\n    rating: 5,\n    text: \"Absolutely stunning furniture! The quality exceeded my expectations and the customer service was exceptional. My living room has been completely transformed.\"\n  },\n  {\n    id: 2,\n    name: \"Michael Chen\",\n    image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100&q=80\",\n    rating: 5,\n    text: \"I've been searching for affordable luxury furniture for months. SM Furnishings delivered exactly what I was looking for - beautiful pieces at great prices.\"\n  },\n  {\n    id: 3,\n    name: \"Emily Rodriguez\",\n    image: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100&q=80\",\n    rating: 4,\n    text: \"The craftsmanship is remarkable and the delivery was prompt. Every piece feels premium and matches perfectly with my home's aesthetic.\"\n  }\n];\n\nfunction TestimonialCard({ testimonial }: { testimonial: TestimonialData }) {\n  return (\n    <div \n      className=\"relative bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300 min-h-[280px] flex flex-col\"\n      style={{ \n        maxWidth: '400px',\n        boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)'\n      }}\n      data-testid={`testimonial-card-${testimonial.id}`}\n    >\n      {/* Profile Image */}\n      <div className=\"relative mb-4\">\n        <img\n          src={testimonial.image}\n          alt={testimonial.name}\n          className=\"w-16 h-16 rounded-full object-cover border-3 border-white shadow-md\"\n          style={{ \n            borderColor: '#DBA352',\n            borderWidth: '3px'\n          }}\n          data-testid={`testimonial-image-${testimonial.id}`}\n        />\n      </div>\n\n      {/* Name and Rating */}\n      <div className=\"mb-4\">\n        <h4 \n          className=\"font-semibold mb-2\"\n          style={{\n            fontFamily: \"'Playfair Display', serif\",\n            fontSize: '18px',\n            color: '#582308'\n          }}\n          data-testid={`testimonial-name-${testimonial.id}`}\n        >\n          {testimonial.name}\n        </h4>\n        \n        {/* Star Rating */}\n        <div \n          className=\"flex items-center gap-1 mb-3\" \n          role=\"img\"\n          aria-label={`Rating: ${testimonial.rating} out of 5 stars`}\n          data-testid={`testimonial-rating-${testimonial.id}`}\n        >\n          {[...Array(5)].map((_, index) => (\n            <Star\n              key={index}\n              className={`w-4 h-4 ${\n                index < testimonial.rating\n                  ? 'text-[#DBA352] fill-[#DBA352]'\n                  : 'text-gray-300'\n              }`}\n            />\n          ))}\n          <span \n            className=\"ml-2 text-sm font-medium\"\n            style={{ color: '#582308' }}\n          >\n            {testimonial.rating}.0\n          </span>\n        </div>\n\n        {/* Divider */}\n        <div \n          className=\"w-full h-px mb-4\"\n          style={{ backgroundColor: 'rgba(219, 163, 82, 0.3)' }}\n        />\n      </div>\n\n      {/* Testimonial Text */}\n      <p \n        className=\"leading-relaxed flex-1\"\n        style={{\n          fontFamily: \"'Playfair Display', serif\",\n          fontSize: '14px',\n          lineHeight: '1.6',\n          color: '#4A4A4A'\n        }}\n        data-testid={`testimonial-text-${testimonial.id}`}\n      >\n        {testimonial.text}\n      </p>\n    </div>\n  );\n}\n\nexport function Testimonials() {\n  return (\n    <section className=\"relative py-8 bg-white overflow-hidden\">\n      {/* Animated Marquee Background */}\n      <div className=\"absolute inset-0 pointer-events-none\" style={{ zIndex: 1 }}>\n        {/* Row 1 */}\n        <div \n          className=\"absolute whitespace-nowrap\"\n          style={{\n            top: '0px',\n            left: 0,\n            width: 'max-content',\n            animation: 'scrollTestimonials1 20s linear infinite'\n          }}\n        >\n          {/* First set */}\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.07\n            }}\n          >\n            · Testimonials ·\n          </span>\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.31\n            }}\n          >\n            · Testimonials ·\n          </span>\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.07\n            }}\n          >\n            · Testimonials ·\n          </span>\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.07\n            }}\n          >\n            · Testimonials ·\n          </span>\n          {/* Duplicate set for seamless loop */}\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.07\n            }}\n          >\n            · Testimonials ·\n          </span>\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.31\n            }}\n          >\n            · Testimonials ·\n          </span>\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.07\n            }}\n          >\n            · Testimonials ·\n          </span>\n          <span \n            className=\"inline-block mr-32\"\n            style={{\n              fontFamily: \"'Playfair Display', serif\",\n              fontWeight: 900,\n              fontSize: 'clamp(60px, 8vw, 100px)',\n              color: 'rgb(88, 35, 8)',\n              opacity: 0.07\n            }}\n          >\n            · Testimonials ·\n          </span>\n        </div>\n\n        {/* Row 2 */}\n        <div \n          className=\"absolute whitespace-nowrap\"\n          style={{\n            top: '100px',\n            left: 0,\n            width: 'max-content',\n            animation: 'scrollTestimonials2 25s linear infinite',\n            animationDelay: '-5s'\n          }}\n        >\n          {/* First set */}\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.31 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          {/* Duplicate set */}\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.31 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n        </div>\n\n        {/* Row 3 */}\n        <div \n          className=\"absolute whitespace-nowrap\"\n          style={{\n            top: '200px',\n            left: 0,\n            width: 'max-content',\n            animation: 'scrollTestimonials3 30s linear infinite',\n            animationDelay: '-10s'\n          }}\n        >\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.11 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.11 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n        </div>\n\n        {/* Row 4 */}\n        <div \n          className=\"absolute whitespace-nowrap\"\n          style={{\n            top: '300px',\n            left: 0,\n            width: 'max-content',\n            animation: 'scrollTestimonials4 22s linear infinite',\n            animationDelay: '-3s'\n          }}\n        >\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.13 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.13 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.13 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.13 }}>· Testimonials ·</span>\n        </div>\n\n        {/* Row 5 */}\n        <div \n          className=\"absolute whitespace-nowrap\"\n          style={{\n            top: '400px',\n            left: 0,\n            width: 'max-content',\n            animation: 'scrollTestimonials5 28s linear infinite',\n            animationDelay: '-15s'\n          }}\n        >\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n          <span className=\"inline-block mr-32\" style={{ fontFamily: \"'Playfair Display', serif\", fontWeight: 900, fontSize: 'clamp(60px, 8vw, 100px)', color: 'rgb(88, 35, 8)', opacity: 0.07 }}>· Testimonials ·</span>\n        </div>\n      </div>\n\n      {/* Foreground Content */}\n      <div className=\"relative z-10 container mx-auto px-6\">\n\n        {/* Testimonials Zigzag Layout */}\n        <div className=\"relative z-20 max-w-7xl mx-auto\">\n          <div className=\"flex flex-col lg:flex-row items-center justify-center gap-8\">\n            {/* First Card - Top Position */}\n            <div className=\"flex justify-center lg:self-start\">\n              <TestimonialCard testimonial={testimonialsData[0]} />\n            </div>\n            \n            {/* Second Card - Middle Position */}\n            <div className=\"flex justify-center lg:self-center lg:mt-12\">\n              <TestimonialCard testimonial={testimonialsData[1]} />\n            </div>\n            \n            {/* Third Card - Top Position */}\n            <div className=\"flex justify-center lg:self-start\">\n              <TestimonialCard testimonial={testimonialsData[2]} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </section>\n  );\n}","size_bytes":16596},"client/src/pages/checkout.tsx":{"content":"import { useState } from 'react';\nimport { useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Footer } from '@/components/Footer';\nimport { Header } from '@/components/Header';\nimport { useCart } from '@/lib/cartContext';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/lib/authContext';\nimport { useIsMobile } from '@/hooks/use-mobile';\nimport { Minus, Plus, Package, CreditCard, MapPin, Phone, User, Mail, Truck, Wallet, Tag } from 'lucide-react';\n\ninterface CheckoutFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  address: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  country: string;\n}\n\ntype PaymentMethod = 'razorpay' | 'cod';\n\nexport default function CheckoutPage() {\n  const [, setLocation] = useLocation();\n  const { cartItems, cartCount, cart, updateQuantity, removeFromCart, clearCart, isLoading } = useCart();\n  const { toast } = useToast();\n  const { user, isAuthenticated } = useAuth();\n  const isMobile = useIsMobile();\n  \n  const [formData, setFormData] = useState<CheckoutFormData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    country: 'India'\n  });\n\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<PaymentMethod | null>(null);\n  const [couponCode, setCouponCode] = useState('');\n  const [couponError, setCouponError] = useState('');\n  const [appliedCoupon, setAppliedCoupon] = useState<string | null>(null);\n  const [couponDiscount, setCouponDiscount] = useState(0);\n  const [razorpayResponse, setRazorpayResponse] = useState<any>(null);\n\n  // Available coupons\n  const availableCoupons = {\n    WELCOME10: {\n      code: 'WELCOME10',\n      discount: 10,\n      type: 'percentage',\n      description: '10% off on your first order',\n      terms: 'Valid only for first-time customers. Applicable sitewide. One-time use per customer. Can be combined with one other coupon, not more.',\n      canApply: true\n    },\n    REELLOVE10: {\n      code: 'REELLOVE10',\n      discount: 10,\n      type: 'percentage',\n      description: '10% off as a thank-you for commenting on our Instagram reel',\n      terms: 'Can be combined with one other coupon, not more.',\n      canApply: false\n    },\n    VIP10: {\n      code: 'VIP10',\n      discount: 10,\n      type: 'percentage',\n      description: '10% off for members of our VIP list',\n      terms: 'One-time use per subscriber. Non-transferable. Can be combined with one other coupon, not more.',\n      canApply: false\n    }\n  };\n\n  // Calculate totals\n  const subtotal = cart?.totalAmount || 0;\n  const shippingCost = 0; // Always free shipping\n  const discountAmount = appliedCoupon ? Math.round((subtotal * couponDiscount) / 100) : 0;\n  const totalAmount = subtotal + shippingCost - discountAmount;\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleQuantityChange = async (productId: string, newQuantity: number) => {\n    if (newQuantity <= 0) {\n      await removeFromCart(productId);\n    } else {\n      await updateQuantity(productId, newQuantity);\n    }\n  };\n\n  const handleApplyCoupon = () => {\n    const code = couponCode.trim().toUpperCase();\n    \n    if (!code) {\n      setCouponError('Please enter a coupon code');\n      return;\n    }\n\n    // Check if it's a valid applicable coupon\n    const coupon = availableCoupons[code as keyof typeof availableCoupons];\n    \n    if (coupon && coupon.canApply) {\n      if (appliedCoupon) {\n        setCouponError('You already have a coupon applied');\n        toast({\n          title: \"Coupon Already Applied\",\n          description: \"Please remove the current coupon before applying a new one.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      \n      setAppliedCoupon(code);\n      setCouponDiscount(coupon.discount);\n      setCouponError('');\n      setCouponCode('');\n      \n      toast({\n        title: \"Coupon Applied! 🎉\",\n        description: `${coupon.description}. You saved ₹${Math.round((subtotal * coupon.discount) / 100).toLocaleString()}!`,\n      });\n    } else if (coupon && !coupon.canApply) {\n      setCouponError('This coupon cannot be applied through this section');\n      toast({\n        title: \"Coupon Not Applicable\",\n        description: \"This coupon code is not available for direct application.\",\n        variant: \"destructive\",\n      });\n    } else {\n      setCouponError('Invalid coupon code');\n      toast({\n        title: \"Invalid Coupon\",\n        description: \"The coupon code you entered is not valid.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleRemoveCoupon = () => {\n    setAppliedCoupon(null);\n    setCouponDiscount(0);\n    toast({\n      title: \"Coupon Removed\",\n      description: \"The coupon has been removed from your order.\",\n    });\n  };\n\n  const saveOrderToBackend = async (orderData: any) => {\n    try {\n      const response = await fetch('https://sm-furnishing-backend.onrender.com/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(orderData),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to save order: ${response.status} ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      console.log('Order saved successfully:', result);\n      \n      toast({\n        title: \"Order Saved Successfully! ✅\",\n        description: `Your order ${orderData.order_id} has been saved to our system.`,\n      });\n      \n      return { success: true, data: result };\n    } catch (error) {\n      console.error('Error saving order:', error);\n      \n      toast({\n        title: \"Order Save Failed\",\n        description: \"Failed to save your order. Please contact support with your order details.\",\n        variant: \"destructive\",\n      });\n      \n      return { success: false, error: error instanceof Error ? error.message : 'Unknown error' };\n    }\n  };\n\n  const handleRazorpayPayment = async (orderData: any) => {\n    try {\n      setRazorpayResponse(null);\n      \n      // Create Razorpay order\n      const response = await fetch('/api/razorpay/create-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          amount: totalAmount,\n          currency: 'INR',\n          receipt: `order_${Date.now()}`\n        }),\n      });\n\n      const orderResponse = await response.json();\n      console.log('Razorpay Order Created:', orderResponse);\n      \n      // Store order creation data for final JSON\n      const orderCreationData = {\n        step: 'Order Creation',\n        timestamp: new Date().toISOString(),\n        ...orderResponse\n      };\n      setRazorpayResponse(orderCreationData);\n      \n      if (!orderResponse.success) {\n        throw new Error(orderResponse.error || 'Failed to create order');\n      }\n\n      const options = {\n        key: orderResponse.key_id,\n        amount: orderResponse.order.amount,\n        currency: orderResponse.order.currency,\n        name: 'SM Furnishings',\n        description: `Order for ${cartItems.length} items`,\n        order_id: orderResponse.order.id,\n        handler: async (response: any) => {\n          console.log('Razorpay Payment Response:', response);\n          \n          // Verify payment\n          const verifyResponse = await fetch('/api/razorpay/verify-payment', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              ...response,\n              orderData\n            }),\n          });\n\n          const verificationResult = await verifyResponse.json();\n          console.log('Payment Verification:', verificationResult);\n          \n          if (verificationResult.verified) {\n            // Create clean order JSON with only essential data\n            const completeOrderData = {\n              order_id: orderCreationData.order.id,\n              order_date: new Date().toISOString(),\n              status: 'completed',\n              \n              // User information (authenticated user or guest)\n              user: isAuthenticated && user ? {\n                username: user.name,\n                user_email: user.email\n              } : {\n                username: `${formData.firstName} ${formData.lastName}`.trim(),\n                user_email: formData.email\n              },\n              \n              items: cartItems.map(item => ({\n                product_id: item.productId,\n                product_name: item.productName,\n                quantity: item.quantity,\n                price: item.priceAtTime\n              })),\n              \n              customer: {\n                name: `${formData.firstName} ${formData.lastName}`,\n                email: formData.email,\n                phone: formData.phone,\n                address: formData.address,\n                city: formData.city,\n                state: formData.state,\n                pin_code: formData.zipCode,\n                country: formData.country\n              },\n              \n              pricing: {\n                subtotal: subtotal,\n                shipping: shippingCost,\n                total: totalAmount\n              },\n              \n              payment: {\n                method: 'razorpay',\n                status: 'verified',\n                razorpay_order_id: response.razorpay_order_id,\n                razorpay_payment_id: response.razorpay_payment_id\n              }\n            };\n            \n            // Save order to backend\n            const saveResult = await saveOrderToBackend(completeOrderData);\n            \n            if (saveResult.success) {\n              // Only proceed with success flow if order was saved successfully\n              await clearCart(false);\n              \n              toast({\n                title: \"Payment Successful! 🎉\",\n                description: `Your payment of ₹${totalAmount.toLocaleString()} has been processed successfully.`,\n              });\n              \n              setTimeout(() => {\n                setLocation('/success');\n              }, 2000);\n            } else {\n              // Payment succeeded but order save failed - show error but don't clear cart\n              toast({\n                title: \"Payment Processed, Order Save Failed\",\n                description: \"Your payment was successful but we couldn't save your order. Please contact support immediately with your payment ID: \" + response.razorpay_payment_id,\n                variant: \"destructive\",\n              });\n            }\n          } else {\n            toast({\n              title: \"Payment Verification Failed\",\n              description: \"Payment could not be verified. Please contact support.\",\n              variant: \"destructive\",\n            });\n          }\n        },\n        prefill: {\n          name: `${formData.firstName} ${formData.lastName}`,\n          email: formData.email,\n          contact: formData.phone\n        },\n        theme: {\n          color: '#B87333'\n        },\n        modal: {\n          ondismiss: () => {\n            console.log('Razorpay modal dismissed');\n            const dismissalData = {\n              step: 'Payment Dismissed',\n              timestamp: new Date().toISOString(),\n              message: 'Payment was cancelled by user'\n            };\n            setRazorpayResponse(dismissalData);\n            // No download for dismissed payments\n          }\n        }\n      };\n\n      const razorpay = new (window as any).Razorpay(options);\n      razorpay.open();\n      \n    } catch (error) {\n      console.error('Razorpay payment error:', error);\n      \n      const errorData = {\n        step: 'Error',\n        timestamp: new Date().toISOString(),\n        error: error instanceof Error ? error.message : 'Payment failed'\n      };\n      setRazorpayResponse(errorData);\n      // No download for payment errors\n      \n      toast({\n        title: \"Payment Error\",\n        description: error instanceof Error ? error.message : \"Payment failed. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const required = ['firstName', 'lastName', 'email', 'phone', 'address', 'city', 'state', 'zipCode'];\n    for (const field of required) {\n      if (!formData[field as keyof CheckoutFormData].trim()) {\n        toast({\n          title: \"Missing Information\",\n          description: `Please fill in the ${field.replace(/([A-Z])/g, ' $1').toLowerCase()}.`,\n          variant: \"destructive\",\n        });\n        return false;\n      }\n    }\n\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      toast({\n        title: \"Invalid Email\",\n        description: \"Please enter a valid email address.\",\n        variant: \"destructive\",\n      });\n      return false;\n    }\n\n    // Basic phone validation (Indian format)\n    const phoneRegex = /^[6-9]\\d{9}$/;\n    if (!phoneRegex.test(formData.phone.replace(/\\s+/g, ''))) {\n      toast({\n        title: \"Invalid Phone\",\n        description: \"Please enter a valid 10-digit phone number.\",\n        variant: \"destructive\",\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handlePaymentMethodSelect = async (method: PaymentMethod) => {\n    if (!validateForm()) return;\n    \n    if (cartItems.length === 0) {\n      toast({\n        title: \"Empty Cart\",\n        description: \"Please add items to your cart before proceeding.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setSelectedPaymentMethod(method);\n    setIsProcessing(true);\n    \n    try {\n      const orderData = {\n        items: cartItems,\n        customer: formData,\n        pricing: {\n          subtotal,\n          shipping: shippingCost,\n          total: totalAmount\n        },\n        paymentMethod: method\n      };\n\n      console.log('Order Data:', orderData);\n\n      if (method === 'cod') {\n        // COD - Process order successfully\n        await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate processing\n        \n        // Create COD order JSON with same format as Razorpay\n        const codOrderData = {\n          order_id: `cod_order_${Date.now()}`,\n          order_date: new Date().toISOString(),\n          status: 'completed',\n          \n          // User information (authenticated user or guest)\n          user: isAuthenticated && user ? {\n            username: user.name,\n            user_email: user.email\n          } : {\n            username: `${formData.firstName} ${formData.lastName}`.trim(),\n            user_email: formData.email\n          },\n          \n          items: cartItems.map(item => ({\n            product_id: item.productId,\n            product_name: item.productName,\n            quantity: item.quantity,\n            price: item.priceAtTime\n          })),\n          \n          customer: {\n            name: `${formData.firstName} ${formData.lastName}`,\n            email: formData.email,\n            phone: formData.phone,\n            address: formData.address,\n            city: formData.city,\n            state: formData.state,\n            pin_code: formData.zipCode,\n            country: formData.country\n          },\n          \n          pricing: {\n            subtotal: subtotal,\n            shipping: shippingCost,\n            total: totalAmount\n          },\n          \n          payment: {\n            method: 'cod',\n            status: 'pending'\n          }\n        };\n        \n        // Save COD order to backend\n        const saveResult = await saveOrderToBackend(codOrderData);\n        \n        if (saveResult.success) {\n          // Only proceed with success flow if order was saved successfully\n          await clearCart(false);\n          \n          toast({\n            title: \"Order Confirmed! 📦\",\n            description: `Your COD order of ₹${totalAmount.toLocaleString()} has been placed successfully.`,\n          });\n          \n          setTimeout(() => {\n            setLocation('/success');\n          }, 2000);\n        } else {\n          // Order save failed - show error and don't clear cart so user can retry\n          toast({\n            title: \"Order Failed to Save\",\n            description: \"We couldn't save your order. Please try again or contact support.\",\n            variant: \"destructive\",\n          });\n        }\n\n      } else if (method === 'razorpay') {\n        await handleRazorpayPayment(orderData);\n      }\n      \n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to process order. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsProcessing(false);\n      setSelectedPaymentMethod(null);\n    }\n  };\n\n  // Redirect to shop if cart is empty\n  if (cartItems.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-white\">\n        <Header variant=\"solid\" />\n        <div className=\"container mx-auto px-6 py-12 text-center\">\n          <Package className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n          <h1 className=\"text-2xl font-serif font-bold mb-4\">Your cart is empty</h1>\n          <p className=\"text-muted-foreground mb-6\">Add some items to your cart to proceed with checkout.</p>\n          {/* Continue Shopping - Hidden on mobile */}\n          {!isMobile && (\n            <Button onClick={() => setLocation('/shop')} className=\"bg-terracotta hover:bg-terracotta-dark text-white\">\n              Continue Shopping\n            </Button>\n          )}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header variant=\"solid\" />\n      \n      <div className=\"container mx-auto px-6 py-12 mt-40\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-serif font-bold mb-2\">Checkout</h1>\n          <p className=\"text-muted-foreground\">Review your order and provide shipping details</p>\n          {isAuthenticated && user && (\n            <div className=\"mt-4 p-4 bg-terracotta/10 rounded-lg border border-terracotta/20\">\n              <div className=\"flex items-center gap-2 text-terracotta\">\n                <User className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Logged in as: {user.name}</span>\n              </div>\n              <p className=\"text-sm text-muted-foreground mt-1\">\n                User ID: {user.id} | Email: {user.email}\n              </p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"max-w-5xl mx-auto space-y-4 lg:space-y-0 lg:grid lg:grid-cols-2 lg:gap-8\">\n          {/* Order Summary - Left Side */}\n          <div className={isMobile ? 'space-y-3' : 'space-y-4'}>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Package className=\"w-5 h-5\" />\n                  Order Summary ({cartCount} items)\n                </CardTitle>\n              </CardHeader>\n              <CardContent className={`${isMobile ? 'space-y-2' : 'space-y-3'}`}>\n                {cartItems.map((item) => (\n                  <div key={item.productId} className={`flex items-center border-b last:border-b-0 ${isMobile ? 'space-x-2 pb-2' : 'space-x-3 pb-3'}`}>\n                    {/* Product Image */}\n                    <div className={`${isMobile ? 'w-12 h-12' : 'w-16 h-16'} rounded-lg overflow-hidden flex-shrink-0 bg-gray-100`}>\n                      <img \n                        src={item.productImage}\n                        alt={item.productName}\n                        className=\"w-full h-full object-cover\"\n                        loading=\"lazy\"\n                        decoding=\"async\"\n                        onError={(e) => {\n                          // Fallback to placeholder if image fails to load\n                          const target = e.target as HTMLImageElement;\n                          target.style.display = 'none';\n                          target.nextElementSibling?.classList.remove('hidden');\n                        }}\n                      />\n                      {/* Fallback placeholder */}\n                      <div className=\"hidden w-full h-full flex items-center justify-center\">\n                        <span className={`font-serif font-bold text-gray-400 ${isMobile ? 'text-lg' : 'text-2xl'}`}>\n                          {item.productName.charAt(0)}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"w-32 min-w-0\">\n                      <h3 className={`font-medium truncate ${isMobile ? 'text-xs' : 'text-sm'}`}>{item.productName}</h3>\n                      <p className={`text-terracotta font-bold ${isMobile ? 'text-xs' : ''}`}>₹{item.priceAtTime.toLocaleString()}</p>\n                      {!isMobile && (\n                        <p className=\"text-xs text-muted-foreground\">Qty: {item.quantity}</p>\n                      )}\n                    </div>\n                    \n                    {/* Quantity Controls - Mobile Vertical Layout */}\n                    {isMobile ? (\n                      <div className=\"flex flex-col items-center space-y-1\">\n                        <div className=\"flex items-center space-x-1\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleQuantityChange(item.productId, item.quantity - 1)}\n                            className=\"h-5 w-5 p-0\"\n                            disabled={isLoading}\n                          >\n                            <Minus className=\"w-2 h-2\" />\n                          </Button>\n                          <span className=\"w-4 text-center text-xs font-medium\">{item.quantity}</span>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleQuantityChange(item.productId, item.quantity + 1)}\n                            className=\"h-5 w-5 p-0\"\n                            disabled={isLoading}\n                          >\n                            <Plus className=\"w-2 h-2\" />\n                          </Button>\n                        </div>\n                        <p className=\"text-xs font-bold text-center\">₹{(item.priceAtTime * item.quantity).toLocaleString()}</p>\n                      </div>\n                    ) : (\n                      <>\n                        {/* Desktop Quantity Controls */}\n                        <div className=\"flex items-center space-x-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleQuantityChange(item.productId, item.quantity - 1)}\n                            className=\"h-8 w-8 p-0\"\n                            disabled={isLoading}\n                          >\n                            <Minus className=\"w-3 h-3\" />\n                          </Button>\n                          <span className=\"w-8 text-center font-medium\">{item.quantity}</span>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleQuantityChange(item.productId, item.quantity + 1)}\n                            className=\"h-8 w-8 p-0\"\n                            disabled={isLoading}\n                          >\n                            <Plus className=\"w-3 h-3\" />\n                          </Button>\n                        </div>\n                        \n                        {/* Line Total */}\n                        <div className=\"text-right\">\n                          <p className=\"font-bold\">₹{(item.priceAtTime * item.quantity).toLocaleString()}</p>\n                        </div>\n                      </>\n                    )}\n                  </div>\n                ))}\n                \n                {/* Pricing Breakdown */}\n                <div className={`${isMobile ? 'space-y-1 pt-2' : 'space-y-2 pt-3'}`}>\n                  <div className=\"flex justify-between\">\n                    <span>Subtotal:</span>\n                    <span>₹{subtotal.toLocaleString()}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Shipping:</span>\n                    <span className=\"text-green-600 font-medium\">Free</span>\n                  </div>\n                  {appliedCoupon && (\n                    <div className=\"flex justify-between text-green-600\">\n                      <span>Discount ({appliedCoupon}):</span>\n                      <span>-₹{discountAmount.toLocaleString()}</span>\n                    </div>\n                  )}\n                  \n                  {/* Applied Coupon Display */}\n                  {appliedCoupon && (\n                    <div className={`border-t ${isMobile ? 'pt-2' : 'pt-3'}`}>\n                      <div className=\"flex items-center justify-between bg-green-50 p-2 rounded border border-green-200\">\n                        <div className=\"flex items-center gap-2\">\n                          <Tag className=\"w-4 h-4 text-green-600\" />\n                          <span className={`font-medium text-green-700 ${isMobile ? 'text-sm' : ''}`}>\n                            {appliedCoupon} Applied\n                          </span>\n                        </div>\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\"\n                          onClick={handleRemoveCoupon}\n                          className=\"text-red-600 hover:text-red-700 h-auto p-1\"\n                        >\n                          Remove\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Coupon Section */}\n                  {!appliedCoupon && (\n                    <div className={`border-t ${isMobile ? 'pt-2' : 'pt-3'}`}>\n                      <div className={`flex items-center gap-2 ${isMobile ? 'mb-1' : 'mb-2'}`}>\n                        <Tag className=\"w-4 h-4\" />\n                        <span className={`font-medium ${isMobile ? 'text-sm' : ''}`}>Have a coupon?</span>\n                      </div>\n                      <div className={`flex ${isMobile ? 'gap-1' : 'gap-2'}`}>\n                        <Input\n                          placeholder=\"Enter coupon code\"\n                          value={couponCode}\n                          onChange={(e) => {\n                            setCouponCode(e.target.value);\n                            setCouponError('');\n                          }}\n                          className={`${couponError ? 'border-red-500' : ''} ${isMobile ? 'h-8 text-sm' : ''}`}\n                        />\n                        <Button \n                          variant=\"outline\" \n                          onClick={handleApplyCoupon}\n                          disabled={!couponCode.trim()}\n                          className={isMobile ? 'h-8 px-3 text-sm' : ''}\n                        >\n                          Apply\n                        </Button>\n                      </div>\n                      {couponError && (\n                        <p className=\"text-red-500 text-sm mt-1\">{couponError}</p>\n                      )}\n                      \n                      {/* Available Coupon for Apply Section */}\n                      <div className=\"mt-2 text-xs text-muted-foreground\">\n                        <p>Available: <span className=\"font-medium text-terracotta\">WELCOME10</span> - 10% off on your first order</p>\n                      </div>\n                    </div>\n                  )}\n                  \n                  <Separator />\n                  <div className=\"flex justify-between text-lg font-bold\">\n                    <span>Total:</span>\n                    <span className=\"text-terracotta\">₹{totalAmount.toLocaleString()}</span>\n                  </div>\n                  \n                  {/* Other Available Coupons - Not in Apply Section */}\n                  <div className={`border-t ${isMobile ? 'pt-2' : 'pt-3'} space-y-2`}>\n                    <div className=\"text-sm font-medium text-muted-foreground\">\n                      Other Special Offers:\n                    </div>\n                    <div className=\"space-y-1\">\n                      <div className={`bg-blue-50 p-2 rounded border border-blue-200 ${isMobile ? 'text-xs' : 'text-sm'}`}>\n                        <p className=\"font-medium text-blue-700\">REELLOVE10</p>\n                        <p className=\"text-blue-600\">10% off as a thank-you for commenting on our Instagram reel</p>\n                      </div>\n                      <div className={`bg-purple-50 p-2 rounded border border-purple-200 ${isMobile ? 'text-xs' : 'text-sm'}`}>\n                        <p className=\"font-medium text-purple-700\">VIP10</p>\n                        <p className=\"text-purple-600\">10% off for members of our VIP list</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Checkout Form - Right Side */}\n          <div className={isMobile ? 'space-y-3' : 'space-y-4'}>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <MapPin className=\"w-5 h-5\" />\n                  Shipping Information\n                </CardTitle>\n              </CardHeader>\n              <CardContent className={`${isMobile ? 'space-y-2' : 'space-y-3'}`}>\n                <div className={`grid grid-cols-2 ${isMobile ? 'gap-2' : 'gap-3'}`}>\n                  <div>\n                    <Label htmlFor=\"firstName\" className={isMobile ? 'text-sm' : ''}>First Name *</Label>\n                    <Input\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      value={formData.firstName}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter first name\"\n                      className={isMobile ? 'h-8 text-sm' : ''}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"lastName\" className={isMobile ? 'text-sm' : ''}>Last Name *</Label>\n                    <Input\n                      id=\"lastName\"\n                      name=\"lastName\"\n                      value={formData.lastName}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter last name\"\n                      className={isMobile ? 'h-8 text-sm' : ''}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"email\" className={isMobile ? 'text-sm' : ''}>Email Address *</Label>\n                  <div className=\"relative\">\n                    <Mail className=\"w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n                    <Input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      placeholder=\"your@email.com\"\n                      className={`pl-10 ${isMobile ? 'h-8 text-sm' : ''}`}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"phone\" className={isMobile ? 'text-sm' : ''}>Phone Number *</Label>\n                  <div className=\"relative\">\n                    <Phone className=\"w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n                    <Input\n                      id=\"phone\"\n                      name=\"phone\"\n                      type=\"tel\"\n                      value={formData.phone}\n                      onChange={handleInputChange}\n                      placeholder={isMobile ? \"Mobile number\" : \"10-digit mobile number\"}\n                      className={`pl-10 ${isMobile ? 'h-8 text-sm' : ''}`}\n                      maxLength={10}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"address\" className={isMobile ? 'text-sm' : ''}>Address *</Label>\n                  <Input\n                    id=\"address\"\n                    name=\"address\"\n                    value={formData.address}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter full address\"\n                    className={isMobile ? 'h-8 text-sm' : ''}\n                  />\n                </div>\n\n                <div className={`grid grid-cols-2 ${isMobile ? 'gap-2' : 'gap-4'}`}>\n                  <div>\n                    <Label htmlFor=\"city\" className={isMobile ? 'text-sm' : ''}>City *</Label>\n                    <Input\n                      id=\"city\"\n                      name=\"city\"\n                      value={formData.city}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter city\"\n                      className={isMobile ? 'h-8 text-sm' : ''}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"state\" className={isMobile ? 'text-sm' : ''}>State *</Label>\n                    <Input\n                      id=\"state\"\n                      name=\"state\"\n                      value={formData.state}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter state\"\n                      className={isMobile ? 'h-8 text-sm' : ''}\n                    />\n                  </div>\n                </div>\n\n                <div className={`grid grid-cols-2 ${isMobile ? 'gap-2' : 'gap-4'}`}>\n                  <div>\n                    <Label htmlFor=\"zipCode\" className={isMobile ? 'text-sm' : ''}>PIN Code *</Label>\n                    <Input\n                      id=\"zipCode\"\n                      name=\"zipCode\"\n                      value={formData.zipCode}\n                      onChange={handleInputChange}\n                      placeholder={isMobile ? \"PIN code\" : \"6-digit PIN code\"}\n                      className={isMobile ? 'h-8 text-sm' : ''}\n                      maxLength={6}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"country\" className={isMobile ? 'text-sm' : ''}>Country</Label>\n                    <Input\n                      id=\"country\"\n                      name=\"country\"\n                      value={formData.country}\n                      onChange={handleInputChange}\n                      readOnly\n                      className={`bg-muted ${isMobile ? 'h-8 text-sm' : ''}`}\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Payment Section */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <CreditCard className=\"w-5 h-5\" />\n                  Choose Payment Method\n                </CardTitle>\n              </CardHeader>\n              <CardContent className={isMobile ? 'space-y-2' : 'space-y-4'}>\n                {/* Razorpay Option */}\n                <div className={`border rounded-lg hover:bg-gray-50 transition-colors ${isMobile ? 'p-2' : 'p-4'}`}>\n                  <Button\n                    onClick={() => handlePaymentMethodSelect('razorpay')}\n                    disabled={isProcessing || isLoading}\n                    variant=\"outline\"\n                    className={`w-full justify-start h-auto ${isMobile ? 'gap-2 py-2' : 'gap-3 py-4'}`}\n                  >\n                    <div className={`${isMobile ? 'w-6 h-6' : 'w-8 h-8'} bg-blue-600 rounded flex items-center justify-center flex-shrink-0`}>\n                      <Wallet className={`${isMobile ? 'w-3 h-3' : 'w-4 h-4'} text-white`} />\n                    </div>\n                    <div className=\"text-left min-w-0 flex-1\">\n                      <p className={`font-medium ${isMobile ? 'text-sm' : ''}`}>Razorpay</p>\n                      <p className={`text-muted-foreground break-words ${isMobile ? 'text-xs' : 'text-sm'}`}>UPI, Cards, Net Banking, Wallets</p>\n                    </div>\n                  </Button>\n                </div>\n\n                {/* Cash on Delivery */}\n                <div className={`border rounded-lg hover:bg-gray-50 transition-colors ${isMobile ? 'p-2' : 'p-4'}`}>\n                  <Button\n                    onClick={() => handlePaymentMethodSelect('cod')}\n                    disabled={isProcessing || isLoading}\n                    variant=\"outline\"\n                    className={`w-full justify-start h-auto ${isMobile ? 'gap-2 py-2' : 'gap-3 py-4'}`}\n                  >\n                    <div className={`${isMobile ? 'w-6 h-6' : 'w-8 h-8'} bg-green-600 rounded flex items-center justify-center flex-shrink-0`}>\n                      <Truck className={`${isMobile ? 'w-3 h-3' : 'w-4 h-4'} text-white`} />\n                    </div>\n                    <div className=\"text-left min-w-0 flex-1\">\n                      <p className={`font-medium ${isMobile ? 'text-sm' : ''}`}>Cash on Delivery (COD)</p>\n                      <p className={`text-muted-foreground break-words ${isMobile ? 'text-xs' : 'text-sm'}`}>Pay when your order is delivered</p>\n                    </div>\n                  </Button>\n                </div>\n\n\n                {/* Processing State */}\n                {isProcessing && (\n                  <div className=\"text-center py-4\">\n                    <div className=\"inline-flex items-center gap-2 text-muted-foreground\">\n                      <div className=\"animate-spin w-4 h-4 border-2 border-terracotta border-t-transparent rounded-full\"></div>\n                      Processing your order...\n                    </div>\n                  </div>\n                )}\n\n                {/* Auto-download info */}\n                {razorpayResponse && (\n                  <div className=\"mt-4 p-3 bg-blue-50 rounded-lg border-l-4 border-blue-400\">\n                    <p className=\"text-sm text-blue-800\">\n                      📁 API Response automatically downloaded as TXT file\n                    </p>\n                    <p className=\"text-xs text-blue-600 mt-1\">\n                      Step: {razorpayResponse.step} • {new Date().toLocaleTimeString()}\n                    </p>\n                  </div>\n                )}\n\n                <div className=\"text-center pt-2\">\n                  <p className=\"text-lg font-bold text-terracotta\">\n                    Total: ₹{totalAmount.toLocaleString()}\n                  </p>\n                  <p className=\"text-xs text-muted-foreground mt-1\">\n                    Your information is secure and encrypted\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":39745},"client/src/pages/success.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Header } from '@/components/Header';\nimport { Footer } from '@/components/Footer';\nimport { CheckCircle, Package, Home, ShoppingBag } from 'lucide-react';\n\nexport default function SuccessPage() {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    // Auto redirect to home after 10 seconds\n    const timer = setTimeout(() => {\n      setLocation('/');\n    }, 10000);\n\n    return () => clearTimeout(timer);\n  }, [setLocation]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header variant=\"solid\" />\n      \n      <div className=\"container mx-auto px-6 py-12 mt-40\">\n        <div className=\"max-w-2xl mx-auto\">\n          <Card className=\"text-center py-12\">\n            <CardContent className=\"space-y-6\">\n              {/* Success Icon */}\n              <div className=\"flex justify-center\">\n                <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center\">\n                  <CheckCircle className=\"w-12 h-12 text-green-600\" />\n                </div>\n              </div>\n              \n              {/* Success Message */}\n              <div className=\"space-y-4\">\n                <h1 className=\"text-3xl font-serif font-bold text-foreground\">\n                  Order Placed Successfully!\n                </h1>\n                \n                <div className=\"space-y-2\">\n                  <p className=\"text-lg text-muted-foreground\">\n                    Thanks for ordering with us!\n                  </p>\n                  <p className=\"text-muted-foreground\">\n                    We will address your order shortly and deliver it to your doorstep.\n                  </p>\n                  <p className=\"text-lg font-medium text-terracotta\">\n                    Happy Shopping! 🎉\n                  </p>\n                </div>\n              </div>\n\n              {/* Order Details */}\n              <div className=\"bg-gray-50 rounded-lg p-6 space-y-4\">\n                <div className=\"flex items-center justify-center gap-2 text-muted-foreground\">\n                  <Package className=\"w-5 h-5\" />\n                  <span className=\"font-medium\">Your order is being processed</span>\n                </div>\n                \n                <div className=\"space-y-2 text-sm text-muted-foreground\">\n                  <p>• You will receive a confirmation call within 24 hours</p>\n                  <p>• Delivery will be done within 5-7 business days</p>\n                  <p>• Pay cash on delivery when your order arrives</p>\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-4 justify-center pt-6\">\n                <Button \n                  variant=\"outline\" \n                  onClick={() => setLocation('/shop')}\n                  className=\"gap-2\"\n                >\n                  <ShoppingBag className=\"w-4 h-4\" />\n                  Continue Shopping\n                </Button>\n                \n                <Button \n                  onClick={() => setLocation('/')}\n                  className=\"bg-terracotta hover:bg-terracotta-dark text-white gap-2\"\n                >\n                  <Home className=\"w-4 h-4\" />\n                  Back to Home\n                </Button>\n              </div>\n\n              {/* Auto redirect notice */}\n              <p className=\"text-xs text-muted-foreground\">\n                You will be automatically redirected to home in 10 seconds\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":3760},"client/src/pages/privacy.tsx":{"content":"import { useEffect } from \"react\";\nimport { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\n\nexport default function Privacy() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n      \n      <main className=\"py-16 bg-background\">\n        <div className=\"container mx-auto px-6 max-w-4xl\">\n          <div className=\"prose prose-lg max-w-none\">\n            <h1 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-8 text-center\">\n              Privacy Policy\n            </h1>\n            \n            <p className=\"text-center text-muted-foreground mb-12\">\n              <strong>Last Updated:</strong> 22.09.2025\n            </p>\n\n            <div className=\"space-y-8 text-foreground\">\n              <p className=\"text-lg leading-relaxed\">\n                Welcome to SM Furnishings (\"Company,\" \"we,\" \"our,\" or \"us\"). This Privacy Policy describes how we collect, use, and protect your personal information when you visit or make a purchase from www.smfurnishings.com (the \"Website\").\n              </p>\n              \n              <p className=\"text-lg leading-relaxed\">\n                By accessing or using our Website, you agree to the terms of this Privacy Policy. If you do not agree, please do not use the Website.\n              </p>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">1. Information We Collect</h2>\n                \n                <h3 className=\"font-semibold text-xl mb-3\">Personal Information (provided by you):</h3>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Name</li>\n                  <li>Email address</li>\n                  <li>Phone number (optional)</li>\n                  <li>Billing and shipping address</li>\n                  <li>Payment details (processed securely through third-party payment gateways)</li>\n                </ul>\n\n                <h3 className=\"font-semibold text-xl mb-3 mt-6\">Automatically Collected Information:</h3>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Browsing data (IP address, device type, browser type, operating system)</li>\n                  <li>Cookies and similar tracking technologies</li>\n                  <li>Website usage patterns, analytics, and preferences</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">2. How We Use Your Information</h2>\n                <p className=\"mb-3\">We use the collected information for:</p>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Processing and fulfilling your orders</li>\n                  <li>Managing payments and transactions</li>\n                  <li>Delivering products to your address</li>\n                  <li>Sending order updates, confirmations, and support communications</li>\n                  <li>Marketing, promotional offers, and newsletters (with your consent)</li>\n                  <li>Improving Website functionality, user experience, and services</li>\n                  <li>Compliance with legal obligations</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">3. Sharing of Information</h2>\n                <p className=\"mb-3\">We do not sell or rent your personal information. However, we may share your data with trusted third parties only for legitimate purposes, including:</p>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Payment Processors (e.g., Razorpay) for secure transaction handling</li>\n                  <li>Delivery & Logistics Partners (e.g., Delhivery) for product shipping</li>\n                  <li>Analytics & Marketing Tools (e.g., Google Analytics, Meta Ads) for performance insights</li>\n                  <li>Legal & Regulatory Authorities when required by applicable law</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">4. Cookies & Tracking Technologies</h2>\n                <p className=\"mb-3\">Our Website uses cookies to:</p>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Remember your preferences and cart items</li>\n                  <li>Provide a personalized shopping experience</li>\n                  <li>Measure and improve Website performance</li>\n                  <li>Deliver relevant advertisements</li>\n                </ul>\n                <p className=\"mt-4\">You can control or disable cookies through your browser settings. However, some features of the Website may not function properly without cookies.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">5. Data Security</h2>\n                <p>We implement industry-standard security measures to protect your personal information, including encryption and restricted access. However, no electronic storage or transmission over the Internet is 100% secure, and we cannot guarantee absolute security.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">6. Your Rights</h2>\n                <p className=\"mb-3\">As a user, you have the right to:</p>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Access and request a copy of your personal data</li>\n                  <li>Update or correct inaccurate information</li>\n                  <li>Opt out of marketing communications at any time</li>\n                  <li>Request deletion of your personal data (subject to legal or business requirements)</li>\n                </ul>\n                <p className=\"mt-4\">To exercise these rights, please contact us at smfurnishings.india@gmail.com.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">7. Data Retention</h2>\n                <p>We retain your personal data only as long as necessary for fulfilling orders, complying with legal obligations, resolving disputes, and enforcing our agreements.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">8. Third-Party Links</h2>\n                <p>Our Website may contain links to external sites. We are not responsible for the privacy practices or content of third-party websites.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">9. Compliance with Laws</h2>\n                <p className=\"mb-4\">This Privacy Policy is governed by the laws of India, including but not limited to the Information Technology Act, 2000 and applicable data protection rules.</p>\n                <p className=\"mb-4\">For customers in the EU, we follow key transparency and fairness principles of the General Data Protection Regulation (GDPR).</p>\n                <p>For customers in California (USA), we respect applicable rights under the California Consumer Privacy Act (CCPA).</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">10. Updates to This Policy</h2>\n                <p>We may update this Privacy Policy from time to time to reflect changes in technology, law, or business practices. Updates will be posted on this page with a revised \"Last Updated\" date.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">11. Contact Us</h2>\n                <p className=\"mb-4\">If you have questions or concerns about this Privacy Policy, please contact us at:</p>\n                <div className=\"bg-cream p-6 rounded-lg\">\n                  <h3 className=\"font-semibold text-lg mb-3\">SM Furnishings</h3>\n                  <p className=\"mb-2\">📧 Email: smfurnishings.india@gmail.com</p>\n                  <p>🏠 Address: 233, Model Town, Tosham Road, Hisar, Haryana – 125001</p>\n                </div>\n              </section>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":8637},"client/src/pages/returns.tsx":{"content":"import { useEffect } from \"react\";\nimport { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\n\nexport default function Returns() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n      \n      <main className=\"py-16 bg-background\">\n        <div className=\"container mx-auto px-6 max-w-4xl\">\n          <div className=\"prose prose-lg max-w-none\">\n            <h1 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-8 text-center\">\n              Returns & Exchanges Policy\n            </h1>\n            \n            <p className=\"text-center text-muted-foreground mb-12\">\n              <strong>Last Updated:</strong> 22.09.2025\n            </p>\n\n            <div className=\"space-y-8 text-foreground\">\n              <p className=\"text-lg leading-relaxed\">\n                At SM Furnishings, we want you to love your purchase. If you are not fully satisfied, we offer returns and exchanges under the terms outlined below.\n              </p>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">1. Eligibility for Returns & Exchanges</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Products must be unused, unwashed, and in their original packaging with tags intact.</li>\n                  <li>Returns or exchanges must be requested within 7 days of delivery.</li>\n                  <li>Products that have been used, washed, stained, or damaged after delivery will not be eligible.</li>\n                  <li>Custom-made or discounted/sale items may not be eligible for returns unless defective.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">2. Non-Returnable Items</h2>\n                <p className=\"mb-3\">The following items cannot be returned or exchanged:</p>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Products purchased on clearance or final sale.</li>\n                  <li>Gift cards or vouchers.</li>\n                  <li>Customized or personalized items.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">3. Process for Returns & Exchanges</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>To initiate a return/exchange, please contact us at smfurnishings.india@gmail.com with your order number.</li>\n                  <li>Once approved, we will arrange a pickup through our logistics partner or ask you to self-ship (depending on your location).</li>\n                  <li>Returned items will be inspected before processing a refund or exchange.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">4. Refunds</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Approved refunds will be issued to the original method of payment (credit card, debit card, UPI, wallet, etc.).</li>\n                  <li>Please allow 7–10 business days for the refund to reflect in your account.</li>\n                  <li>In cases where pickup is not possible, you may be required to ship the product back at your own cost.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">5. Exchanges</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>If you wish to exchange your product for a different design or size, please mention it when requesting the return.</li>\n                  <li>Exchanges are subject to stock availability. If the requested product is unavailable, a refund will be issued instead.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">6. Damaged or Defective Products</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>If you receive a damaged or defective product, please contact us within 48 hours of delivery with images of the issue.</li>\n                  <li>We will arrange a free replacement or full refund after verification.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">7. Cancellations</h2>\n                <p>Orders cannot be cancelled once placed.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">8. Contact Us</h2>\n                <p className=\"mb-4\">For any questions about returns, refunds, or exchanges, please contact:</p>\n                <div className=\"bg-cream p-6 rounded-lg\">\n                  <h3 className=\"font-semibold text-lg mb-3\">SM Furnishings</h3>\n                  <p className=\"mb-2\">📧 Email: smfurnishings.india@gmail.com</p>\n                  <p>🏠 Address: 233, Model Town, Tosham Road, Hisar, Haryana – 125001</p>\n                </div>\n              </section>\n\n              <section className=\"bg-cream p-8 rounded-lg\">\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-6\">Frequently Asked Questions (FAQs)</h2>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"font-semibold text-lg mb-2\">About SM Furnishings</h3>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <p className=\"font-medium\">Q. What makes SM Furnishings unique?</p>\n                        <p className=\"text-muted-foreground\">We combine luxury, minimal design, and affordability, bringing premium-quality home furnishings into everyday living.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. Where are your products made?</p>\n                        <p className=\"text-muted-foreground\">All our products are designed and crafted in India, with a focus on detail, comfort, and durability.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-lg mb-2\">Orders & Payments</h3>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <p className=\"font-medium\">Q. How can I place an order?</p>\n                        <p className=\"text-muted-foreground\">Simply browse our collections, add your favorites to the cart, and proceed to checkout.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. What payment methods do you accept?</p>\n                        <p className=\"text-muted-foreground\">We accept credit/debit cards, UPI, net banking, and wallet payments via secure gateways like Razorpay.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. Can I modify or cancel my order after placing it?</p>\n                        <p className=\"text-muted-foreground\">No, orders cannot be cancelled once placed.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-lg mb-2\">Shipping & Delivery</h3>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <p className=\"font-medium\">Q. Do you ship all over India?</p>\n                        <p className=\"text-muted-foreground\">Yes, we deliver across India through trusted partners like Delhivery.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. How long does delivery take?</p>\n                        <p className=\"text-muted-foreground\">Most orders are delivered within 6–8 business days, depending on your location.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. How can I track my order?</p>\n                        <p className=\"text-muted-foreground\">Once shipped, you'll receive a tracking link via SMS/email to follow your package.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-lg mb-2\">Returns & Exchanges</h3>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <p className=\"font-medium\">Q. What is your return policy?</p>\n                        <p className=\"text-muted-foreground\">You can request a return/exchange within 7 days of delivery (unused and in original packaging).</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. How do I initiate a return?</p>\n                        <p className=\"text-muted-foreground\">Contact us at smfurnishings.india@gmail.com with your order number, and we'll guide you through the process.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. When will I get my refund?</p>\n                        <p className=\"text-muted-foreground\">Refunds are processed within 7–10 business days after the product is received and inspected.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. Do you accept exchanges?</p>\n                        <p className=\"text-muted-foreground\">Yes, exchanges are possible for different designs/sizes, subject to availability.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-lg mb-2\">Product Care</h3>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <p className=\"font-medium\">Q. How do I care for my bedsheets and covers?</p>\n                        <div className=\"text-muted-foreground\">\n                          <p>• Machine wash in cold water with mild detergent.</p>\n                          <p>• Avoid bleach and harsh chemicals.</p>\n                          <p>• Tumble dry low or line dry in shade.</p>\n                          <p>• Iron on low heat if required.</p>\n                        </div>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. Will the colors fade after washing?</p>\n                        <p className=\"text-muted-foreground\">Our fabrics are made with high-quality dyes designed for durability. Following care instructions ensures long-lasting vibrancy.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-lg mb-2\">Gifting & Customization</h3>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <p className=\"font-medium\">Q. Do you offer gifting options?</p>\n                        <p className=\"text-muted-foreground\">Yes, our products make perfect gifts. We also provide gift packaging on request.</p>\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">Q. Can I place a bulk or customized order?</p>\n                        <p className=\"text-muted-foreground\">For bulk or custom inquiries, please contact us directly at smfurnishings.india@gmail.com.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-lg mb-2\">Contact Us</h3>\n                    <div>\n                      <p className=\"font-medium mb-2\">Didn't find what you were looking for? We're here to help.</p>\n                      <p className=\"text-muted-foreground\">📧 Email: smfurnishings.india@gmail.com</p>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":12655},"client/src/pages/terms.tsx":{"content":"import { useEffect } from \"react\";\nimport { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\n\nexport default function Terms() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header className=\"relative bg-white border-b shadow-sm\" variant=\"solid\" />\n      \n      <main className=\"py-16 bg-background\">\n        <div className=\"container mx-auto px-6 max-w-4xl\">\n          <div className=\"prose prose-lg max-w-none\">\n            <h1 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-8 text-center\">\n              Terms of Service\n            </h1>\n            \n            <p className=\"text-center text-muted-foreground mb-12\">\n              <strong>Last Updated:</strong> 22.09.2025\n            </p>\n\n            <div className=\"space-y-8 text-foreground\">\n              <p className=\"text-lg leading-relaxed\">\n                Welcome to SM Furnishings (\"Company,\" \"we,\" \"our,\" or \"us\"). These Terms of Service (\"Terms\") govern your use of our website www.smfurnishings.com (the \"Website\") and the purchase of our products.\n              </p>\n              \n              <p className=\"text-lg leading-relaxed\">\n                By accessing or using our Website, you agree to comply with these Terms. If you do not agree, you may not use the Website.\n              </p>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">1. Eligibility</h2>\n                <p>By using our Website, you confirm that you are at least 18 years of age or are using the Website under the supervision of a parent or legal guardian.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">2. Account Registration</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>You may be required to create an account to place an order.</li>\n                  <li>You are responsible for maintaining the confidentiality of your login credentials.</li>\n                  <li>You agree to provide accurate and complete information during registration and update it as necessary.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">3. Orders & Payments</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>By placing an order, you agree to purchase the selected product(s) at the stated price, including applicable taxes and shipping charges.</li>\n                  <li>Prices and availability are subject to change without prior notice.</li>\n                  <li>Payments are processed securely through third-party payment gateways (e.g., Razorpay). We are not responsible for errors or failures caused by such third parties.</li>\n                  <li>Orders will be confirmed only after successful payment authorization.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">4. Shipping & Delivery</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>We partner with trusted logistics providers (e.g., Delhivery) to deliver your orders.</li>\n                  <li>Estimated delivery times are 6–8 business days, depending on your location.</li>\n                  <li>We are not liable for delays caused by courier companies, customs clearance, or unforeseen events.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">5. Returns, Refunds & Cancellations</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Returns and exchanges are subject to our Returns & Exchanges Policy.</li>\n                  <li>Products must be unused, unwashed, and in original packaging to qualify for returns.</li>\n                  <li>Refunds, where applicable, will be processed through the original method of payment within 7–10 business days.</li>\n                  <li>Orders cannot be cancelled once placed.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">6. Intellectual Property</h2>\n                <p>All content on the Website, including text, images, logos, graphics, and designs, is the intellectual property of SM Furnishings and protected under applicable copyright and trademark laws.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">7. User Conduct</h2>\n                <p className=\"mb-3\">When using our Website, you agree not to:</p>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>Violate any laws or regulations.</li>\n                  <li>Post false, misleading, or harmful information.</li>\n                  <li>Attempt to hack, disrupt, or gain unauthorized access to our systems.</li>\n                  <li>Use the Website for fraudulent purposes.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">8. Limitation of Liability</h2>\n                <p className=\"mb-4\">We strive to ensure accuracy of product descriptions, pricing, and availability. However, errors may occur, and we reserve the right to correct them.</p>\n                <p>To the maximum extent permitted by law, SM Furnishings shall not be liable for any indirect, incidental, or consequential damages arising out of your use of the Website or purchase of products.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">9. Indemnification</h2>\n                <p>You agree to indemnify and hold harmless SM Furnishings, its employees, partners, and affiliates against any claims, damages, or expenses arising from your use of the Website or violation of these Terms.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">10. Governing Law & Dispute Resolution</h2>\n                <ul className=\"list-disc list-inside space-y-2 ml-4\">\n                  <li>These Terms are governed by the laws of India.</li>\n                  <li>Any disputes shall be subject to the exclusive jurisdiction of the courts of Hisar, Haryana.</li>\n                </ul>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">11. Amendments</h2>\n                <p>We reserve the right to update or modify these Terms at any time. Updates will be posted on this page with a revised \"Last Updated\" date. Continued use of the Website constitutes acceptance of the updated Terms.</p>\n              </section>\n\n              <section>\n                <h2 className=\"font-serif text-2xl font-bold text-terracotta mb-4\">12. Contact Us</h2>\n                <p className=\"mb-4\">If you have any questions about these Terms, please contact us at:</p>\n                <div className=\"bg-cream p-6 rounded-lg\">\n                  <h3 className=\"font-semibold text-lg mb-3\">SM Furnishings</h3>\n                  <p className=\"mb-2\">📧 Email: smfurnishings.india@gmail.com</p>\n                  <p>🏠 Address: 233, Model Town, Tosham Road, Hisar, Haryana – 125001</p>\n                </div>\n              </section>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":7884},"client/src/components/WishlistSidebar.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { useWishlist } from '@/lib/wishlistContext';\nimport { useCart } from '@/lib/cartContext';\nimport { useToast } from '@/hooks/use-toast';\nimport { formatPrice, getProductImageUrl } from '@/lib/api';\nimport { \n  X, \n  Heart, \n  ShoppingCart, \n  Trash2, \n  Package,\n  Sparkles,\n  ArrowRight\n} from 'lucide-react';\nimport { useLocation } from 'wouter';\n\nexport function WishlistSidebar() {\n  const {\n    wishlistItems,\n    wishlistCount,\n    isWishlistOpen,\n    setIsWishlistOpen,\n    removeFromWishlist,\n    clearWishlist\n  } = useWishlist();\n  \n  const { addToCart } = useCart();\n  const { toast } = useToast();\n  const [, setLocation] = useLocation();\n  const [animatingItems, setAnimatingItems] = useState<Set<string>>(new Set());\n\n  const handleAddToCart = async (productId: string, event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const item = wishlistItems.find(item => item.id === productId);\n    if (!item) return;\n\n    try {\n      setAnimatingItems(prev => {\n        const newSet = new Set(prev);\n        newSet.add(productId);\n        return newSet;\n      });\n      \n      await addToCart(productId, 1);\n      \n      // Automatically remove item from wishlist after successfully adding to cart\n      removeFromWishlist(productId);\n      \n      toast({\n        title: \"Added to cart\",\n        description: `${item.product.Product_Name} has been moved to your cart`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to add item to cart. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setTimeout(() => {\n        setAnimatingItems(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(productId);\n          return newSet;\n        });\n      }, 600);\n    }\n  };\n\n  const handleRemoveFromWishlist = (productId: string, event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    removeFromWishlist(productId);\n  };\n\n  const handleProductClick = (productId: string) => {\n    setLocation(`/product/${productId}`);\n    setIsWishlistOpen(false);\n  };\n\n  const handleClearAll = () => {\n    clearWishlist();\n  };\n\n  return (\n    <>\n      {/* Backdrop */}\n      {isWishlistOpen && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 transition-opacity duration-300\"\n          onClick={() => setIsWishlistOpen(false)}\n        />\n      )}\n      \n      {/* Sidebar */}\n      <div className={`\n        fixed top-0 right-0 h-full w-96 bg-white shadow-2xl z-50 transition-transform duration-300 ease-in-out transform\n        ${isWishlistOpen ? 'translate-x-0' : 'translate-x-full'}\n      `}>\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b bg-gradient-to-r from-terracotta to-terracotta-dark text-white\">\n          <div className=\"flex items-center space-x-3\">\n            <Heart className=\"w-6 h-6 fill-current\" />\n            <h2 className=\"text-xl font-semibold\">My Wishlist</h2>\n            {wishlistCount > 0 && (\n              <Badge className=\"bg-white text-terracotta font-bold\">\n                {wishlistCount}\n              </Badge>\n            )}\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setIsWishlistOpen(false)}\n            className=\"text-white hover:bg-white/20 transition-colors\"\n          >\n            <X className=\"w-5 h-5\" />\n          </Button>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex flex-col h-full\">\n          {wishlistItems.length === 0 ? (\n            /* Empty State */\n            <div className=\"flex-1 flex flex-col items-center justify-center p-8 text-center\">\n              <div className=\"w-24 h-24 bg-terracotta/10 rounded-full flex items-center justify-center mb-6\">\n                <Heart className=\"w-12 h-12 text-terracotta/40\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Your wishlist is empty</h3>\n              <p className=\"text-gray-500 mb-6\">Save items you love for later by clicking the heart icon</p>\n              <Button\n                onClick={() => {\n                  setLocation('/shop');\n                  setIsWishlistOpen(false);\n                }}\n                className=\"bg-terracotta hover:bg-terracotta-dark text-white\"\n              >\n                <Sparkles className=\"w-4 h-4 mr-2\" />\n                Start Shopping\n              </Button>\n            </div>\n          ) : (\n            /* Wishlist Items */\n            <>\n              {/* Clear All Button */}\n              <div className=\"p-4 border-b\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleClearAll}\n                  className=\"w-full text-gray-600 hover:text-red-600 hover:border-red-300\"\n                >\n                  <Trash2 className=\"w-4 h-4 mr-2\" />\n                  Clear All ({wishlistCount})\n                </Button>\n              </div>\n\n              {/* Scrollable Items List */}\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                {wishlistItems.map((item) => (\n                  <Card \n                    key={item.id} \n                    className=\"group hover:shadow-lg transition-all duration-200 cursor-pointer border-gray-200 hover:border-terracotta/30\"\n                    onClick={() => handleProductClick(item.id)}\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex space-x-3\">\n                        {/* Product Image */}\n                        <div className=\"w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg flex-shrink-0 overflow-hidden\">\n                          <img \n                            src={getProductImageUrl(item.product, 0)}\n                            alt={item.product.Product_Name}\n                            className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-200\"\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                            onError={(e) => {\n                              // Fallback to placeholder if image fails to load\n                              const target = e.target as HTMLImageElement;\n                              target.style.display = 'none';\n                              target.nextElementSibling?.classList.remove('hidden');\n                            }}\n                          />\n                          {/* Fallback placeholder */}\n                          <div \n                            className=\"hidden w-full h-full flex items-center justify-center text-2xl font-serif font-bold text-gray-400 group-hover:scale-105 transition-transform duration-200\"\n                            style={{\n                              background: `linear-gradient(135deg, ${item.product.Color ? '#B8734C' : '#6B7280'}20, ${item.product.Color ? '#B8734C' : '#6B7280'}40)`\n                            }}\n                          >\n                            {item.product.Product_Name.charAt(0)}\n                          </div>\n                        </div>\n\n                        {/* Product Details */}\n                        <div className=\"flex-1 min-w-0\">\n                          <h4 className=\"font-medium text-gray-900 text-sm leading-5 group-hover:text-terracotta transition-colors duration-200 truncate\">\n                            {item.product.Product_Name}\n                          </h4>\n                          <p className=\"text-xs text-gray-500 mt-1\">\n                            {item.product.Category} • {item.product.Color}\n                          </p>\n                          <div className=\"flex items-center justify-between mt-2\">\n                            <span className=\"text-lg font-bold text-terracotta\">\n                              {formatPrice(item.product.Selling_Price)}\n                            </span>\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              {item.product.Collection}\n                            </Badge>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Action Buttons */}\n                      <div className=\"flex space-x-2 mt-3\">\n                        <Button\n                          size=\"sm\"\n                          className={`flex-1 text-xs ${animatingItems.has(item.id) ? 'bg-green-500' : 'bg-terracotta'} hover:bg-terracotta-dark text-white transition-all duration-200`}\n                          onClick={(e) => handleAddToCart(item.id, e)}\n                          disabled={animatingItems.has(item.id)}\n                        >\n                          {animatingItems.has(item.id) ? (\n                            <>\n                              <div className=\"w-3 h-3 border border-white border-t-transparent rounded-full animate-spin mr-1\" />\n                              Adding...\n                            </>\n                          ) : (\n                            <>\n                              <ShoppingCart className=\"w-3 h-3 mr-1\" />\n                              Add to Cart\n                            </>\n                          )}\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className=\"text-gray-500 hover:text-red-600 hover:border-red-300 transition-colors\"\n                          onClick={(e) => handleRemoveFromWishlist(item.id, e)}\n                        >\n                          <Trash2 className=\"w-3 h-3\" />\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n\n              <Separator />\n\n              {/* Footer Actions */}\n              <div className=\"p-4 space-y-3\">\n                <Button\n                  className=\"w-full bg-terracotta hover:bg-terracotta-dark text-white font-semibold\"\n                  onClick={() => {\n                    setLocation('/shop');\n                    setIsWishlistOpen(false);\n                  }}\n                >\n                  <Package className=\"w-4 h-4 mr-2\" />\n                  Continue Shopping\n                  <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </Button>\n                \n                <p className=\"text-xs text-gray-500 text-center\">\n                  {wishlistCount} item{wishlistCount !== 1 ? 's' : ''} saved for later\n                </p>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}","size_bytes":11044},"client/src/lib/wishlistContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode, useRef } from 'react';\nimport { ApiProduct, fetchProductById } from './api';\nimport { useAuth } from './authContext';\nimport { useToast } from '@/hooks/use-toast';\n\nexport interface WishlistItem {\n  id: string;\n  product: ApiProduct;\n  addedAt: string;\n}\n\ninterface WishlistContextType {\n  wishlistItems: WishlistItem[];\n  wishlistCount: number;\n  isWishlistOpen: boolean;\n  setIsWishlistOpen: (open: boolean) => void;\n  addToWishlist: (productId: string) => Promise<void>;\n  removeFromWishlist: (productId: string) => void;\n  clearWishlist: () => void;\n  isInWishlist: (productId: string) => boolean;\n  toggleWishlist: (productId: string) => Promise<void>;\n  isLoading: boolean;\n}\n\nconst WishlistContext = createContext<WishlistContextType | undefined>(undefined);\n\nexport function WishlistProvider({ children }: { children: ReactNode }) {\n  const [wishlistItems, setWishlistItems] = useState<WishlistItem[]>([]);\n  const [isWishlistOpen, setIsWishlistOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { isAuthenticated, user } = useAuth();\n  const { toast } = useToast();\n\n  // Track current storage key and load state to prevent data corruption\n  const currentKeyRef = useRef<string | null>(null);\n  const hasLoadedRef = useRef(false);\n\n  const wishlistCount = wishlistItems.length;\n\n  // Get storage key based on user\n  const getStorageKey = () => {\n    const userKey = isAuthenticated && user ? user.id : 'guest';\n    return `wishlist_${userKey}`;\n  };\n\n  // Load wishlist from localStorage on mount and user changes\n  useEffect(() => {\n    loadWishlist();\n  }, [isAuthenticated, user]);\n\n  // Save wishlist to localStorage whenever it changes (but only after initial load)\n  useEffect(() => {\n    if (hasLoadedRef.current && currentKeyRef.current) {\n      const storageKey = getStorageKey();\n      // Only save if the current key matches what we loaded from\n      if (storageKey === currentKeyRef.current) {\n        localStorage.setItem(storageKey, JSON.stringify(wishlistItems));\n        console.log('💝 Wishlist saved to localStorage:', wishlistItems);\n      }\n    }\n  }, [wishlistItems]);\n\n  const loadWishlist = () => {\n    try {\n      const storageKey = getStorageKey();\n      currentKeyRef.current = storageKey;\n      const storedWishlist = localStorage.getItem(storageKey);\n      \n      if (storedWishlist) {\n        const parsedWishlist: WishlistItem[] = JSON.parse(storedWishlist);\n        setWishlistItems(parsedWishlist);\n        console.log('💝 Wishlist loaded from localStorage:', parsedWishlist);\n      } else {\n        setWishlistItems([]);\n        console.log('💝 No existing wishlist found, initialized empty wishlist');\n      }\n      \n      hasLoadedRef.current = true;\n    } catch (error) {\n      console.error('❌ Error loading wishlist from localStorage:', error);\n      setWishlistItems([]);\n      hasLoadedRef.current = true;\n    }\n  };\n\n  const addToWishlist = async (productId: string) => {\n    if (isInWishlist(productId)) {\n      toast({\n        title: \"Already in wishlist\",\n        description: \"This item is already in your wishlist\",\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      // Fetch product details\n      const product = await fetchProductById(productId);\n      \n      const newWishlistItem: WishlistItem = {\n        id: productId,\n        product,\n        addedAt: new Date().toISOString()\n      };\n\n      setWishlistItems(prev => [newWishlistItem, ...prev]);\n      \n      toast({\n        title: \"Added to wishlist\",\n        description: `${product.Product_Name} has been added to your wishlist`,\n      });\n    } catch (error) {\n      console.error('Error adding to wishlist:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to add item to wishlist. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeFromWishlist = (productId: string) => {\n    const item = wishlistItems.find(item => item.id === productId);\n    setWishlistItems(prev => prev.filter(item => item.id !== productId));\n    \n    if (item) {\n      toast({\n        title: \"Removed from wishlist\",\n        description: `${item.product.Product_Name} has been removed from your wishlist`,\n      });\n    }\n  };\n\n  const clearWishlist = () => {\n    setWishlistItems([]);\n    const storageKey = getStorageKey();\n    localStorage.removeItem(storageKey);\n    \n    toast({\n      title: \"Wishlist cleared\",\n      description: \"All items have been removed from your wishlist\",\n    });\n  };\n\n  const isInWishlist = (productId: string): boolean => {\n    return wishlistItems.some(item => item.id === productId);\n  };\n\n  const toggleWishlist = async (productId: string) => {\n    if (isInWishlist(productId)) {\n      removeFromWishlist(productId);\n    } else {\n      await addToWishlist(productId);\n    }\n  };\n\n  const value: WishlistContextType = {\n    wishlistItems,\n    wishlistCount,\n    isWishlistOpen,\n    setIsWishlistOpen,\n    addToWishlist,\n    removeFromWishlist,\n    clearWishlist,\n    isInWishlist,\n    toggleWishlist,\n    isLoading\n  };\n\n  return (\n    <WishlistContext.Provider value={value}>\n      {children}\n    </WishlistContext.Provider>\n  );\n}\n\nexport function useWishlist() {\n  const context = useContext(WishlistContext);\n  if (context === undefined) {\n    throw new Error('useWishlist must be used within a WishlistProvider');\n  }\n  return context;\n}","size_bytes":5506},"client/src/pages/faqs.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronUp } from \"lucide-react\";\n\nexport default function FAQsPage() {\n  const [showScrollTop, setShowScrollTop] = useState(false);\n\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // Show/hide scroll to top button based on scroll position\n  useEffect(() => {\n    const handleScroll = () => {\n      setShowScrollTop(window.scrollY > 300);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <Header variant=\"solid\" className=\"sticky top-0 bg-white shadow-sm z-50\" />\n\n      {/* Main Content */}\n      <main className=\"pt-8 pb-16\">\n        <div className=\"container mx-auto px-6 max-w-4xl\">\n          {/* Page Header */}\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl font-serif font-bold text-foreground mb-4\">\n              Frequently Asked Questions\n            </h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Find answers to common questions about SM Furnishings\n            </p>\n          </div>\n\n          {/* FAQ Sections */}\n          <div className=\"space-y-8\">\n            {/* About SM Furnishings */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-serif text-terracotta\">About SM Furnishings</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. What makes SM Furnishings unique?</h3>\n                  <p className=\"text-muted-foreground\">We combine luxury, minimal design, and affordability, bringing premium-quality home furnishings into everyday living.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. Where are your products made?</h3>\n                  <p className=\"text-muted-foreground\">All our products are designed and crafted in India, with a focus on detail, comfort, and durability.</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Orders & Payments */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-serif text-terracotta\">Orders & Payments</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. How can I place an order?</h3>\n                  <p className=\"text-muted-foreground\">Simply browse our collections, add your favorites to the cart, and proceed to checkout.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. What payment methods do you accept?</h3>\n                  <p className=\"text-muted-foreground\">We accept credit/debit cards, UPI, net banking, and wallet payments via secure gateways like Razorpay.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. Can I modify or cancel my order after placing it?</h3>\n                  <p className=\"text-muted-foreground\">No, orders cannot be cancelled once placed.</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Shipping & Delivery */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-serif text-terracotta\">Shipping & Delivery</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. Do you ship all over India?</h3>\n                  <p className=\"text-muted-foreground\">Yes, we deliver across India through trusted partners like Delhivery.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. How long does delivery take?</h3>\n                  <p className=\"text-muted-foreground\">Most orders are delivered within 6–8 business days, depending on your location.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. How can I track my order?</h3>\n                  <p className=\"text-muted-foreground\">Once shipped, you'll receive a tracking link via SMS/email to follow your package.</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Returns & Exchanges */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-serif text-terracotta\">Returns & Exchanges</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. What is your return policy?</h3>\n                  <p className=\"text-muted-foreground\">You can request a return/exchange within 7 days of delivery (unused and in original packaging).</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. How do I initiate a return?</h3>\n                  <p className=\"text-muted-foreground\">Contact us at smfurnishings.india@gmail.com with your order number, and we'll guide you through the process.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. When will I get my refund?</h3>\n                  <p className=\"text-muted-foreground\">Refunds are processed within 7–10 business days after the product is received and inspected.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. Do you accept exchanges?</h3>\n                  <p className=\"text-muted-foreground\">Yes, exchanges are possible for different designs/sizes, subject to availability.</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Product Care */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-serif text-terracotta\">Product Care</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. How do I care for my bedsheets and covers?</h3>\n                  <div className=\"text-muted-foreground space-y-2\">\n                    <p>• Machine wash in cold water with mild detergent.</p>\n                    <p>• Avoid bleach and harsh chemicals.</p>\n                    <p>• Tumble dry low or line dry in shade.</p>\n                    <p>• Iron on low heat if required.</p>\n                  </div>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. Will the colors fade after washing?</h3>\n                  <p className=\"text-muted-foreground\">Our fabrics are made with high-quality dyes designed for durability. Following care instructions ensures long-lasting vibrancy.</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Gifting & Customization */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-serif text-terracotta\">Gifting & Customization</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. Do you offer gifting options?</h3>\n                  <p className=\"text-muted-foreground\">Yes, our products make perfect gifts. We also provide gift packaging on request.</p>\n                </div>\n                <Separator />\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Q. Can I place a bulk or customized order?</h3>\n                  <p className=\"text-muted-foreground\">For bulk or custom inquiries, please contact us directly at smfurnishings.india@gmail.com.</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Contact Us */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-serif text-terracotta\">Contact Us</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Didn't find what you were looking for? We're here to help.\n                  </p>\n                  <p className=\"font-semibold\">\n                    📧 Email: <a href=\"mailto:smfurnishings.india@gmail.com\" className=\"text-terracotta hover:underline\">smfurnishings.india@gmail.com</a>\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n\n      {/* Footer */}\n      <Footer />\n\n      {/* Scroll to Top Button */}\n      {showScrollTop && (\n        <Button\n          onClick={scrollToTop}\n          className=\"fixed bottom-8 right-8 z-50 w-12 h-12 rounded-full bg-terracotta hover:bg-terracotta-dark text-white shadow-lg transition-all duration-300\"\n          size=\"icon\"\n        >\n          <ChevronUp className=\"w-5 h-5\" />\n        </Button>\n      )}\n    </div>\n  );\n}","size_bytes":9923},"client/src/components/ScrollToTop.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\n\nexport function ScrollToTop() {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [location]);\n\n  return null;\n}","size_bytes":251}},"version":1}